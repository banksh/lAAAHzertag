

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Aug 17 02:14:41 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	12LF1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  008C                     	;# 
    47  0091                     	;# 
    48  0092                     	;# 
    49  0093                     	;# 
    50  0095                     	;# 
    51  0096                     	;# 
    52  0097                     	;# 
    53  0098                     	;# 
    54  0099                     	;# 
    55  009A                     	;# 
    56  009B                     	;# 
    57  009B                     	;# 
    58  009C                     	;# 
    59  009D                     	;# 
    60  009E                     	;# 
    61  009F                     	;# 
    62  010C                     	;# 
    63  0111                     	;# 
    64  0112                     	;# 
    65  0115                     	;# 
    66  0116                     	;# 
    67  0117                     	;# 
    68  0118                     	;# 
    69  0119                     	;# 
    70  011D                     	;# 
    71  011D                     	;# 
    72  018C                     	;# 
    73  0191                     	;# 
    74  0191                     	;# 
    75  0192                     	;# 
    76  0193                     	;# 
    77  0193                     	;# 
    78  0194                     	;# 
    79  0195                     	;# 
    80  0196                     	;# 
    81  0197                     	;# 
    82  0199                     	;# 
    83  019A                     	;# 
    84  019B                     	;# 
    85  019B                     	;# 
    86  019C                     	;# 
    87  019D                     	;# 
    88  019E                     	;# 
    89  019F                     	;# 
    90  020C                     	;# 
    91  028C                     	;# 
    92  030C                     	;# 
    93  038C                     	;# 
    94  0391                     	;# 
    95  0392                     	;# 
    96  0393                     	;# 
    97  0691                     	;# 
    98  0692                     	;# 
    99  0693                     	;# 
   100  0694                     	;# 
   101  0695                     	;# 
   102  0D8E                     	;# 
   103  0D8F                     	;# 
   104  0D90                     	;# 
   105  0D91                     	;# 
   106  0D91                     	;# 
   107  0D92                     	;# 
   108  0D93                     	;# 
   109  0D93                     	;# 
   110  0D94                     	;# 
   111  0D95                     	;# 
   112  0D95                     	;# 
   113  0D96                     	;# 
   114  0D97                     	;# 
   115  0D97                     	;# 
   116  0D98                     	;# 
   117  0D99                     	;# 
   118  0D99                     	;# 
   119  0D9A                     	;# 
   120  0D9B                     	;# 
   121  0D9C                     	;# 
   122  0D9C                     	;# 
   123  0D9D                     	;# 
   124  0D9D                     	;# 
   125  0D9E                     	;# 
   126  0D9F                     	;# 
   127  0DA0                     	;# 
   128  0DA1                     	;# 
   129  0DA1                     	;# 
   130  0DA2                     	;# 
   131  0DA3                     	;# 
   132  0DA3                     	;# 
   133  0DA4                     	;# 
   134  0DA5                     	;# 
   135  0DA5                     	;# 
   136  0DA6                     	;# 
   137  0DA7                     	;# 
   138  0DA7                     	;# 
   139  0DA8                     	;# 
   140  0DA9                     	;# 
   141  0DA9                     	;# 
   142  0DAA                     	;# 
   143  0DAB                     	;# 
   144  0DAC                     	;# 
   145  0DAC                     	;# 
   146  0DAD                     	;# 
   147  0DAD                     	;# 
   148  0DAE                     	;# 
   149  0DAF                     	;# 
   150  0DB0                     	;# 
   151  0DB1                     	;# 
   152  0DB1                     	;# 
   153  0DB2                     	;# 
   154  0DB3                     	;# 
   155  0DB3                     	;# 
   156  0DB4                     	;# 
   157  0DB5                     	;# 
   158  0DB5                     	;# 
   159  0DB6                     	;# 
   160  0DB7                     	;# 
   161  0DB7                     	;# 
   162  0DB8                     	;# 
   163  0DB9                     	;# 
   164  0DB9                     	;# 
   165  0DBA                     	;# 
   166  0DBB                     	;# 
   167  0DBC                     	;# 
   168  0DBC                     	;# 
   169  0DBD                     	;# 
   170  0DBD                     	;# 
   171  0DBE                     	;# 
   172  0DBF                     	;# 
   173  0DC0                     	;# 
   174  0FE4                     	;# 
   175  0FE5                     	;# 
   176  0FE6                     	;# 
   177  0FE7                     	;# 
   178  0FE8                     	;# 
   179  0FE8                     	;# 
   180  0FE9                     	;# 
   181  0FEA                     	;# 
   182  0FEA                     	;# 
   183  0FEB                     	;# 
   184  0FED                     	;# 
   185  0FEE                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  008C                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  0111                     	;# 
   231  0112                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0117                     	;# 
   235  0118                     	;# 
   236  0119                     	;# 
   237  011D                     	;# 
   238  011D                     	;# 
   239  018C                     	;# 
   240  0191                     	;# 
   241  0191                     	;# 
   242  0192                     	;# 
   243  0193                     	;# 
   244  0193                     	;# 
   245  0194                     	;# 
   246  0195                     	;# 
   247  0196                     	;# 
   248  0197                     	;# 
   249  0199                     	;# 
   250  019A                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019C                     	;# 
   254  019D                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  020C                     	;# 
   258  028C                     	;# 
   259  030C                     	;# 
   260  038C                     	;# 
   261  0391                     	;# 
   262  0392                     	;# 
   263  0393                     	;# 
   264  0691                     	;# 
   265  0692                     	;# 
   266  0693                     	;# 
   267  0694                     	;# 
   268  0695                     	;# 
   269  0D8E                     	;# 
   270  0D8F                     	;# 
   271  0D90                     	;# 
   272  0D91                     	;# 
   273  0D91                     	;# 
   274  0D92                     	;# 
   275  0D93                     	;# 
   276  0D93                     	;# 
   277  0D94                     	;# 
   278  0D95                     	;# 
   279  0D95                     	;# 
   280  0D96                     	;# 
   281  0D97                     	;# 
   282  0D97                     	;# 
   283  0D98                     	;# 
   284  0D99                     	;# 
   285  0D99                     	;# 
   286  0D9A                     	;# 
   287  0D9B                     	;# 
   288  0D9C                     	;# 
   289  0D9C                     	;# 
   290  0D9D                     	;# 
   291  0D9D                     	;# 
   292  0D9E                     	;# 
   293  0D9F                     	;# 
   294  0DA0                     	;# 
   295  0DA1                     	;# 
   296  0DA1                     	;# 
   297  0DA2                     	;# 
   298  0DA3                     	;# 
   299  0DA3                     	;# 
   300  0DA4                     	;# 
   301  0DA5                     	;# 
   302  0DA5                     	;# 
   303  0DA6                     	;# 
   304  0DA7                     	;# 
   305  0DA7                     	;# 
   306  0DA8                     	;# 
   307  0DA9                     	;# 
   308  0DA9                     	;# 
   309  0DAA                     	;# 
   310  0DAB                     	;# 
   311  0DAC                     	;# 
   312  0DAC                     	;# 
   313  0DAD                     	;# 
   314  0DAD                     	;# 
   315  0DAE                     	;# 
   316  0DAF                     	;# 
   317  0DB0                     	;# 
   318  0DB1                     	;# 
   319  0DB1                     	;# 
   320  0DB2                     	;# 
   321  0DB3                     	;# 
   322  0DB3                     	;# 
   323  0DB4                     	;# 
   324  0DB5                     	;# 
   325  0DB5                     	;# 
   326  0DB6                     	;# 
   327  0DB7                     	;# 
   328  0DB7                     	;# 
   329  0DB8                     	;# 
   330  0DB9                     	;# 
   331  0DB9                     	;# 
   332  0DBA                     	;# 
   333  0DBB                     	;# 
   334  0DBC                     	;# 
   335  0DBC                     	;# 
   336  0DBD                     	;# 
   337  0DBD                     	;# 
   338  0DBE                     	;# 
   339  0DBF                     	;# 
   340  0DC0                     	;# 
   341  0FE4                     	;# 
   342  0FE5                     	;# 
   343  0FE6                     	;# 
   344  0FE7                     	;# 
   345  0FE8                     	;# 
   346  0FE8                     	;# 
   347  0FE9                     	;# 
   348  0FEA                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355                           
   356                           	psect	idataCOMMON
   357  0513                     __pidataCOMMON:	
   358                           
   359                           ;initializer for _my_id
   360  0513  3480               	retlw	128
   361  0016                     _TMR1	set	22
   362  000B                     _INTCONbits	set	11
   363  0011                     _PIR1bits	set	17
   364  000C                     _PORTAbits	set	12
   365  0018                     _T1CONbits	set	24
   366  009D                     _ADCON0	set	157
   367  009D                     _ADCON0bits	set	157
   368  009E                     _ADCON1	set	158
   369  009C                     _ADRESH	set	156
   370  009B                     _ADRESL	set	155
   371  0099                     _OSCCON	set	153
   372  0091                     _PIE1bits	set	145
   373  008C                     _TRISAbits	set	140
   374  04E8                     _ADON	set	1256
   375  04EA                     _CHS0	set	1258
   376  04EB                     _CHS1	set	1259
   377  04E9                     _GO	set	1257
   378  0118                     _DACCON0bits	set	280
   379  018C                     _ANSELA	set	396
   380  019F                     _BAUDCONbits	set	415
   381  0199                     _RCREG	set	409
   382  019D                     _RCSTAbits	set	413
   383  019B                     _SPBRGL	set	411
   384  019A                     _TXREG	set	410
   385  019E                     _TXSTAbits	set	414
   386  0DB3                     _PWM3DC	set	3507
   387  0DB1                     _PWM3PH	set	3505
   388  0DB5                     _PWM3PR	set	3509
   389  0DBB                     _PWM3CONbits	set	3515
   390  0DBF                     _PWM3LDCONbits	set	3519
   391                           
   392                           ; #config settings
   393  0000                     
   394                           	psect	cinit
   395  001E                     start_initialization:	
   396  001E                     __initialization:	
   397                           
   398                           ; Clear objects allocated to BANK0
   399  001E  01AE               	clrf	__pbssBANK0& (0+127)
   400  001F  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   401                           
   402                           ; Initialize objects allocated to COMMON
   403  0020  2513               	fcall	__pidataCOMMON	;fetch initializer
   404  0021  00FC               	movwf	__pdataCOMMON& (0+127)
   405  0022                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0022                     __end_of__initialization:	
   409  0022  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   410  0023  0020               	movlb	0
   411  0024  2CD1               	ljmp	_main	;jump to C main() function
   412                           
   413                           	psect	dataCOMMON
   414  007C                     __pdataCOMMON:	
   415  007C                     _my_id:	
   416  007C                     	ds	1
   417                           
   418                           	psect	bssBANK0
   419  002E                     __pbssBANK0:	
   420  002E                     _my_power_level:	
   421  002E                     	ds	1
   422  002F                     _my_random_number:	
   423  002F                     	ds	1
   424                           
   425                           	psect	cstackCOMMON
   426  0070                     __pcstackCOMMON:	
   427  0070                     ?_Send_Byte:	
   428  0070                     ?_Setup:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0070                     ?_Modulate_Serial:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0070                     ?_Disable_Modulation:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0070                     ?_control_transfer:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0070                     ?_Fire:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  0070                     ?_main:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0070                     ?_High_Priority_Interrupt:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  0070                     ??_High_Priority_Interrupt:	
   450                           ; 0 bytes @ 0x0
   451                           
   452                           
   453                           ; 0 bytes @ 0x0
   454  0070                     	ds	1
   455  0071                     ??_Send_Byte:	
   456  0071                     ??_Setup:	
   457                           ; 0 bytes @ 0x1
   458                           
   459  0071                     ??_Modulate_Serial:	
   460                           ; 0 bytes @ 0x1
   461                           
   462  0071                     ??_Disable_Modulation:	
   463                           ; 0 bytes @ 0x1
   464                           
   465  0071                     ?___aldiv:	
   466                           ; 0 bytes @ 0x1
   467                           
   468  0071                     Send_Byte@data:	
   469                           ; 4 bytes @ 0x1
   470                           
   471  0071                     ___aldiv@divisor:	
   472                           ; 1 bytes @ 0x1
   473                           
   474                           
   475                           ; 4 bytes @ 0x1
   476  0071                     	ds	1
   477  0072                     ??_control_transfer:	
   478                           
   479                           ; 0 bytes @ 0x2
   480  0072                     	ds	3
   481  0075                     ___aldiv@dividend:	
   482                           
   483                           ; 4 bytes @ 0x5
   484  0075                     	ds	4
   485  0079                     ??___aldiv:	
   486                           
   487                           ; 0 bytes @ 0x9
   488  0079                     	ds	1
   489  007A                     ??_Buzz:	
   490                           
   491                           ; 0 bytes @ 0xA
   492  007A                     	ds	2
   493  007C                     ??_Fire:	
   494                           
   495                           	psect	cstackBANK0
   496  0020                     __pcstackBANK0:	
   497                           ; 0 bytes @ 0xC
   498                           
   499  0020                     control_transfer@cmd:	
   500  0020                     ___aldiv@counter:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 1 bytes @ 0x0
   505  0020                     	ds	1
   506  0021                     control_transfer@power_level:	
   507  0021                     ___aldiv@sign:	
   508                           ; 1 bytes @ 0x1
   509                           
   510                           
   511                           ; 1 bytes @ 0x1
   512  0021                     	ds	1
   513  0022                     control_transfer@random_number:	
   514  0022                     ___aldiv@quotient:	
   515                           ; 1 bytes @ 0x2
   516                           
   517                           
   518                           ; 4 bytes @ 0x2
   519  0022                     	ds	1
   520  0023                     control_transfer@id:	
   521                           
   522                           ; 1 bytes @ 0x3
   523  0023                     	ds	1
   524  0024                     control_transfer@checksum:	
   525                           
   526                           ; 1 bytes @ 0x4
   527  0024                     	ds	1
   528  0025                     control_transfer@i:	
   529                           
   530                           ; 2 bytes @ 0x5
   531  0025                     	ds	1
   532  0026                     ?_Buzz:	
   533  0026                     Buzz@freq:	
   534                           ; 0 bytes @ 0x6
   535                           
   536                           
   537                           ; 2 bytes @ 0x6
   538  0026                     	ds	1
   539  0027                     control_transfer@y:	
   540                           
   541                           ; 1 bytes @ 0x7
   542  0027                     	ds	1
   543  0028                     control_transfer@x:	
   544  0028                     Buzz@dur_ms:	
   545                           ; 1 bytes @ 0x8
   546                           
   547                           
   548                           ; 2 bytes @ 0x8
   549  0028                     	ds	2
   550  002A                     Buzz@i:	
   551                           
   552                           ; 2 bytes @ 0xA
   553  002A                     	ds	2
   554  002C                     ??_main:	
   555                           
   556                           ; 0 bytes @ 0xC
   557  002C                     	ds	1
   558  002D                     main@b:	
   559                           
   560                           ; 1 bytes @ 0xD
   561  002D                     	ds	1
   562                           
   563                           	psect	maintext
   564  04D1                     __pmaintext:	
   565 ;;
   566 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   567 ;;
   568 ;; *************** function _main *****************
   569 ;; Defined at:
   570 ;;		line 103 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  b               1   13[BANK0 ] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;		None               void
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 17F/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   584 ;;      Params:         0       0       0       0
   585 ;;      Locals:         0       1       0       0
   586 ;;      Temps:          0       1       0       0
   587 ;;      Totals:         0       2       0       0
   588 ;;Total ram usage:        2 bytes
   589 ;; Hardware stack levels required when called:    4
   590 ;; This function calls:
   591 ;;		_Fire
   592 ;;		_Setup
   593 ;;		_control_transfer
   594 ;; This function is called by:
   595 ;;		Startup code after reset
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _main
   601  04D1                     _main:	
   602                           
   603                           ;main.c: 105: uint8_t b;
   604                           ;main.c: 107: Setup();
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   608  04D1  24BB               	fcall	_Setup
   609  04D2                     l145:	
   610                           ;main.c: 109: while(1)
   611                           
   612                           
   613                           ;main.c: 110: {
   614                           ;main.c: 129: Fire();
   615  04D2  24E2               	fcall	_Fire
   616                           
   617                           ;main.c: 130: if((PIR1bits.RCIF))
   618  04D3  0020               	movlb	0	; select bank0
   619  04D4  1E91               	btfss	17,5	;volatile
   620  04D5  2CD2               	goto	l145
   621                           
   622                           ;main.c: 131: {
   623                           ;main.c: 132: b=(RCREG);
   624  04D6  0023               	movlb	3	; select bank3
   625  04D7  0819               	movf	25,w	;volatile
   626  04D8  0020               	movlb	0	; select bank0
   627  04D9  00AC               	movwf	??_main
   628  04DA  082C               	movf	??_main,w
   629  04DB  00AD               	movwf	main@b
   630                           
   631                           ;main.c: 133: if(b == 0x10)
   632  04DC  082D               	movf	main@b,w
   633  04DD  3A10               	xorlw	16
   634  04DE  1D03               	skipz
   635  04DF  2CD2               	goto	l145
   636                           
   637                           ;main.c: 134: control_transfer();
   638  04E0  2025               	fcall	_control_transfer
   639  04E1  2CD2               	goto	l145
   640  04E2                     __end_of_main:	
   641                           
   642                           	psect	text1
   643  0025                     __ptext1:	
   644 ;; *************** function _control_transfer *****************
   645 ;; Defined at:
   646 ;;		line 49 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  i               2    5[BANK0 ] unsigned int 
   651 ;;  x               1    8[BANK0 ] unsigned char 
   652 ;;  y               1    7[BANK0 ] unsigned char 
   653 ;;  checksum        1    4[BANK0 ] unsigned char 
   654 ;;  id              1    3[BANK0 ] unsigned char 
   655 ;;  random_numbe    1    2[BANK0 ] unsigned char 
   656 ;;  power_level     1    1[BANK0 ] unsigned char 
   657 ;;  cmd             1    0[BANK0 ] unsigned char 
   658 ;; Return value:  Size  Location     Type
   659 ;;		None               void
   660 ;; Registers used:
   661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   667 ;;      Params:         0       0       0       0
   668 ;;      Locals:         0       9       0       0
   669 ;;      Temps:          2       0       0       0
   670 ;;      Totals:         2       9       0       0
   671 ;;Total ram usage:       11 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    3
   674 ;; This function calls:
   675 ;;		_Send_Byte
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _control_transfer
   683  0025                     _control_transfer:	
   684                           
   685                           ;main.c: 51: uint8_t x,y,checksum;
   686                           ;main.c: 52: uint16_t i;
   687                           ;main.c: 54: uint8_t cmd;
   688                           ;main.c: 55: uint8_t power_level,random_number,id;
   689                           ;main.c: 57: checksum = 0; i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(160
      +                          00000/4000000.0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF
      +                          ) {_delay((unsigned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _control_transfer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   693  0025  0020               	movlb	0	; select bank0
   694  0026  01A4               	clrf	control_transfer@checksum
   695  0027  01A5               	clrf	control_transfer@i
   696  0028  01A6               	clrf	control_transfer@i+1
   697  0029                     l23:	
   698  0029  1A91               	btfsc	17,5	;volatile
   699  002A  283C               	goto	l1566
   700  002B  3085               	movlw	133
   701  002C  00F2               	movwf	??_control_transfer
   702  002D                     u2727:	
   703  002D  0BF2               	decfsz	??_control_transfer,f
   704  002E  282D               	goto	u2727
   705  002F  3001               	movlw	1
   706  0030  0020               	movlb	0	; select bank0
   707  0031  07A5               	addwf	control_transfer@i,f
   708  0032  3000               	movlw	0
   709  0033  3DA6               	addwfc	control_transfer@i+1,f
   710  0034  3003               	movlw	3
   711  0035  0226               	subwf	control_transfer@i+1,w
   712  0036  30E8               	movlw	232
   713  0037  1903               	skipnz
   714  0038  0225               	subwf	control_transfer@i,w
   715  0039  1803               	btfsc	3,0
   716  003A  0008               	return
   717  003B  2829               	goto	l23
   718  003C                     l1566:	
   719  003C  0023               	movlb	3	; select bank3
   720  003D  0819               	movf	25,w	;volatile
   721  003E  00F2               	movwf	??_control_transfer
   722  003F  0872               	movf	??_control_transfer,w
   723  0040  0020               	movlb	0	; select bank0
   724  0041  00A8               	movwf	control_transfer@x
   725  0042  01A5               	clrf	control_transfer@i
   726  0043  01A6               	clrf	control_transfer@i+1
   727  0044                     l28:	
   728  0044  1A91               	btfsc	17,5	;volatile
   729  0045  2857               	goto	l1574
   730  0046  3085               	movlw	133
   731  0047  00F2               	movwf	??_control_transfer
   732  0048                     u2737:	
   733  0048  0BF2               	decfsz	??_control_transfer,f
   734  0049  2848               	goto	u2737
   735  004A  3001               	movlw	1
   736  004B  0020               	movlb	0	; select bank0
   737  004C  07A5               	addwf	control_transfer@i,f
   738  004D  3000               	movlw	0
   739  004E  3DA6               	addwfc	control_transfer@i+1,f
   740  004F  3003               	movlw	3
   741  0050  0226               	subwf	control_transfer@i+1,w
   742  0051  30E8               	movlw	232
   743  0052  1903               	skipnz
   744  0053  0225               	subwf	control_transfer@i,w
   745  0054  1803               	btfsc	3,0
   746  0055  0008               	return
   747  0056  2844               	goto	l28
   748  0057                     l1574:	
   749  0057  0023               	movlb	3	; select bank3
   750  0058  0819               	movf	25,w	;volatile
   751  0059  00F2               	movwf	??_control_transfer
   752  005A  0872               	movf	??_control_transfer,w
   753  005B  0020               	movlb	0	; select bank0
   754  005C  00A7               	movwf	control_transfer@y
   755  005D  0828               	movf	control_transfer@x,w
   756  005E  39F0               	andlw	240
   757  005F  1D03               	btfss	3,2
   758  0060  0008               	return
   759  0061  0827               	movf	control_transfer@y,w
   760  0062  39F0               	andlw	240
   761  0063  1D03               	btfss	3,2
   762  0064  0008               	return
   763  0065  0827               	movf	control_transfer@y,w
   764  0066  00F2               	movwf	??_control_transfer
   765  0067  3003               	movlw	3
   766  0068                     u1985:	
   767  0068  35F2               	lslf	??_control_transfer,f
   768  0069  3EFF               	addlw	-1
   769  006A  1D03               	skipz
   770  006B  2868               	goto	u1985
   771  006C  3572               	lslf	??_control_transfer,w
   772  006D  0428               	iorwf	control_transfer@x,w
   773  006E  00F3               	movwf	??_control_transfer+1
   774  006F  0873               	movf	??_control_transfer+1,w
   775  0070  00A8               	movwf	control_transfer@x
   776  0071  0828               	movf	control_transfer@x,w
   777  0072  00F2               	movwf	??_control_transfer
   778  0073  0872               	movf	??_control_transfer,w
   779  0074  07A4               	addwf	control_transfer@checksum,f
   780  0075  0828               	movf	control_transfer@x,w
   781  0076  067C               	xorwf	_my_id,w
   782  0077  1D03               	btfss	3,2
   783  0078  0008               	return
   784                           
   785                           ;main.c: 58: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
   786  0079  01A5               	clrf	control_transfer@i
   787  007A  01A6               	clrf	control_transfer@i+1
   788  007B                     l36:	
   789  007B  1A91               	btfsc	17,5	;volatile
   790  007C  288E               	goto	l1592
   791  007D  3085               	movlw	133
   792  007E  00F2               	movwf	??_control_transfer
   793  007F                     u2747:	
   794  007F  0BF2               	decfsz	??_control_transfer,f
   795  0080  287F               	goto	u2747
   796  0081  3001               	movlw	1
   797  0082  0020               	movlb	0	; select bank0
   798  0083  07A5               	addwf	control_transfer@i,f
   799  0084  3000               	movlw	0
   800  0085  3DA6               	addwfc	control_transfer@i+1,f
   801  0086  3003               	movlw	3
   802  0087  0226               	subwf	control_transfer@i+1,w
   803  0088  30E8               	movlw	232
   804  0089  1903               	skipnz
   805  008A  0225               	subwf	control_transfer@i,w
   806  008B  1803               	btfsc	3,0
   807  008C  0008               	return
   808  008D  287B               	goto	l36
   809  008E                     l1592:	
   810  008E  0023               	movlb	3	; select bank3
   811  008F  0819               	movf	25,w	;volatile
   812  0090  00F2               	movwf	??_control_transfer
   813  0091  0872               	movf	??_control_transfer,w
   814  0092  0020               	movlb	0	; select bank0
   815  0093  00A8               	movwf	control_transfer@x
   816  0094  01A5               	clrf	control_transfer@i
   817  0095  01A6               	clrf	control_transfer@i+1
   818  0096                     l40:	
   819  0096  1A91               	btfsc	17,5	;volatile
   820  0097  28A9               	goto	l1600
   821  0098  3085               	movlw	133
   822  0099  00F2               	movwf	??_control_transfer
   823  009A                     u2757:	
   824  009A  0BF2               	decfsz	??_control_transfer,f
   825  009B  289A               	goto	u2757
   826  009C  3001               	movlw	1
   827  009D  0020               	movlb	0	; select bank0
   828  009E  07A5               	addwf	control_transfer@i,f
   829  009F  3000               	movlw	0
   830  00A0  3DA6               	addwfc	control_transfer@i+1,f
   831  00A1  3003               	movlw	3
   832  00A2  0226               	subwf	control_transfer@i+1,w
   833  00A3  30E8               	movlw	232
   834  00A4  1903               	skipnz
   835  00A5  0225               	subwf	control_transfer@i,w
   836  00A6  1803               	btfsc	3,0
   837  00A7  0008               	return
   838  00A8  2896               	goto	l40
   839  00A9                     l1600:	
   840  00A9  0023               	movlb	3	; select bank3
   841  00AA  0819               	movf	25,w	;volatile
   842  00AB  00F2               	movwf	??_control_transfer
   843  00AC  0872               	movf	??_control_transfer,w
   844  00AD  0020               	movlb	0	; select bank0
   845  00AE  00A7               	movwf	control_transfer@y
   846  00AF  0828               	movf	control_transfer@x,w
   847  00B0  39F0               	andlw	240
   848  00B1  1D03               	btfss	3,2
   849  00B2  0008               	return
   850  00B3  0827               	movf	control_transfer@y,w
   851  00B4  39F0               	andlw	240
   852  00B5  1D03               	btfss	3,2
   853  00B6  0008               	return
   854  00B7  0827               	movf	control_transfer@y,w
   855  00B8  00F2               	movwf	??_control_transfer
   856  00B9  3003               	movlw	3
   857  00BA                     u2065:	
   858  00BA  35F2               	lslf	??_control_transfer,f
   859  00BB  3EFF               	addlw	-1
   860  00BC  1D03               	skipz
   861  00BD  28BA               	goto	u2065
   862  00BE  3572               	lslf	??_control_transfer,w
   863  00BF  0428               	iorwf	control_transfer@x,w
   864  00C0  00F3               	movwf	??_control_transfer+1
   865  00C1  0873               	movf	??_control_transfer+1,w
   866  00C2  00A0               	movwf	control_transfer@cmd
   867  00C3  0820               	movf	control_transfer@cmd,w
   868  00C4  00F2               	movwf	??_control_transfer
   869  00C5  0872               	movf	??_control_transfer,w
   870  00C6  07A4               	addwf	control_transfer@checksum,f
   871                           
   872                           ;main.c: 60: switch(cmd)
   873  00C7  2BE3               	goto	l1902
   874  00C8                     l1608:	
   875                           ;main.c: 61: {
   876                           ;main.c: 62: case 0x01:
   877                           
   878                           
   879                           ;main.c: 64: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
   880  00C8  01A5               	clrf	control_transfer@i
   881  00C9  01A6               	clrf	control_transfer@i+1
   882  00CA                     l49:	
   883  00CA  1A91               	btfsc	17,5	;volatile
   884  00CB  28DD               	goto	l1614
   885  00CC  3085               	movlw	133
   886  00CD  00F2               	movwf	??_control_transfer
   887  00CE                     u2767:	
   888  00CE  0BF2               	decfsz	??_control_transfer,f
   889  00CF  28CE               	goto	u2767
   890  00D0  3001               	movlw	1
   891  00D1  0020               	movlb	0	; select bank0
   892  00D2  07A5               	addwf	control_transfer@i,f
   893  00D3  3000               	movlw	0
   894  00D4  3DA6               	addwfc	control_transfer@i+1,f
   895  00D5  3003               	movlw	3
   896  00D6  0226               	subwf	control_transfer@i+1,w
   897  00D7  30E8               	movlw	232
   898  00D8  1903               	skipnz
   899  00D9  0225               	subwf	control_transfer@i,w
   900  00DA  1803               	btfsc	3,0
   901  00DB  0008               	return
   902  00DC  28CA               	goto	l49
   903  00DD                     l1614:	
   904  00DD  0023               	movlb	3	; select bank3
   905  00DE  0819               	movf	25,w	;volatile
   906  00DF  00F2               	movwf	??_control_transfer
   907  00E0  0872               	movf	??_control_transfer,w
   908  00E1  0020               	movlb	0	; select bank0
   909  00E2  00A8               	movwf	control_transfer@x
   910  00E3  01A5               	clrf	control_transfer@i
   911  00E4  01A6               	clrf	control_transfer@i+1
   912  00E5                     l53:	
   913  00E5  1A91               	btfsc	17,5	;volatile
   914  00E6  28F8               	goto	l1622
   915  00E7  3085               	movlw	133
   916  00E8  00F2               	movwf	??_control_transfer
   917  00E9                     u2777:	
   918  00E9  0BF2               	decfsz	??_control_transfer,f
   919  00EA  28E9               	goto	u2777
   920  00EB  3001               	movlw	1
   921  00EC  0020               	movlb	0	; select bank0
   922  00ED  07A5               	addwf	control_transfer@i,f
   923  00EE  3000               	movlw	0
   924  00EF  3DA6               	addwfc	control_transfer@i+1,f
   925  00F0  3003               	movlw	3
   926  00F1  0226               	subwf	control_transfer@i+1,w
   927  00F2  30E8               	movlw	232
   928  00F3  1903               	skipnz
   929  00F4  0225               	subwf	control_transfer@i,w
   930  00F5  1803               	btfsc	3,0
   931  00F6  0008               	return
   932  00F7  28E5               	goto	l53
   933  00F8                     l1622:	
   934  00F8  0023               	movlb	3	; select bank3
   935  00F9  0819               	movf	25,w	;volatile
   936  00FA  00F2               	movwf	??_control_transfer
   937  00FB  0872               	movf	??_control_transfer,w
   938  00FC  0020               	movlb	0	; select bank0
   939  00FD  00A7               	movwf	control_transfer@y
   940  00FE  0828               	movf	control_transfer@x,w
   941  00FF  39F0               	andlw	240
   942  0100  1D03               	btfss	3,2
   943  0101  0008               	return
   944  0102  0827               	movf	control_transfer@y,w
   945  0103  39F0               	andlw	240
   946  0104  1D03               	btfss	3,2
   947  0105  0008               	return
   948  0106  0827               	movf	control_transfer@y,w
   949  0107  00F2               	movwf	??_control_transfer
   950  0108  3003               	movlw	3
   951  0109                     u2135:	
   952  0109  35F2               	lslf	??_control_transfer,f
   953  010A  3EFF               	addlw	-1
   954  010B  1D03               	skipz
   955  010C  2909               	goto	u2135
   956  010D  3572               	lslf	??_control_transfer,w
   957  010E  0428               	iorwf	control_transfer@x,w
   958  010F  00F3               	movwf	??_control_transfer+1
   959  0110  0873               	movf	??_control_transfer+1,w
   960  0111  00A8               	movwf	control_transfer@x
   961  0112  0828               	movf	control_transfer@x,w
   962  0113  00F2               	movwf	??_control_transfer
   963  0114  0872               	movf	??_control_transfer,w
   964  0115  07A4               	addwf	control_transfer@checksum,f
   965  0116  0824               	movf	control_transfer@checksum,w
   966  0117  1D03               	skipz
   967  0118  0008               	return
   968  0119  01A5               	clrf	control_transfer@i
   969  011A  01A6               	clrf	control_transfer@i+1
   970  011B                     l61:	
   971  011B  1A91               	btfsc	17,5	;volatile
   972  011C  292E               	goto	l1640
   973  011D  3085               	movlw	133
   974  011E  00F2               	movwf	??_control_transfer
   975  011F                     u2787:	
   976  011F  0BF2               	decfsz	??_control_transfer,f
   977  0120  291F               	goto	u2787
   978  0121  3001               	movlw	1
   979  0122  0020               	movlb	0	; select bank0
   980  0123  07A5               	addwf	control_transfer@i,f
   981  0124  3000               	movlw	0
   982  0125  3DA6               	addwfc	control_transfer@i+1,f
   983  0126  3003               	movlw	3
   984  0127  0226               	subwf	control_transfer@i+1,w
   985  0128  30E8               	movlw	232
   986  0129  1903               	skipnz
   987  012A  0225               	subwf	control_transfer@i,w
   988  012B  1803               	btfsc	3,0
   989  012C  0008               	return
   990  012D  291B               	goto	l61
   991  012E                     l1640:	
   992  012E  0023               	movlb	3	; select bank3
   993  012F  0819               	movf	25,w	;volatile
   994  0130  00F2               	movwf	??_control_transfer
   995  0131  0872               	movf	??_control_transfer,w
   996  0132  0020               	movlb	0	; select bank0
   997  0133  00A8               	movwf	control_transfer@x
   998  0134  0828               	movf	control_transfer@x,w
   999  0135  3A11               	xorlw	17
  1000  0136  1D03               	btfss	3,2
  1001  0137  0008               	return
  1002                           
  1003                           ;main.c: 65: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1004  0138  3010               	movlw	16
  1005  0139  2500               	fcall	_Send_Byte
  1006  013A  0020               	movlb	0	; select bank0
  1007  013B  01A4               	clrf	control_transfer@checksum
  1008  013C  087C               	movf	_my_id,w
  1009  013D  390F               	andlw	15
  1010  013E  00F2               	movwf	??_control_transfer
  1011  013F  0872               	movf	??_control_transfer,w
  1012  0140  00A8               	movwf	control_transfer@x
  1013  0141  087C               	movf	_my_id,w
  1014  0142  00F2               	movwf	??_control_transfer
  1015  0143  3004               	movlw	4
  1016  0144                     u2185:	
  1017  0144  36F2               	lsrf	??_control_transfer,f
  1018  0145  0B89               	decfsz	9,f
  1019  0146  2944               	goto	u2185
  1020  0147  0872               	movf	??_control_transfer,w
  1021  0148  00F3               	movwf	??_control_transfer+1
  1022  0149  0873               	movf	??_control_transfer+1,w
  1023  014A  00A7               	movwf	control_transfer@y
  1024  014B  0828               	movf	control_transfer@x,w
  1025  014C  2500               	fcall	_Send_Byte
  1026  014D  0020               	movlb	0	; select bank0
  1027  014E  0827               	movf	control_transfer@y,w
  1028  014F  2500               	fcall	_Send_Byte
  1029  0150  087C               	movf	_my_id,w
  1030  0151  0020               	movlb	0	; select bank0
  1031  0152  02A4               	subwf	control_transfer@checksum,f
  1032                           
  1033                           ;main.c: 66: x = 0x02 & 0x0F; y = 0x02 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          2;
  1034  0153  3002               	movlw	2
  1035  0154  00F2               	movwf	??_control_transfer
  1036  0155  0872               	movf	??_control_transfer,w
  1037  0156  00A8               	movwf	control_transfer@x
  1038  0157  01A7               	clrf	control_transfer@y
  1039  0158  0828               	movf	control_transfer@x,w
  1040  0159  2500               	fcall	_Send_Byte
  1041  015A  0020               	movlb	0	; select bank0
  1042  015B  0827               	movf	control_transfer@y,w
  1043  015C  2500               	fcall	_Send_Byte
  1044  015D  3002               	movlw	2
  1045  015E  0020               	movlb	0	; select bank0
  1046  015F  02A4               	subwf	control_transfer@checksum,f
  1047                           
  1048                           ;main.c: 67: x = my_random_number & 0x0F; y = my_random_number >> 4; Send_Byte(x); Send_
      +                          Byte(y); checksum -= my_random_number;
  1049  0160  082F               	movf	_my_random_number,w
  1050  0161  390F               	andlw	15
  1051  0162  00F2               	movwf	??_control_transfer
  1052  0163  0872               	movf	??_control_transfer,w
  1053  0164  00A8               	movwf	control_transfer@x
  1054  0165  082F               	movf	_my_random_number,w
  1055  0166  00F2               	movwf	??_control_transfer
  1056  0167  3004               	movlw	4
  1057  0168                     u2195:	
  1058  0168  36F2               	lsrf	??_control_transfer,f
  1059  0169  0B89               	decfsz	9,f
  1060  016A  2968               	goto	u2195
  1061  016B  0872               	movf	??_control_transfer,w
  1062  016C  00F3               	movwf	??_control_transfer+1
  1063  016D  0873               	movf	??_control_transfer+1,w
  1064  016E  00A7               	movwf	control_transfer@y
  1065  016F  0828               	movf	control_transfer@x,w
  1066  0170  2500               	fcall	_Send_Byte
  1067  0171  0020               	movlb	0	; select bank0
  1068  0172  0827               	movf	control_transfer@y,w
  1069  0173  2500               	fcall	_Send_Byte
  1070  0174  0020               	movlb	0	; select bank0
  1071  0175  082F               	movf	_my_random_number,w
  1072  0176  02A4               	subwf	control_transfer@checksum,f
  1073                           
  1074                           ;main.c: 68: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1075  0177  0824               	movf	control_transfer@checksum,w
  1076  0178  390F               	andlw	15
  1077  0179  00F2               	movwf	??_control_transfer
  1078  017A  0872               	movf	??_control_transfer,w
  1079  017B  00A8               	movwf	control_transfer@x
  1080  017C  0824               	movf	control_transfer@checksum,w
  1081  017D  00F2               	movwf	??_control_transfer
  1082  017E  3004               	movlw	4
  1083  017F                     u2205:	
  1084  017F  36F2               	lsrf	??_control_transfer,f
  1085  0180  0B89               	decfsz	9,f
  1086  0181  297F               	goto	u2205
  1087  0182  0872               	movf	??_control_transfer,w
  1088  0183  00F3               	movwf	??_control_transfer+1
  1089  0184  0873               	movf	??_control_transfer+1,w
  1090  0185  00A7               	movwf	control_transfer@y
  1091  0186  0828               	movf	control_transfer@x,w
  1092  0187  2500               	fcall	_Send_Byte
  1093  0188  0020               	movlb	0	; select bank0
  1094  0189  0827               	movf	control_transfer@y,w
  1095  018A  2500               	fcall	_Send_Byte
  1096  018B  0020               	movlb	0	; select bank0
  1097  018C  0824               	movf	control_transfer@checksum,w
  1098  018D  02A4               	subwf	control_transfer@checksum,f
  1099  018E  3011               	movlw	17
  1100  018F  2500               	fcall	_Send_Byte
  1101                           
  1102                           ;main.c: 69: break;
  1103  0190  0008               	return
  1104  0191                     l1690:	
  1105                           ;main.c: 70: case 0x03:
  1106                           
  1107                           
  1108                           ;main.c: 71: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1109  0191  0020               	movlb	0	; select bank0
  1110  0192  01A5               	clrf	control_transfer@i
  1111  0193  01A6               	clrf	control_transfer@i+1
  1112  0194                     l68:	
  1113  0194  1A91               	btfsc	17,5	;volatile
  1114  0195  29A7               	goto	l1696
  1115  0196  3085               	movlw	133
  1116  0197  00F2               	movwf	??_control_transfer
  1117  0198                     u2797:	
  1118  0198  0BF2               	decfsz	??_control_transfer,f
  1119  0199  2998               	goto	u2797
  1120  019A  3001               	movlw	1
  1121  019B  0020               	movlb	0	; select bank0
  1122  019C  07A5               	addwf	control_transfer@i,f
  1123  019D  3000               	movlw	0
  1124  019E  3DA6               	addwfc	control_transfer@i+1,f
  1125  019F  3003               	movlw	3
  1126  01A0  0226               	subwf	control_transfer@i+1,w
  1127  01A1  30E8               	movlw	232
  1128  01A2  1903               	skipnz
  1129  01A3  0225               	subwf	control_transfer@i,w
  1130  01A4  1803               	btfsc	3,0
  1131  01A5  0008               	return
  1132  01A6  2994               	goto	l68
  1133  01A7                     l1696:	
  1134  01A7  0023               	movlb	3	; select bank3
  1135  01A8  0819               	movf	25,w	;volatile
  1136  01A9  00F2               	movwf	??_control_transfer
  1137  01AA  0872               	movf	??_control_transfer,w
  1138  01AB  0020               	movlb	0	; select bank0
  1139  01AC  00A8               	movwf	control_transfer@x
  1140  01AD  01A5               	clrf	control_transfer@i
  1141  01AE  01A6               	clrf	control_transfer@i+1
  1142  01AF                     l72:	
  1143  01AF  1A91               	btfsc	17,5	;volatile
  1144  01B0  29C2               	goto	l1704
  1145  01B1  3085               	movlw	133
  1146  01B2  00F2               	movwf	??_control_transfer
  1147  01B3                     u2807:	
  1148  01B3  0BF2               	decfsz	??_control_transfer,f
  1149  01B4  29B3               	goto	u2807
  1150  01B5  3001               	movlw	1
  1151  01B6  0020               	movlb	0	; select bank0
  1152  01B7  07A5               	addwf	control_transfer@i,f
  1153  01B8  3000               	movlw	0
  1154  01B9  3DA6               	addwfc	control_transfer@i+1,f
  1155  01BA  3003               	movlw	3
  1156  01BB  0226               	subwf	control_transfer@i+1,w
  1157  01BC  30E8               	movlw	232
  1158  01BD  1903               	skipnz
  1159  01BE  0225               	subwf	control_transfer@i,w
  1160  01BF  1803               	btfsc	3,0
  1161  01C0  0008               	return
  1162  01C1  29AF               	goto	l72
  1163  01C2                     l1704:	
  1164  01C2  0023               	movlb	3	; select bank3
  1165  01C3  0819               	movf	25,w	;volatile
  1166  01C4  00F2               	movwf	??_control_transfer
  1167  01C5  0872               	movf	??_control_transfer,w
  1168  01C6  0020               	movlb	0	; select bank0
  1169  01C7  00A7               	movwf	control_transfer@y
  1170  01C8  0828               	movf	control_transfer@x,w
  1171  01C9  39F0               	andlw	240
  1172  01CA  1D03               	btfss	3,2
  1173  01CB  0008               	return
  1174  01CC  0827               	movf	control_transfer@y,w
  1175  01CD  39F0               	andlw	240
  1176  01CE  1D03               	btfss	3,2
  1177  01CF  0008               	return
  1178  01D0  0827               	movf	control_transfer@y,w
  1179  01D1  00F2               	movwf	??_control_transfer
  1180  01D2  3003               	movlw	3
  1181  01D3                     u2275:	
  1182  01D3  35F2               	lslf	??_control_transfer,f
  1183  01D4  3EFF               	addlw	-1
  1184  01D5  1D03               	skipz
  1185  01D6  29D3               	goto	u2275
  1186  01D7  3572               	lslf	??_control_transfer,w
  1187  01D8  0428               	iorwf	control_transfer@x,w
  1188  01D9  00F3               	movwf	??_control_transfer+1
  1189  01DA  0873               	movf	??_control_transfer+1,w
  1190  01DB  00A2               	movwf	control_transfer@random_number
  1191  01DC  0822               	movf	control_transfer@random_number,w
  1192  01DD  00F2               	movwf	??_control_transfer
  1193  01DE  0872               	movf	??_control_transfer,w
  1194  01DF  07A4               	addwf	control_transfer@checksum,f
  1195                           
  1196                           ;main.c: 72: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1197  01E0  01A5               	clrf	control_transfer@i
  1198  01E1  01A6               	clrf	control_transfer@i+1
  1199  01E2                     l79:	
  1200  01E2  1A91               	btfsc	17,5	;volatile
  1201  01E3  29F5               	goto	l1718
  1202  01E4  3085               	movlw	133
  1203  01E5  00F2               	movwf	??_control_transfer
  1204  01E6                     u2817:	
  1205  01E6  0BF2               	decfsz	??_control_transfer,f
  1206  01E7  29E6               	goto	u2817
  1207  01E8  3001               	movlw	1
  1208  01E9  0020               	movlb	0	; select bank0
  1209  01EA  07A5               	addwf	control_transfer@i,f
  1210  01EB  3000               	movlw	0
  1211  01EC  3DA6               	addwfc	control_transfer@i+1,f
  1212  01ED  3003               	movlw	3
  1213  01EE  0226               	subwf	control_transfer@i+1,w
  1214  01EF  30E8               	movlw	232
  1215  01F0  1903               	skipnz
  1216  01F1  0225               	subwf	control_transfer@i,w
  1217  01F2  1803               	btfsc	3,0
  1218  01F3  0008               	return
  1219  01F4  29E2               	goto	l79
  1220  01F5                     l1718:	
  1221  01F5  0023               	movlb	3	; select bank3
  1222  01F6  0819               	movf	25,w	;volatile
  1223  01F7  00F2               	movwf	??_control_transfer
  1224  01F8  0872               	movf	??_control_transfer,w
  1225  01F9  0020               	movlb	0	; select bank0
  1226  01FA  00A8               	movwf	control_transfer@x
  1227  01FB  01A5               	clrf	control_transfer@i
  1228  01FC  01A6               	clrf	control_transfer@i+1
  1229  01FD                     l83:	
  1230  01FD  1A91               	btfsc	17,5	;volatile
  1231  01FE  2A10               	goto	l1726
  1232  01FF  3085               	movlw	133
  1233  0200  00F2               	movwf	??_control_transfer
  1234  0201                     u2827:	
  1235  0201  0BF2               	decfsz	??_control_transfer,f
  1236  0202  2A01               	goto	u2827
  1237  0203  3001               	movlw	1
  1238  0204  0020               	movlb	0	; select bank0
  1239  0205  07A5               	addwf	control_transfer@i,f
  1240  0206  3000               	movlw	0
  1241  0207  3DA6               	addwfc	control_transfer@i+1,f
  1242  0208  3003               	movlw	3
  1243  0209  0226               	subwf	control_transfer@i+1,w
  1244  020A  30E8               	movlw	232
  1245  020B  1903               	skipnz
  1246  020C  0225               	subwf	control_transfer@i,w
  1247  020D  1803               	btfsc	3,0
  1248  020E  0008               	return
  1249  020F  29FD               	goto	l83
  1250  0210                     l1726:	
  1251  0210  0023               	movlb	3	; select bank3
  1252  0211  0819               	movf	25,w	;volatile
  1253  0212  00F2               	movwf	??_control_transfer
  1254  0213  0872               	movf	??_control_transfer,w
  1255  0214  0020               	movlb	0	; select bank0
  1256  0215  00A7               	movwf	control_transfer@y
  1257  0216  0828               	movf	control_transfer@x,w
  1258  0217  39F0               	andlw	240
  1259  0218  1D03               	btfss	3,2
  1260  0219  0008               	return
  1261  021A  0827               	movf	control_transfer@y,w
  1262  021B  39F0               	andlw	240
  1263  021C  1D03               	btfss	3,2
  1264  021D  0008               	return
  1265  021E  0827               	movf	control_transfer@y,w
  1266  021F  00F2               	movwf	??_control_transfer
  1267  0220  3003               	movlw	3
  1268  0221                     u2345:	
  1269  0221  35F2               	lslf	??_control_transfer,f
  1270  0222  3EFF               	addlw	-1
  1271  0223  1D03               	skipz
  1272  0224  2A21               	goto	u2345
  1273  0225  3572               	lslf	??_control_transfer,w
  1274  0226  0428               	iorwf	control_transfer@x,w
  1275  0227  00F3               	movwf	??_control_transfer+1
  1276  0228  0873               	movf	??_control_transfer+1,w
  1277  0229  00A3               	movwf	control_transfer@id
  1278  022A  0823               	movf	control_transfer@id,w
  1279  022B  00F2               	movwf	??_control_transfer
  1280  022C  0872               	movf	??_control_transfer,w
  1281  022D  07A4               	addwf	control_transfer@checksum,f
  1282                           
  1283                           ;main.c: 73: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1284  022E  01A5               	clrf	control_transfer@i
  1285  022F  01A6               	clrf	control_transfer@i+1
  1286  0230                     l90:	
  1287  0230  1A91               	btfsc	17,5	;volatile
  1288  0231  2A43               	goto	l1740
  1289  0232  3085               	movlw	133
  1290  0233  00F2               	movwf	??_control_transfer
  1291  0234                     u2837:	
  1292  0234  0BF2               	decfsz	??_control_transfer,f
  1293  0235  2A34               	goto	u2837
  1294  0236  3001               	movlw	1
  1295  0237  0020               	movlb	0	; select bank0
  1296  0238  07A5               	addwf	control_transfer@i,f
  1297  0239  3000               	movlw	0
  1298  023A  3DA6               	addwfc	control_transfer@i+1,f
  1299  023B  3003               	movlw	3
  1300  023C  0226               	subwf	control_transfer@i+1,w
  1301  023D  30E8               	movlw	232
  1302  023E  1903               	skipnz
  1303  023F  0225               	subwf	control_transfer@i,w
  1304  0240  1803               	btfsc	3,0
  1305  0241  0008               	return
  1306  0242  2A30               	goto	l90
  1307  0243                     l1740:	
  1308  0243  0023               	movlb	3	; select bank3
  1309  0244  0819               	movf	25,w	;volatile
  1310  0245  00F2               	movwf	??_control_transfer
  1311  0246  0872               	movf	??_control_transfer,w
  1312  0247  0020               	movlb	0	; select bank0
  1313  0248  00A8               	movwf	control_transfer@x
  1314  0249  01A5               	clrf	control_transfer@i
  1315  024A  01A6               	clrf	control_transfer@i+1
  1316  024B                     l94:	
  1317  024B  1A91               	btfsc	17,5	;volatile
  1318  024C  2A5E               	goto	l1748
  1319  024D  3085               	movlw	133
  1320  024E  00F2               	movwf	??_control_transfer
  1321  024F                     u2847:	
  1322  024F  0BF2               	decfsz	??_control_transfer,f
  1323  0250  2A4F               	goto	u2847
  1324  0251  3001               	movlw	1
  1325  0252  0020               	movlb	0	; select bank0
  1326  0253  07A5               	addwf	control_transfer@i,f
  1327  0254  3000               	movlw	0
  1328  0255  3DA6               	addwfc	control_transfer@i+1,f
  1329  0256  3003               	movlw	3
  1330  0257  0226               	subwf	control_transfer@i+1,w
  1331  0258  30E8               	movlw	232
  1332  0259  1903               	skipnz
  1333  025A  0225               	subwf	control_transfer@i,w
  1334  025B  1803               	btfsc	3,0
  1335  025C  0008               	return
  1336  025D  2A4B               	goto	l94
  1337  025E                     l1748:	
  1338  025E  0023               	movlb	3	; select bank3
  1339  025F  0819               	movf	25,w	;volatile
  1340  0260  00F2               	movwf	??_control_transfer
  1341  0261  0872               	movf	??_control_transfer,w
  1342  0262  0020               	movlb	0	; select bank0
  1343  0263  00A7               	movwf	control_transfer@y
  1344  0264  0828               	movf	control_transfer@x,w
  1345  0265  39F0               	andlw	240
  1346  0266  1D03               	btfss	3,2
  1347  0267  0008               	return
  1348  0268  0827               	movf	control_transfer@y,w
  1349  0269  39F0               	andlw	240
  1350  026A  1D03               	btfss	3,2
  1351  026B  0008               	return
  1352  026C  0827               	movf	control_transfer@y,w
  1353  026D  00F2               	movwf	??_control_transfer
  1354  026E  3003               	movlw	3
  1355  026F                     u2415:	
  1356  026F  35F2               	lslf	??_control_transfer,f
  1357  0270  3EFF               	addlw	-1
  1358  0271  1D03               	skipz
  1359  0272  2A6F               	goto	u2415
  1360  0273  3572               	lslf	??_control_transfer,w
  1361  0274  0428               	iorwf	control_transfer@x,w
  1362  0275  00F3               	movwf	??_control_transfer+1
  1363  0276  0873               	movf	??_control_transfer+1,w
  1364  0277  00A8               	movwf	control_transfer@x
  1365  0278  0828               	movf	control_transfer@x,w
  1366  0279  00F2               	movwf	??_control_transfer
  1367  027A  0872               	movf	??_control_transfer,w
  1368  027B  07A4               	addwf	control_transfer@checksum,f
  1369  027C  0824               	movf	control_transfer@checksum,w
  1370  027D  1D03               	skipz
  1371  027E  0008               	return
  1372  027F  01A5               	clrf	control_transfer@i
  1373  0280  01A6               	clrf	control_transfer@i+1
  1374  0281                     l102:	
  1375  0281  1A91               	btfsc	17,5	;volatile
  1376  0282  2A94               	goto	l1766
  1377  0283  3085               	movlw	133
  1378  0284  00F2               	movwf	??_control_transfer
  1379  0285                     u2857:	
  1380  0285  0BF2               	decfsz	??_control_transfer,f
  1381  0286  2A85               	goto	u2857
  1382  0287  3001               	movlw	1
  1383  0288  0020               	movlb	0	; select bank0
  1384  0289  07A5               	addwf	control_transfer@i,f
  1385  028A  3000               	movlw	0
  1386  028B  3DA6               	addwfc	control_transfer@i+1,f
  1387  028C  3003               	movlw	3
  1388  028D  0226               	subwf	control_transfer@i+1,w
  1389  028E  30E8               	movlw	232
  1390  028F  1903               	skipnz
  1391  0290  0225               	subwf	control_transfer@i,w
  1392  0291  1803               	btfsc	3,0
  1393  0292  0008               	return
  1394  0293  2A81               	goto	l102
  1395  0294                     l1766:	
  1396  0294  0023               	movlb	3	; select bank3
  1397  0295  0819               	movf	25,w	;volatile
  1398  0296  00F2               	movwf	??_control_transfer
  1399  0297  0872               	movf	??_control_transfer,w
  1400  0298  0020               	movlb	0	; select bank0
  1401  0299  00A8               	movwf	control_transfer@x
  1402  029A  0828               	movf	control_transfer@x,w
  1403  029B  3A11               	xorlw	17
  1404  029C  1D03               	btfss	3,2
  1405  029D  0008               	return
  1406                           
  1407                           ;main.c: 74: if(random_number != my_random_number) goto err;
  1408  029E  0822               	movf	control_transfer@random_number,w
  1409  029F  062F               	xorwf	_my_random_number,w
  1410  02A0  1D03               	btfss	3,2
  1411  02A1  0008               	return
  1412                           
  1413                           ;main.c: 75: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1414  02A2  3010               	movlw	16
  1415  02A3  2500               	fcall	_Send_Byte
  1416  02A4  0020               	movlb	0	; select bank0
  1417  02A5  01A4               	clrf	control_transfer@checksum
  1418  02A6  087C               	movf	_my_id,w
  1419  02A7  390F               	andlw	15
  1420  02A8  00F2               	movwf	??_control_transfer
  1421  02A9  0872               	movf	??_control_transfer,w
  1422  02AA  00A8               	movwf	control_transfer@x
  1423  02AB  087C               	movf	_my_id,w
  1424  02AC  00F2               	movwf	??_control_transfer
  1425  02AD  3004               	movlw	4
  1426  02AE                     u2475:	
  1427  02AE  36F2               	lsrf	??_control_transfer,f
  1428  02AF  0B89               	decfsz	9,f
  1429  02B0  2AAE               	goto	u2475
  1430  02B1  0872               	movf	??_control_transfer,w
  1431  02B2  00F3               	movwf	??_control_transfer+1
  1432  02B3  0873               	movf	??_control_transfer+1,w
  1433  02B4  00A7               	movwf	control_transfer@y
  1434  02B5  0828               	movf	control_transfer@x,w
  1435  02B6  2500               	fcall	_Send_Byte
  1436  02B7  0020               	movlb	0	; select bank0
  1437  02B8  0827               	movf	control_transfer@y,w
  1438  02B9  2500               	fcall	_Send_Byte
  1439  02BA  087C               	movf	_my_id,w
  1440  02BB  0020               	movlb	0	; select bank0
  1441  02BC  02A4               	subwf	control_transfer@checksum,f
  1442                           
  1443                           ;main.c: 76: x = 0x00 & 0x0F; y = 0x00 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          0;
  1444  02BD  01A8               	clrf	control_transfer@x
  1445  02BE  01A7               	clrf	control_transfer@y
  1446  02BF  0828               	movf	control_transfer@x,w
  1447  02C0  2500               	fcall	_Send_Byte
  1448  02C1  0020               	movlb	0	; select bank0
  1449  02C2  0827               	movf	control_transfer@y,w
  1450  02C3  2500               	fcall	_Send_Byte
  1451                           
  1452                           ;main.c: 77: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1453  02C4  0020               	movlb	0	; select bank0
  1454  02C5  0824               	movf	control_transfer@checksum,w
  1455  02C6  390F               	andlw	15
  1456  02C7  00F2               	movwf	??_control_transfer
  1457  02C8  0872               	movf	??_control_transfer,w
  1458  02C9  00A8               	movwf	control_transfer@x
  1459  02CA  0824               	movf	control_transfer@checksum,w
  1460  02CB  00F2               	movwf	??_control_transfer
  1461  02CC  3004               	movlw	4
  1462  02CD                     u2485:	
  1463  02CD  36F2               	lsrf	??_control_transfer,f
  1464  02CE  0B89               	decfsz	9,f
  1465  02CF  2ACD               	goto	u2485
  1466  02D0  0872               	movf	??_control_transfer,w
  1467  02D1  00F3               	movwf	??_control_transfer+1
  1468  02D2  0873               	movf	??_control_transfer+1,w
  1469  02D3  00A7               	movwf	control_transfer@y
  1470  02D4  0828               	movf	control_transfer@x,w
  1471  02D5  2500               	fcall	_Send_Byte
  1472  02D6  0020               	movlb	0	; select bank0
  1473  02D7  0827               	movf	control_transfer@y,w
  1474  02D8  2500               	fcall	_Send_Byte
  1475  02D9  0020               	movlb	0	; select bank0
  1476  02DA  0824               	movf	control_transfer@checksum,w
  1477  02DB  02A4               	subwf	control_transfer@checksum,f
  1478  02DC  3011               	movlw	17
  1479  02DD  2500               	fcall	_Send_Byte
  1480                           
  1481                           ;main.c: 78: my_id=id;
  1482  02DE  0020               	movlb	0	; select bank0
  1483  02DF  0823               	movf	control_transfer@id,w
  1484  02E0  00F2               	movwf	??_control_transfer
  1485  02E1  0872               	movf	??_control_transfer,w
  1486  02E2  00FC               	movwf	_my_id
  1487                           
  1488                           ;main.c: 79: break;
  1489  02E3  0008               	return
  1490  02E4                     l1810:	
  1491                           ;main.c: 80: case 0x08:
  1492                           
  1493                           
  1494                           ;main.c: 81: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1495  02E4  01A5               	clrf	control_transfer@i
  1496  02E5  01A6               	clrf	control_transfer@i+1
  1497  02E6                     l109:	
  1498  02E6  1A91               	btfsc	17,5	;volatile
  1499  02E7  2AF9               	goto	l1816
  1500  02E8  3085               	movlw	133
  1501  02E9  00F2               	movwf	??_control_transfer
  1502  02EA                     u2867:	
  1503  02EA  0BF2               	decfsz	??_control_transfer,f
  1504  02EB  2AEA               	goto	u2867
  1505  02EC  3001               	movlw	1
  1506  02ED  0020               	movlb	0	; select bank0
  1507  02EE  07A5               	addwf	control_transfer@i,f
  1508  02EF  3000               	movlw	0
  1509  02F0  3DA6               	addwfc	control_transfer@i+1,f
  1510  02F1  3003               	movlw	3
  1511  02F2  0226               	subwf	control_transfer@i+1,w
  1512  02F3  30E8               	movlw	232
  1513  02F4  1903               	skipnz
  1514  02F5  0225               	subwf	control_transfer@i,w
  1515  02F6  1803               	btfsc	3,0
  1516  02F7  0008               	return
  1517  02F8  2AE6               	goto	l109
  1518  02F9                     l1816:	
  1519  02F9  0023               	movlb	3	; select bank3
  1520  02FA  0819               	movf	25,w	;volatile
  1521  02FB  00F2               	movwf	??_control_transfer
  1522  02FC  0872               	movf	??_control_transfer,w
  1523  02FD  0020               	movlb	0	; select bank0
  1524  02FE  00A8               	movwf	control_transfer@x
  1525  02FF  01A5               	clrf	control_transfer@i
  1526  0300  01A6               	clrf	control_transfer@i+1
  1527  0301                     l113:	
  1528  0301  1A91               	btfsc	17,5	;volatile
  1529  0302  2B14               	goto	l1824
  1530  0303  3085               	movlw	133
  1531  0304  00F2               	movwf	??_control_transfer
  1532  0305                     u2877:	
  1533  0305  0BF2               	decfsz	??_control_transfer,f
  1534  0306  2B05               	goto	u2877
  1535  0307  3001               	movlw	1
  1536  0308  0020               	movlb	0	; select bank0
  1537  0309  07A5               	addwf	control_transfer@i,f
  1538  030A  3000               	movlw	0
  1539  030B  3DA6               	addwfc	control_transfer@i+1,f
  1540  030C  3003               	movlw	3
  1541  030D  0226               	subwf	control_transfer@i+1,w
  1542  030E  30E8               	movlw	232
  1543  030F  1903               	skipnz
  1544  0310  0225               	subwf	control_transfer@i,w
  1545  0311  1803               	btfsc	3,0
  1546  0312  0008               	return
  1547  0313  2B01               	goto	l113
  1548  0314                     l1824:	
  1549  0314  0023               	movlb	3	; select bank3
  1550  0315  0819               	movf	25,w	;volatile
  1551  0316  00F2               	movwf	??_control_transfer
  1552  0317  0872               	movf	??_control_transfer,w
  1553  0318  0020               	movlb	0	; select bank0
  1554  0319  00A7               	movwf	control_transfer@y
  1555  031A  0828               	movf	control_transfer@x,w
  1556  031B  39F0               	andlw	240
  1557  031C  1D03               	btfss	3,2
  1558  031D  0008               	return
  1559  031E  0827               	movf	control_transfer@y,w
  1560  031F  39F0               	andlw	240
  1561  0320  1D03               	btfss	3,2
  1562  0321  0008               	return
  1563  0322  0827               	movf	control_transfer@y,w
  1564  0323  00F2               	movwf	??_control_transfer
  1565  0324  3003               	movlw	3
  1566  0325                     u2555:	
  1567  0325  35F2               	lslf	??_control_transfer,f
  1568  0326  3EFF               	addlw	-1
  1569  0327  1D03               	skipz
  1570  0328  2B25               	goto	u2555
  1571  0329  3572               	lslf	??_control_transfer,w
  1572  032A  0428               	iorwf	control_transfer@x,w
  1573  032B  00F3               	movwf	??_control_transfer+1
  1574  032C  0873               	movf	??_control_transfer+1,w
  1575  032D  00A1               	movwf	control_transfer@power_level
  1576  032E  0821               	movf	control_transfer@power_level,w
  1577  032F  00F2               	movwf	??_control_transfer
  1578  0330  0872               	movf	??_control_transfer,w
  1579  0331  07A4               	addwf	control_transfer@checksum,f
  1580                           
  1581                           ;main.c: 82: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1582  0332  01A5               	clrf	control_transfer@i
  1583  0333  01A6               	clrf	control_transfer@i+1
  1584  0334                     l120:	
  1585  0334  1A91               	btfsc	17,5	;volatile
  1586  0335  2B47               	goto	l1838
  1587  0336  3085               	movlw	133
  1588  0337  00F2               	movwf	??_control_transfer
  1589  0338                     u2887:	
  1590  0338  0BF2               	decfsz	??_control_transfer,f
  1591  0339  2B38               	goto	u2887
  1592  033A  3001               	movlw	1
  1593  033B  0020               	movlb	0	; select bank0
  1594  033C  07A5               	addwf	control_transfer@i,f
  1595  033D  3000               	movlw	0
  1596  033E  3DA6               	addwfc	control_transfer@i+1,f
  1597  033F  3003               	movlw	3
  1598  0340  0226               	subwf	control_transfer@i+1,w
  1599  0341  30E8               	movlw	232
  1600  0342  1903               	skipnz
  1601  0343  0225               	subwf	control_transfer@i,w
  1602  0344  1803               	btfsc	3,0
  1603  0345  0008               	return
  1604  0346  2B34               	goto	l120
  1605  0347                     l1838:	
  1606  0347  0023               	movlb	3	; select bank3
  1607  0348  0819               	movf	25,w	;volatile
  1608  0349  00F2               	movwf	??_control_transfer
  1609  034A  0872               	movf	??_control_transfer,w
  1610  034B  0020               	movlb	0	; select bank0
  1611  034C  00A8               	movwf	control_transfer@x
  1612  034D  01A5               	clrf	control_transfer@i
  1613  034E  01A6               	clrf	control_transfer@i+1
  1614  034F                     l124:	
  1615  034F  1A91               	btfsc	17,5	;volatile
  1616  0350  2B62               	goto	l1846
  1617  0351  3085               	movlw	133
  1618  0352  00F2               	movwf	??_control_transfer
  1619  0353                     u2897:	
  1620  0353  0BF2               	decfsz	??_control_transfer,f
  1621  0354  2B53               	goto	u2897
  1622  0355  3001               	movlw	1
  1623  0356  0020               	movlb	0	; select bank0
  1624  0357  07A5               	addwf	control_transfer@i,f
  1625  0358  3000               	movlw	0
  1626  0359  3DA6               	addwfc	control_transfer@i+1,f
  1627  035A  3003               	movlw	3
  1628  035B  0226               	subwf	control_transfer@i+1,w
  1629  035C  30E8               	movlw	232
  1630  035D  1903               	skipnz
  1631  035E  0225               	subwf	control_transfer@i,w
  1632  035F  1803               	btfsc	3,0
  1633  0360  0008               	return
  1634  0361  2B4F               	goto	l124
  1635  0362                     l1846:	
  1636  0362  0023               	movlb	3	; select bank3
  1637  0363  0819               	movf	25,w	;volatile
  1638  0364  00F2               	movwf	??_control_transfer
  1639  0365  0872               	movf	??_control_transfer,w
  1640  0366  0020               	movlb	0	; select bank0
  1641  0367  00A7               	movwf	control_transfer@y
  1642  0368  0828               	movf	control_transfer@x,w
  1643  0369  39F0               	andlw	240
  1644  036A  1D03               	btfss	3,2
  1645  036B  0008               	return
  1646  036C  0827               	movf	control_transfer@y,w
  1647  036D  39F0               	andlw	240
  1648  036E  1D03               	btfss	3,2
  1649  036F  0008               	return
  1650  0370  0827               	movf	control_transfer@y,w
  1651  0371  00F2               	movwf	??_control_transfer
  1652  0372  3003               	movlw	3
  1653  0373                     u2625:	
  1654  0373  35F2               	lslf	??_control_transfer,f
  1655  0374  3EFF               	addlw	-1
  1656  0375  1D03               	skipz
  1657  0376  2B73               	goto	u2625
  1658  0377  3572               	lslf	??_control_transfer,w
  1659  0378  0428               	iorwf	control_transfer@x,w
  1660  0379  00F3               	movwf	??_control_transfer+1
  1661  037A  0873               	movf	??_control_transfer+1,w
  1662  037B  00A8               	movwf	control_transfer@x
  1663  037C  0828               	movf	control_transfer@x,w
  1664  037D  00F2               	movwf	??_control_transfer
  1665  037E  0872               	movf	??_control_transfer,w
  1666  037F  07A4               	addwf	control_transfer@checksum,f
  1667  0380  0824               	movf	control_transfer@checksum,w
  1668  0381  1D03               	skipz
  1669  0382  0008               	return
  1670  0383  01A5               	clrf	control_transfer@i
  1671  0384  01A6               	clrf	control_transfer@i+1
  1672  0385                     l132:	
  1673  0385  1A91               	btfsc	17,5	;volatile
  1674  0386  2B98               	goto	l1864
  1675  0387  3085               	movlw	133
  1676  0388  00F2               	movwf	??_control_transfer
  1677  0389                     u2907:	
  1678  0389  0BF2               	decfsz	??_control_transfer,f
  1679  038A  2B89               	goto	u2907
  1680  038B  3001               	movlw	1
  1681  038C  0020               	movlb	0	; select bank0
  1682  038D  07A5               	addwf	control_transfer@i,f
  1683  038E  3000               	movlw	0
  1684  038F  3DA6               	addwfc	control_transfer@i+1,f
  1685  0390  3003               	movlw	3
  1686  0391  0226               	subwf	control_transfer@i+1,w
  1687  0392  30E8               	movlw	232
  1688  0393  1903               	skipnz
  1689  0394  0225               	subwf	control_transfer@i,w
  1690  0395  1803               	btfsc	3,0
  1691  0396  0008               	return
  1692  0397  2B85               	goto	l132
  1693  0398                     l1864:	
  1694  0398  0023               	movlb	3	; select bank3
  1695  0399  0819               	movf	25,w	;volatile
  1696  039A  00F2               	movwf	??_control_transfer
  1697  039B  0872               	movf	??_control_transfer,w
  1698  039C  0020               	movlb	0	; select bank0
  1699  039D  00A8               	movwf	control_transfer@x
  1700  039E  0828               	movf	control_transfer@x,w
  1701  039F  3A11               	xorlw	17
  1702  03A0  1D03               	btfss	3,2
  1703  03A1  0008               	return
  1704                           
  1705                           ;main.c: 83: my_power_level = power_level;
  1706  03A2  0821               	movf	control_transfer@power_level,w
  1707  03A3  00F2               	movwf	??_control_transfer
  1708  03A4  0872               	movf	??_control_transfer,w
  1709  03A5  00AE               	movwf	_my_power_level
  1710                           
  1711                           ;main.c: 84: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1712  03A6  3010               	movlw	16
  1713  03A7  2500               	fcall	_Send_Byte
  1714  03A8  0020               	movlb	0	; select bank0
  1715  03A9  01A4               	clrf	control_transfer@checksum
  1716  03AA  087C               	movf	_my_id,w
  1717  03AB  390F               	andlw	15
  1718  03AC  00F2               	movwf	??_control_transfer
  1719  03AD  0872               	movf	??_control_transfer,w
  1720  03AE  00A8               	movwf	control_transfer@x
  1721  03AF  087C               	movf	_my_id,w
  1722  03B0  00F2               	movwf	??_control_transfer
  1723  03B1  3004               	movlw	4
  1724  03B2                     u2675:	
  1725  03B2  36F2               	lsrf	??_control_transfer,f
  1726  03B3  0B89               	decfsz	9,f
  1727  03B4  2BB2               	goto	u2675
  1728  03B5  0872               	movf	??_control_transfer,w
  1729  03B6  00F3               	movwf	??_control_transfer+1
  1730  03B7  0873               	movf	??_control_transfer+1,w
  1731  03B8  00A7               	movwf	control_transfer@y
  1732  03B9  0828               	movf	control_transfer@x,w
  1733  03BA  2500               	fcall	_Send_Byte
  1734  03BB  0020               	movlb	0	; select bank0
  1735  03BC  0827               	movf	control_transfer@y,w
  1736  03BD  2500               	fcall	_Send_Byte
  1737  03BE  087C               	movf	_my_id,w
  1738  03BF  0020               	movlb	0	; select bank0
  1739  03C0  02A4               	subwf	control_transfer@checksum,f
  1740                           
  1741                           ;main.c: 85: x = 0x00 & 0x0F; y = 0x00 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          0;
  1742  03C1  01A8               	clrf	control_transfer@x
  1743  03C2  01A7               	clrf	control_transfer@y
  1744  03C3  0828               	movf	control_transfer@x,w
  1745  03C4  2500               	fcall	_Send_Byte
  1746  03C5  0020               	movlb	0	; select bank0
  1747  03C6  0827               	movf	control_transfer@y,w
  1748  03C7  2500               	fcall	_Send_Byte
  1749                           
  1750                           ;main.c: 86: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1751  03C8  0020               	movlb	0	; select bank0
  1752  03C9  0824               	movf	control_transfer@checksum,w
  1753  03CA  390F               	andlw	15
  1754  03CB  00F2               	movwf	??_control_transfer
  1755  03CC  0872               	movf	??_control_transfer,w
  1756  03CD  00A8               	movwf	control_transfer@x
  1757  03CE  0824               	movf	control_transfer@checksum,w
  1758  03CF  00F2               	movwf	??_control_transfer
  1759  03D0  3004               	movlw	4
  1760  03D1                     u2685:	
  1761  03D1  36F2               	lsrf	??_control_transfer,f
  1762  03D2  0B89               	decfsz	9,f
  1763  03D3  2BD1               	goto	u2685
  1764  03D4  0872               	movf	??_control_transfer,w
  1765  03D5  00F3               	movwf	??_control_transfer+1
  1766  03D6  0873               	movf	??_control_transfer+1,w
  1767  03D7  00A7               	movwf	control_transfer@y
  1768  03D8  0828               	movf	control_transfer@x,w
  1769  03D9  2500               	fcall	_Send_Byte
  1770  03DA  0020               	movlb	0	; select bank0
  1771  03DB  0827               	movf	control_transfer@y,w
  1772  03DC  2500               	fcall	_Send_Byte
  1773  03DD  0020               	movlb	0	; select bank0
  1774  03DE  0824               	movf	control_transfer@checksum,w
  1775  03DF  02A4               	subwf	control_transfer@checksum,f
  1776  03E0  3011               	movlw	17
  1777  03E1  2500               	fcall	_Send_Byte
  1778                           
  1779                           ;main.c: 91: }
  1780                           
  1781                           ;main.c: 90: goto err;
  1782                           
  1783                           ;main.c: 89: default:
  1784                           
  1785                           ;main.c: 87: break;
  1786  03E2  0008               	return
  1787  03E3                     l1902:	
  1788  03E3  0020               	movlb	0	; select bank0
  1789  03E4  0820               	movf	control_transfer@cmd,w
  1790                           
  1791                           ; Switch size 1, requested type "space"
  1792                           ; Number of cases is 3, Range of values is 1 to 8
  1793                           ; switch strategies available:
  1794                           ; Name         Instructions Cycles
  1795                           ; simple_byte           10     6 (average)
  1796                           ; direct_byte           25     9 (fixed)
  1797                           ; jumptable            263     9 (fixed)
  1798                           ;	Chosen strategy is simple_byte
  1799  03E5  3A01               	xorlw	1	; case 1
  1800  03E6  1903               	skipnz
  1801  03E7  28C8               	goto	l1608
  1802  03E8  3A02               	xorlw	2	; case 3
  1803  03E9  1903               	skipnz
  1804  03EA  2991               	goto	l1690
  1805  03EB  3A0B               	xorlw	11	; case 8
  1806  03EC  1903               	skipnz
  1807  03ED  2AE4               	goto	l1810
  1808  03EE  2BF0               	goto	l138
  1809  03EF  0008               	return
  1810  03F0                     l138:	
  1811                           ;main.c: 93: return;
  1812                           
  1813                           ;main.c: 92: err:
  1814                           
  1815  03F0  0008               	return
  1816  03F1                     __end_of_control_transfer:	
  1817                           
  1818                           	psect	text2
  1819  04BB                     __ptext2:	
  1820 ;; *************** function _Setup *****************
  1821 ;; Defined at:
  1822 ;;		line 24 in file "user.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;		None               void
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1836 ;;      Params:         0       0       0       0
  1837 ;;      Locals:         0       0       0       0
  1838 ;;      Temps:          1       0       0       0
  1839 ;;      Totals:         1       0       0       0
  1840 ;;Total ram usage:        1 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _Setup
  1852  04BB                     _Setup:	
  1853                           
  1854                           ;user.c: 26: OSCCON = 0b01111010;
  1855                           
  1856                           ;incstack = 0
  1857                           ; Regs used in _Setup: [wreg+status,2+status,0]
  1858  04BB  307A               	movlw	122
  1859  04BC  0021               	movlb	1	; select bank1
  1860  04BD  0099               	movwf	25	;volatile
  1861                           
  1862                           ;user.c: 28: ANSELA = 0x00;
  1863  04BE  0023               	movlb	3	; select bank3
  1864  04BF  018C               	clrf	12	;volatile
  1865                           
  1866                           ;user.c: 29: TRISAbits.TRISA5 = 0;
  1867  04C0  0021               	movlb	1	; select bank1
  1868  04C1  128C               	bcf	12,5	;volatile
  1869                           
  1870                           ;user.c: 30: TRISAbits.TRISA2 = 0;
  1871  04C2  110C               	bcf	12,2	;volatile
  1872                           
  1873                           ;user.c: 31: TRISAbits.TRISA0 = 0;
  1874  04C3  100C               	bcf	12,0	;volatile
  1875                           
  1876                           ;user.c: 35: ADCON1 |= 0b00110000;
  1877  04C4  3030               	movlw	48
  1878  04C5  00F1               	movwf	??_Setup
  1879  04C6  0871               	movf	??_Setup,w
  1880  04C7  049E               	iorwf	30,f	;volatile
  1881                           
  1882                           ;user.c: 38: SPBRGL = 103;
  1883  04C8  3067               	movlw	103
  1884  04C9  0023               	movlb	3	; select bank3
  1885  04CA  009B               	movwf	27	;volatile
  1886                           
  1887                           ;user.c: 39: TXSTAbits.SYNC = 0;
  1888  04CB  121E               	bcf	30,4	;volatile
  1889                           
  1890                           ;user.c: 40: RCSTAbits.SPEN = 1;
  1891  04CC  179D               	bsf	29,7	;volatile
  1892                           
  1893                           ;user.c: 41: BAUDCONbits.SCKP = 1;
  1894  04CD  161F               	bsf	31,4	;volatile
  1895                           
  1896                           ;user.c: 42: TXSTAbits.TXEN = 1;
  1897  04CE  169E               	bsf	30,5	;volatile
  1898                           
  1899                           ;user.c: 45: RCSTAbits.CREN = 1;
  1900  04CF  161D               	bsf	29,4	;volatile
  1901  04D0  0008               	return
  1902  04D1                     __end_of_Setup:	
  1903                           
  1904                           	psect	text3
  1905  04E2                     __ptext3:	
  1906 ;; *************** function _Fire *****************
  1907 ;; Defined at:
  1908 ;;		line 96 in file "main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;		None               void
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1922 ;;      Params:         0       0       0       0
  1923 ;;      Locals:         0       0       0       0
  1924 ;;      Temps:          0       0       0       0
  1925 ;;      Totals:         0       0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    3
  1929 ;; This function calls:
  1930 ;;		_Buzz
  1931 ;;		_Send_Byte
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _Fire
  1939  04E2                     _Fire:	
  1940                           
  1941                           ;main.c: 97: if (PORTAbits.RA4) {
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _Fire: [wreg+status,2+status,0+pclath+cstack]
  1945  04E2  0020               	movlb	0	; select bank0
  1946  04E3  1E0C               	btfss	12,4	;volatile
  1947  04E4  0008               	return
  1948                           
  1949                           ;main.c: 98: Send_Byte(my_id);
  1950  04E5  087C               	movf	_my_id,w
  1951  04E6  2500               	fcall	_Send_Byte
  1952                           
  1953                           ;main.c: 99: Buzz(3000,50);
  1954  04E7  30B8               	movlw	184
  1955  04E8  0020               	movlb	0	; select bank0
  1956  04E9  00A6               	movwf	Buzz@freq
  1957  04EA  300B               	movlw	11
  1958  04EB  00A7               	movwf	Buzz@freq+1
  1959  04EC  3032               	movlw	50
  1960  04ED  00A8               	movwf	Buzz@dur_ms
  1961  04EE  3000               	movlw	0
  1962  04EF  00A9               	movwf	Buzz@dur_ms+1
  1963  04F0  2473               	fcall	_Buzz
  1964  04F1  0008               	return
  1965  04F2                     __end_of_Fire:	
  1966                           
  1967                           	psect	text4
  1968  0500                     __ptext4:	
  1969 ;; *************** function _Send_Byte *****************
  1970 ;; Defined at:
  1971 ;;		line 84 in file "user.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  data            1    wreg     unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  data            1    1[COMMON] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;		None               void
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1985 ;;      Params:         0       0       0       0
  1986 ;;      Locals:         1       0       0       0
  1987 ;;      Temps:          0       0       0       0
  1988 ;;      Totals:         1       0       0       0
  1989 ;;Total ram usage:        1 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    2
  1992 ;; This function calls:
  1993 ;;		_Disable_Modulation
  1994 ;;		_Modulate_Serial
  1995 ;; This function is called by:
  1996 ;;		_control_transfer
  1997 ;;		_Fire
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _Send_Byte
  2003  0500                     _Send_Byte:	
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _Send_Byte: [wreg+status,2+status,0+pclath+cstack]
  2007                           ;Send_Byte@data stored from wreg
  2008  0500  00F1               	movwf	Send_Byte@data
  2009                           
  2010                           ;user.c: 86: RCSTAbits.CREN = 0;
  2011  0501  0023               	movlb	3	; select bank3
  2012  0502  121D               	bcf	29,4	;volatile
  2013                           
  2014                           ;user.c: 87: Modulate_Serial();
  2015  0503  24F2               	fcall	_Modulate_Serial
  2016                           
  2017                           ;user.c: 88: TXREG = data;
  2018  0504  0871               	movf	Send_Byte@data,w
  2019  0505  0023               	movlb	3	; select bank3
  2020  0506  009A               	movwf	26	;volatile
  2021  0507                     l238:	
  2022                           ;user.c: 89: while(!TXSTAbits.TRMT);
  2023                           
  2024  0507  1C9E               	btfss	30,1	;volatile
  2025  0508  2D07               	goto	l238
  2026                           
  2027                           ;user.c: 90: Disable_Modulation();
  2028  0509  250D               	fcall	_Disable_Modulation
  2029                           
  2030                           ;user.c: 91: RCSTAbits.CREN = 1;
  2031  050A  0023               	movlb	3	; select bank3
  2032  050B  161D               	bsf	29,4	;volatile
  2033  050C  0008               	return
  2034  050D                     __end_of_Send_Byte:	
  2035                           
  2036                           	psect	text5
  2037  04F2                     __ptext5:	
  2038 ;; *************** function _Modulate_Serial *****************
  2039 ;; Defined at:
  2040 ;;		line 94 in file "user.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;		None               void
  2047 ;; Registers used:
  2048 ;;		None
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2054 ;;      Params:         0       0       0       0
  2055 ;;      Locals:         0       0       0       0
  2056 ;;      Temps:          0       0       0       0
  2057 ;;      Totals:         0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_Send_Byte
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _Modulate_Serial
  2070  04F2                     _Modulate_Serial:	
  2071                           
  2072                           ;user.c: 95: DACCON0bits.DACEN = 1;
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _Modulate_Serial: []
  2076  04F2  0022               	movlb	2	; select bank2
  2077  04F3  1798               	bsf	24,7	;volatile
  2078                           
  2079                           ;user.c: 97: INTCONbits.GIE = 1;
  2080  04F4  178B               	bsf	11,7	;volatile
  2081                           
  2082                           ;user.c: 98: INTCONbits.PEIE = 1;
  2083  04F5  170B               	bsf	11,6	;volatile
  2084                           
  2085                           ;user.c: 99: PIE1bits.TMR1IE = 1;
  2086  04F6  0021               	movlb	1	; select bank1
  2087  04F7  1411               	bsf	17,0	;volatile
  2088                           
  2089                           ;user.c: 101: T1CONbits.nT1SYNC = 1;
  2090  04F8  0020               	movlb	0	; select bank0
  2091  04F9  1518               	bsf	24,2	;volatile
  2092                           
  2093                           ;user.c: 102: T1CONbits.TMR1ON = 1;
  2094  04FA  1418               	bsf	24,0	;volatile
  2095                           
  2096                           ;user.c: 103: TMR1 = 65486;
  2097  04FB  30FF               	movlw	255
  2098  04FC  0097               	movwf	23	;volatile
  2099  04FD  30CE               	movlw	206
  2100  04FE  0096               	movwf	22	;volatile
  2101  04FF  0008               	return
  2102  0500                     __end_of_Modulate_Serial:	
  2103                           
  2104                           	psect	text6
  2105  050D                     __ptext6:	
  2106 ;; *************** function _Disable_Modulation *****************
  2107 ;; Defined at:
  2108 ;;		line 106 in file "user.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;		None               void
  2115 ;; Registers used:
  2116 ;;		None
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2122 ;;      Params:         0       0       0       0
  2123 ;;      Locals:         0       0       0       0
  2124 ;;      Temps:          0       0       0       0
  2125 ;;      Totals:         0       0       0       0
  2126 ;;Total ram usage:        0 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_Send_Byte
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _Disable_Modulation
  2138  050D                     _Disable_Modulation:	
  2139                           
  2140                           ;user.c: 107: INTCONbits.GIE = 0;
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _Disable_Modulation: []
  2144  050D  138B               	bcf	11,7	;volatile
  2145                           
  2146                           ;user.c: 108: T1CONbits.TMR1ON = 0;
  2147  050E  0020               	movlb	0	; select bank0
  2148  050F  1018               	bcf	24,0	;volatile
  2149                           
  2150                           ;user.c: 109: DACCON0bits.DACEN = 0;
  2151  0510  0022               	movlb	2	; select bank2
  2152  0511  1398               	bcf	24,7	;volatile
  2153  0512  0008               	return
  2154  0513                     __end_of_Disable_Modulation:	
  2155                           
  2156                           	psect	text7
  2157  0473                     __ptext7:	
  2158 ;; *************** function _Buzz *****************
  2159 ;; Defined at:
  2160 ;;		line 69 in file "user.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  freq            2    6[BANK0 ] unsigned int 
  2163 ;;  dur_ms          2    8[BANK0 ] unsigned int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  i               2   10[BANK0 ] unsigned int 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;		None               void
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2175 ;;      Params:         0       4       0       0
  2176 ;;      Locals:         0       2       0       0
  2177 ;;      Temps:          2       0       0       0
  2178 ;;      Totals:         2       6       0       0
  2179 ;;Total ram usage:        8 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    2
  2182 ;; This function calls:
  2183 ;;		___aldiv
  2184 ;; This function is called by:
  2185 ;;		_Fire
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function _Buzz
  2191  0473                     _Buzz:	
  2192                           
  2193                           ;user.c: 71: PWM3CONbits.PWM3EN = 1;
  2194                           
  2195                           ;incstack = 0
  2196                           ; Regs used in _Buzz: [wreg+status,2+status,0+pclath+cstack]
  2197  0473  003B               	movlb	27	; select bank27
  2198  0474  17BB               	bsf	59,7	;volatile
  2199                           
  2200                           ;user.c: 72: PWM3CONbits.PWM3OE = 1;
  2201  0475  173B               	bsf	59,6	;volatile
  2202                           
  2203                           ;user.c: 73: PWM3PR = (16000000 / freq) - 1;
  2204  0476  0020               	movlb	0	; select bank0
  2205  0477  0826               	movf	Buzz@freq,w
  2206  0478  00F1               	movwf	___aldiv@divisor
  2207  0479  0827               	movf	Buzz@freq+1,w
  2208  047A  00F2               	movwf	___aldiv@divisor+1
  2209  047B  01F3               	clrf	___aldiv@divisor+2
  2210  047C  01F4               	clrf	___aldiv@divisor+3
  2211  047D  3000               	movlw	0
  2212  047E  00F8               	movwf	___aldiv@dividend+3
  2213  047F  30F4               	movlw	244
  2214  0480  00F7               	movwf	___aldiv@dividend+2
  2215  0481  3024               	movlw	36
  2216  0482  00F6               	movwf	___aldiv@dividend+1
  2217  0483  3000               	movlw	0
  2218  0484  00F5               	movwf	___aldiv@dividend
  2219  0485  23F1               	fcall	___aldiv
  2220  0486  0871               	movf	?___aldiv,w
  2221  0487  3EFF               	addlw	255
  2222  0488  00FA               	movwf	??_Buzz
  2223  0489  30FF               	movlw	255
  2224  048A  3D72               	addwfc	?___aldiv+1,w
  2225  048B  00FB               	movwf	??_Buzz+1
  2226  048C  087A               	movf	??_Buzz,w
  2227  048D  003B               	movlb	27	; select bank27
  2228  048E  00B5               	movwf	53	;volatile
  2229  048F  087B               	movf	??_Buzz+1,w
  2230  0490  00B6               	movwf	54	;volatile
  2231                           
  2232                           ;user.c: 74: PWM3DC = PWM3PR >> 1;
  2233  0491  0836               	movf	54,w	;volatile
  2234  0492  00FB               	movwf	??_Buzz+1
  2235  0493  0835               	movf	53,w	;volatile
  2236  0494  00FA               	movwf	??_Buzz
  2237  0495  36FB               	lsrf	??_Buzz+1,f
  2238  0496  0CFA               	rrf	??_Buzz,f
  2239  0497  087A               	movf	??_Buzz,w
  2240  0498  00B3               	movwf	51	;volatile
  2241  0499  087B               	movf	??_Buzz+1,w
  2242  049A  00B4               	movwf	52	;volatile
  2243                           
  2244                           ;user.c: 75: PWM3PH = 0x0000;
  2245  049B  01B1               	clrf	49	;volatile
  2246  049C  01B2               	clrf	50	;volatile
  2247                           
  2248                           ;user.c: 76: PWM3LDCONbits.LDA = 1;
  2249  049D  17BF               	bsf	63,7	;volatile
  2250                           
  2251                           ;user.c: 78: for(uint16_t i = 0; i <= dur_ms; i++){
  2252  049E  0020               	movlb	0	; select bank0
  2253  049F  01AA               	clrf	Buzz@i
  2254  04A0  01AB               	clrf	Buzz@i+1
  2255  04A1                     l232:	
  2256  04A1  082B               	movf	Buzz@i+1,w
  2257  04A2  0229               	subwf	Buzz@dur_ms+1,w
  2258  04A3  1D03               	skipz
  2259  04A4  2CA7               	goto	u1105
  2260  04A5  082A               	movf	Buzz@i,w
  2261  04A6  0228               	subwf	Buzz@dur_ms,w
  2262  04A7                     u1105:	
  2263  04A7  1C03               	btfss	3,0
  2264  04A8  2CB8               	goto	l234
  2265                           
  2266                           ;user.c: 79: _delay((unsigned long)((1)*(16000000/4000.0)));
  2267  04A9  3006               	movlw	6
  2268  04AA  00FB               	movwf	??_Buzz+1
  2269  04AB  3030               	movlw	48
  2270  04AC  00FA               	movwf	??_Buzz
  2271  04AD                     u2917:	
  2272  04AD  0BFA               	decfsz	??_Buzz,f
  2273  04AE  2CAD               	goto	u2917
  2274  04AF  0BFB               	decfsz	??_Buzz+1,f
  2275  04B0  2CAD               	goto	u2917
  2276  04B1  0000               	nop
  2277  04B2  3001               	movlw	1
  2278  04B3  0020               	movlb	0	; select bank0
  2279  04B4  07AA               	addwf	Buzz@i,f
  2280  04B5  3000               	movlw	0
  2281  04B6  3DAB               	addwfc	Buzz@i+1,f
  2282  04B7  2CA1               	goto	l232
  2283  04B8                     l234:	
  2284                           
  2285                           ;user.c: 80: }
  2286                           ;user.c: 81: PWM3CONbits.PWM3OE = 0;
  2287  04B8  003B               	movlb	27	; select bank27
  2288  04B9  133B               	bcf	59,6	;volatile
  2289  04BA  0008               	return
  2290  04BB                     __end_of_Buzz:	
  2291                           
  2292                           	psect	text8
  2293  03F1                     __ptext8:	
  2294 ;; *************** function ___aldiv *****************
  2295 ;; Defined at:
  2296 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  divisor         4    1[COMMON] long 
  2299 ;;  dividend        4    5[COMMON] long 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  quotient        4    2[BANK0 ] long 
  2302 ;;  sign            1    1[BANK0 ] unsigned char 
  2303 ;;  counter         1    0[BANK0 ] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  4    1[COMMON] long 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2313 ;;      Params:         8       0       0       0
  2314 ;;      Locals:         0       6       0       0
  2315 ;;      Temps:          1       0       0       0
  2316 ;;      Totals:         9       6       0       0
  2317 ;;Total ram usage:       15 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_Buzz
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function ___aldiv
  2329  03F1                     ___aldiv:	
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2333  03F1  0020               	movlb	0	; select bank0
  2334  03F2  01A1               	clrf	___aldiv@sign
  2335  03F3  1FF4               	btfss	___aldiv@divisor+3,7
  2336  03F4  2C02               	goto	l310
  2337  03F5  09F1               	comf	___aldiv@divisor,f
  2338  03F6  09F2               	comf	___aldiv@divisor+1,f
  2339  03F7  09F3               	comf	___aldiv@divisor+2,f
  2340  03F8  09F4               	comf	___aldiv@divisor+3,f
  2341  03F9  0AF1               	incf	___aldiv@divisor,f
  2342  03FA  1903               	skipnz
  2343  03FB  0AF2               	incf	___aldiv@divisor+1,f
  2344  03FC  1903               	skipnz
  2345  03FD  0AF3               	incf	___aldiv@divisor+2,f
  2346  03FE  1903               	skipnz
  2347  03FF  0AF4               	incf	___aldiv@divisor+3,f
  2348  0400  01A1               	clrf	___aldiv@sign
  2349  0401  0AA1               	incf	___aldiv@sign,f
  2350  0402                     l310:	
  2351  0402  1FF8               	btfss	___aldiv@dividend+3,7
  2352  0403  2C13               	goto	l1112
  2353  0404  09F5               	comf	___aldiv@dividend,f
  2354  0405  09F6               	comf	___aldiv@dividend+1,f
  2355  0406  09F7               	comf	___aldiv@dividend+2,f
  2356  0407  09F8               	comf	___aldiv@dividend+3,f
  2357  0408  0AF5               	incf	___aldiv@dividend,f
  2358  0409  1903               	skipnz
  2359  040A  0AF6               	incf	___aldiv@dividend+1,f
  2360  040B  1903               	skipnz
  2361  040C  0AF7               	incf	___aldiv@dividend+2,f
  2362  040D  1903               	skipnz
  2363  040E  0AF8               	incf	___aldiv@dividend+3,f
  2364  040F  3001               	movlw	1
  2365  0410  00F9               	movwf	??___aldiv
  2366  0411  0879               	movf	??___aldiv,w
  2367  0412  06A1               	xorwf	___aldiv@sign,f
  2368  0413                     l1112:	
  2369  0413  3000               	movlw	0
  2370  0414  00A5               	movwf	___aldiv@quotient+3
  2371  0415  3000               	movlw	0
  2372  0416  00A4               	movwf	___aldiv@quotient+2
  2373  0417  3000               	movlw	0
  2374  0418  00A3               	movwf	___aldiv@quotient+1
  2375  0419  3000               	movlw	0
  2376  041A  00A2               	movwf	___aldiv@quotient
  2377  041B  0874               	movf	___aldiv@divisor+3,w
  2378  041C  0473               	iorwf	___aldiv@divisor+2,w
  2379  041D  0472               	iorwf	___aldiv@divisor+1,w
  2380  041E  0471               	iorwf	___aldiv@divisor,w
  2381  041F  1903               	skipnz
  2382  0420  2C5C               	goto	l1134
  2383  0421  01A0               	clrf	___aldiv@counter
  2384  0422  0AA0               	incf	___aldiv@counter,f
  2385  0423                     l1120:	
  2386  0423  1BF4               	btfsc	___aldiv@divisor+3,7
  2387  0424  2C31               	goto	l1122
  2388  0425  3001               	movlw	1
  2389  0426                     u1025:	
  2390  0426  35F1               	lslf	___aldiv@divisor,f
  2391  0427  0DF2               	rlf	___aldiv@divisor+1,f
  2392  0428  0DF3               	rlf	___aldiv@divisor+2,f
  2393  0429  0DF4               	rlf	___aldiv@divisor+3,f
  2394  042A  0B89               	decfsz	9,f
  2395  042B  2C26               	goto	u1025
  2396  042C  3001               	movlw	1
  2397  042D  00F9               	movwf	??___aldiv
  2398  042E  0879               	movf	??___aldiv,w
  2399  042F  07A0               	addwf	___aldiv@counter,f
  2400  0430  2C23               	goto	l1120
  2401  0431                     l1122:	
  2402  0431  3001               	movlw	1
  2403  0432                     u1045:	
  2404  0432  35A2               	lslf	___aldiv@quotient,f
  2405  0433  0DA3               	rlf	___aldiv@quotient+1,f
  2406  0434  0DA4               	rlf	___aldiv@quotient+2,f
  2407  0435  0DA5               	rlf	___aldiv@quotient+3,f
  2408  0436  0B89               	decfsz	9,f
  2409  0437  2C32               	goto	u1045
  2410  0438  0874               	movf	___aldiv@divisor+3,w
  2411  0439  0278               	subwf	___aldiv@dividend+3,w
  2412  043A  1D03               	skipz
  2413  043B  2C46               	goto	u1055
  2414  043C  0873               	movf	___aldiv@divisor+2,w
  2415  043D  0277               	subwf	___aldiv@dividend+2,w
  2416  043E  1D03               	skipz
  2417  043F  2C46               	goto	u1055
  2418  0440  0872               	movf	___aldiv@divisor+1,w
  2419  0441  0276               	subwf	___aldiv@dividend+1,w
  2420  0442  1D03               	skipz
  2421  0443  2C46               	goto	u1055
  2422  0444  0871               	movf	___aldiv@divisor,w
  2423  0445  0275               	subwf	___aldiv@dividend,w
  2424  0446                     u1055:	
  2425  0446  1C03               	skipc
  2426  0447  2C51               	goto	l1130
  2427  0448  0871               	movf	___aldiv@divisor,w
  2428  0449  02F5               	subwf	___aldiv@dividend,f
  2429  044A  0872               	movf	___aldiv@divisor+1,w
  2430  044B  3BF6               	subwfb	___aldiv@dividend+1,f
  2431  044C  0873               	movf	___aldiv@divisor+2,w
  2432  044D  3BF7               	subwfb	___aldiv@dividend+2,f
  2433  044E  0874               	movf	___aldiv@divisor+3,w
  2434  044F  3BF8               	subwfb	___aldiv@dividend+3,f
  2435  0450  1422               	bsf	___aldiv@quotient,0
  2436  0451                     l1130:	
  2437  0451  3001               	movlw	1
  2438  0452                     u1065:	
  2439  0452  36F4               	lsrf	___aldiv@divisor+3,f
  2440  0453  0CF3               	rrf	___aldiv@divisor+2,f
  2441  0454  0CF2               	rrf	___aldiv@divisor+1,f
  2442  0455  0CF1               	rrf	___aldiv@divisor,f
  2443  0456  0B89               	decfsz	9,f
  2444  0457  2C52               	goto	u1065
  2445  0458  3001               	movlw	1
  2446  0459  02A0               	subwf	___aldiv@counter,f
  2447  045A  1D03               	btfss	3,2
  2448  045B  2C31               	goto	l1122
  2449  045C                     l1134:	
  2450  045C  0821               	movf	___aldiv@sign,w
  2451  045D  1903               	btfsc	3,2
  2452  045E  2C6A               	goto	l1138
  2453  045F  09A2               	comf	___aldiv@quotient,f
  2454  0460  09A3               	comf	___aldiv@quotient+1,f
  2455  0461  09A4               	comf	___aldiv@quotient+2,f
  2456  0462  09A5               	comf	___aldiv@quotient+3,f
  2457  0463  0AA2               	incf	___aldiv@quotient,f
  2458  0464  1903               	skipnz
  2459  0465  0AA3               	incf	___aldiv@quotient+1,f
  2460  0466  1903               	skipnz
  2461  0467  0AA4               	incf	___aldiv@quotient+2,f
  2462  0468  1903               	skipnz
  2463  0469  0AA5               	incf	___aldiv@quotient+3,f
  2464  046A                     l1138:	
  2465  046A  0825               	movf	___aldiv@quotient+3,w
  2466  046B  00F4               	movwf	?___aldiv+3
  2467  046C  0824               	movf	___aldiv@quotient+2,w
  2468  046D  00F3               	movwf	?___aldiv+2
  2469  046E  0823               	movf	___aldiv@quotient+1,w
  2470  046F  00F2               	movwf	?___aldiv+1
  2471  0470  0822               	movf	___aldiv@quotient,w
  2472  0471  00F1               	movwf	?___aldiv
  2473  0472  0008               	return
  2474  0473                     __end_of___aldiv:	
  2475                           
  2476                           	psect	intentry
  2477  0004                     __pintentry:	
  2478 ;; *************** function _High_Priority_Interrupt *****************
  2479 ;; Defined at:
  2480 ;;		line 115 in file "user.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		wreg
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2494 ;;      Params:         0       0       0       0
  2495 ;;      Locals:         0       0       0       0
  2496 ;;      Temps:          1       0       0       0
  2497 ;;      Totals:         1       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		Interrupt level 1
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507  0004                     _High_Priority_Interrupt:	
  2508                           
  2509                           ;incstack = 0
  2510                           ; Regs used in _High_Priority_Interrupt: [wreg]
  2511  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2512  0005  3180               	pagesel	$
  2513  0006  0020               	movlb	0	; select bank0
  2514  0007  087F               	movf	127,w
  2515  0008  00F0               	movwf	??_High_Priority_Interrupt
  2516                           
  2517                           ;user.c: 116: if(PIR1bits.TMR1IF == 1)
  2518  0009  1C11               	btfss	17,0	;volatile
  2519  000A  2819               	goto	i1l251
  2520  000B  0022               	banksel	280	;# 
  2521  000C  0818               	movf	280,w	;# 
  2522  000D  3A20               	xorlw	32	;# 
  2523  000E  0098               	movwf	280	;# 
  2524  000F  0020               	banksel	12	;# 
  2525  0010  080C               	movf	12,w	;# 
  2526  0011  3A20               	xorlw	32	;# 
  2527  0012  008C               	movwf	12	;# 
  2528                           
  2529                           ;user.c: 128: TMR1 += 65486;
  2530  0013  30CE               	movlw	206
  2531  0014  0020               	movlb	0	; select bank0
  2532  0015  0796               	addwf	22,f	;volatile
  2533  0016  30FF               	movlw	255
  2534  0017  3D97               	addwfc	23,f	;volatile
  2535                           
  2536                           ;user.c: 129: PIR1bits.TMR1IF = 0;
  2537  0018  1011               	bcf	17,0	;volatile
  2538  0019                     i1l251:	
  2539  0019  0870               	movf	??_High_Priority_Interrupt,w
  2540  001A  00FF               	movwf	127
  2541  001B  107E               	bcf	126,0	;clear compiler interrupt flag
  2542  001C  0009               	retfie
  2543  001D                     __end_of_High_Priority_Interrupt:	
  2544  007E                     btemp	set	126	;btemp
  2545  007E                     pic14e$flags	set	126
  2546  007E                     wtemp	set	126
  2547  007E                     wtemp0	set	126
  2548  0080                     wtemp1	set	128
  2549  0082                     wtemp2	set	130
  2550  0084                     wtemp3	set	132
  2551  0086                     wtemp4	set	134
  2552  0088                     wtemp5	set	136
  2553  007F                     wtemp6	set	127
  2554  007E                     ttemp	set	126
  2555  007E                     ttemp0	set	126
  2556  0081                     ttemp1	set	129
  2557  0084                     ttemp2	set	132
  2558  0087                     ttemp3	set	135
  2559  007F                     ttemp4	set	127
  2560  007E                     ltemp	set	126
  2561  007E                     ltemp0	set	126
  2562  0082                     ltemp1	set	130
  2563  0086                     ltemp2	set	134
  2564  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     14      16
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _control_transfer->_Send_Byte
    _Fire->_Buzz
    _Buzz->___aldiv

Critical Paths under _High_Priority_Interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _Fire->_Buzz
    _Buzz->___aldiv

Critical Paths under _High_Priority_Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_Priority_Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_Priority_Interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4060
                                             12 BANK0      2     2      0
                               _Fire
                              _Setup
                   _control_transfer
 ---------------------------------------------------------------------------------
 (1) _control_transfer                                    11    11      0    3415
                                              2 COMMON     2     2      0
                                              0 BANK0      9     9      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Fire                                                 0     0      0     611
                               _Buzz
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      31
                                              1 COMMON     1     1      0
                 _Disable_Modulation
                    _Modulate_Serial
 ---------------------------------------------------------------------------------
 (3) _Modulate_Serial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Disable_Modulation                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Buzz                                                 8     4      4     580
                                             10 COMMON     2     2      0
                                              6 BANK0      6     2      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     406
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _High_Priority_Interrupt                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Fire
     _Buzz
       ___aldiv
     _Send_Byte
       _Disable_Modulation
       _Modulate_Serial
   _Setup
   _control_transfer
     _Send_Byte
       _Disable_Modulation
       _Modulate_Serial

 _High_Priority_Interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      10       6       20.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Aug 17 02:14:41 2014

                     __CFG_CP$OFF 0000                                l23 0029                                l40 0096  
                              l36 007B                                l28 0044                                l61 011B  
                              l53 00E5                                l72 01AF                                l49 00CA  
                              l90 0230                                l83 01FD                                l68 0194  
                              l94 024B                                l79 01E2                                _GO 04E9  
                             l102 0281                               l120 0334                               l113 0301  
                             l132 0385                               l124 034F                               l109 02E6  
                             l310 0402                               l232 04A1                               l145 04D2  
                             l234 04B8                               l138 03F0                               l238 0507  
                    __CFG_BORV$LO 0000                               wreg 0009                      __CFG_LVP$OFF 0000  
                            l1120 0423                              l1112 0413                              l1130 0451  
                            l1122 0431                              l1134 045C                              PORTA 000C  
                            l1138 046A                              l1600 00A9                              l1622 00F8  
                            l1614 00DD                              l1704 01C2                              l1640 012E  
                            l1608 00C8                              l1810 02E4                              l1740 0243  
                            l1726 0210                              l1718 01F5                              l1902 03E3  
                            l1574 0057                              l1566 003C                              l1824 0314  
                            l1816 02F9                              l1592 008E                              l1690 0191  
                            l1748 025E                              l1846 0362                              l1838 0347  
                            l1766 0294                              l1864 0398                              l1696 01A7  
                            _ADON 04E8                              _CHS0 04EA                              _CHS1 04EB  
                            u1025 0426                              u1105 04A7                              u1045 0432  
                            u1055 0446                              u1065 0452                              u2205 017F  
                            u2135 0109                              u2065 00BA                              u2415 026F  
                            u2345 0221                              u2185 0144                              u2275 01D3  
                            u2195 0168                              u2625 0373                              u2555 0325  
                            u2475 02AE                              u2485 02CD                              u2807 01B3  
                            u2727 002D                              u2817 01E6                              u2737 0048  
                            u2675 03B2                              u2907 0389                              u2827 0201  
                            u2747 007F                              u2917 04AD                              u2685 03D1  
                            u2837 0234                              u2757 009A                              u2847 024F  
                            u2767 00CE                              u2857 0285                              u2777 00E9  
                            u1985 0068                              u2867 02EA                              u2787 011F  
                            u2877 0305                              u2797 0198                              u2887 0338  
                            u2897 0353                              _TMR1 0016                              _Fire 04E2  
                            _Buzz 0473                      __CFG_WRT$OFF 0000                              _main 04D1  
                   Send_Byte@data 0071                              btemp 007E                     __CFG_BOREN$ON 0000  
                            ltemp 007E                              start 001D                              ttemp 007E  
                            wtemp 007E                        Buzz@dur_ms 0028                     __CFG_MCLRE$ON 0000  
                           ?_Fire 0070                             ?_Buzz 0026                   __end_of___aldiv 0473  
                           ?_main 0070                     __CFG_WDTE$OFF 0000  __size_of_High_Priority_Interrupt 0019  
                           i1l251 0019                             _RCREG 0199                             _TXREG 019A  
                           Buzz@i 002A                             _Setup 04BB                             _my_id 007C  
                           main@b 002D                             ltemp0 007E                             ltemp1 0082  
                           ltemp2 0086                             ltemp3 0080                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
        __end_of_control_transfer 03F1                      __end_of_Fire 04F2                   __initialization 001E  
                    __end_of_Buzz 04BB                      __end_of_main 04E2                            DACCON0 0118  
                          ??_Fire 007C                            ??_Buzz 007A                            ??_main 002C  
                  __CFG_PLLEN$OFF 0000                            ?_Setup 0070                            _ADCON0 009D  
                          _ADCON1 009E                            _ADRESH 009C                            _ADRESL 009B  
                          _ANSELA 018C                            _OSCCON 0099                            _PWM3DC 0DB3  
                          _PWM3PH 0DB1                            _SPBRGL 019B                            _PWM3PR 0DB5  
                  __CFG_PWRTE$OFF 0000                         ??___aldiv 0079                __size_of_Send_Byte 000D  
                  __CFG_STVREN$ON 0000        __end_of_Disable_Modulation 0513                      __pdataCOMMON 007C  
                _my_random_number 002F          __size_of_Modulate_Serial 000E           __end_of__initialization 0022  
                  __pcstackCOMMON 0070                     __end_of_Setup 04D1           _High_Priority_Interrupt 0004  
                         ??_Setup 0071                 __end_of_Send_Byte 050D                        __pbssBANK0 002E  
                      __pmaintext 04D1                        __pintentry 0004                 ??_Modulate_Serial 0071  
               ?_control_transfer 0070                ??_control_transfer 0072         ??_High_Priority_Interrupt 0070  
                         ___aldiv 03F1                           __ptext1 0025                           __ptext2 04BB  
                         __ptext3 04E2                           __ptext4 0500                           __ptext5 04F2  
                         __ptext6 050D                           __ptext7 0473                           __ptext8 03F1  
                       _T1CONbits 0018                  ___aldiv@dividend 0075              end_of_initialization 0022  
                       _RCSTAbits 019D                  ___aldiv@quotient 0022                         _PORTAbits 000C  
                __CFG_FOSC$INTOSC 0000                         _TRISAbits 008C                       _DACCON0bits 0118  
              _Disable_Modulation 050D                         _TXSTAbits 019E               control_transfer@cmd 0020  
             ?_Disable_Modulation 0070                       _BAUDCONbits 019F                     __pidataCOMMON 0513  
             start_initialization 001E              ??_Disable_Modulation 0071                         _Send_Byte 0500  
                   _PWM3LDCONbits 0DBF                  __CFG_LPBOREN$OFF 0000                         ___latbits 0000  
                 _Modulate_Serial 04F2                     __pcstackBANK0 0020                        ?_Send_Byte 0070  
                        ?___aldiv 0071                    _my_power_level 002E         __size_of_control_transfer 03CC  
                  __size_of_Setup 0016                   ___aldiv@divisor 0071                   ___aldiv@counter 0020  
                        _PIE1bits 0091                          _PIR1bits 0011          control_transfer@checksum 0024  
         __end_of_Modulate_Serial 0500                        _ADCON0bits 009D                control_transfer@id 0023  
                        Buzz@freq 0026       control_transfer@power_level 0021                       ??_Send_Byte 0071  
        ?_High_Priority_Interrupt 0070                  __size_of___aldiv 0082     control_transfer@random_number 0022  
                   __size_of_Fire 0010                     __size_of_Buzz 0048                     __size_of_main 0011  
               control_transfer@i 0025                 control_transfer@x 0028                 control_transfer@y 0027  
                ?_Modulate_Serial 0070                  _control_transfer 0025                        _INTCONbits 000B  
     __size_of_Disable_Modulation 0006                       _PWM3CONbits 0DBB                       pic14e$flags 007E  
                        intlevel1 0000   __end_of_High_Priority_Interrupt 001D                 __CFG_CLKOUTEN$OFF 0000  
                    ___aldiv@sign 0021  
