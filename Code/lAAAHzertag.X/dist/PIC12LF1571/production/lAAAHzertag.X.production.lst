

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Aug 17 14:48:41 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	12LF1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  008C                     	;# 
    50  0091                     	;# 
    51  0092                     	;# 
    52  0093                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0115                     	;# 
    69  0116                     	;# 
    70  0117                     	;# 
    71  0118                     	;# 
    72  0119                     	;# 
    73  011D                     	;# 
    74  011D                     	;# 
    75  018C                     	;# 
    76  0191                     	;# 
    77  0191                     	;# 
    78  0192                     	;# 
    79  0193                     	;# 
    80  0193                     	;# 
    81  0194                     	;# 
    82  0195                     	;# 
    83  0196                     	;# 
    84  0197                     	;# 
    85  0199                     	;# 
    86  019A                     	;# 
    87  019B                     	;# 
    88  019B                     	;# 
    89  019C                     	;# 
    90  019D                     	;# 
    91  019E                     	;# 
    92  019F                     	;# 
    93  020C                     	;# 
    94  028C                     	;# 
    95  030C                     	;# 
    96  038C                     	;# 
    97  0391                     	;# 
    98  0392                     	;# 
    99  0393                     	;# 
   100  0691                     	;# 
   101  0692                     	;# 
   102  0693                     	;# 
   103  0694                     	;# 
   104  0695                     	;# 
   105  0D8E                     	;# 
   106  0D8F                     	;# 
   107  0D90                     	;# 
   108  0D91                     	;# 
   109  0D91                     	;# 
   110  0D92                     	;# 
   111  0D93                     	;# 
   112  0D93                     	;# 
   113  0D94                     	;# 
   114  0D95                     	;# 
   115  0D95                     	;# 
   116  0D96                     	;# 
   117  0D97                     	;# 
   118  0D97                     	;# 
   119  0D98                     	;# 
   120  0D99                     	;# 
   121  0D99                     	;# 
   122  0D9A                     	;# 
   123  0D9B                     	;# 
   124  0D9C                     	;# 
   125  0D9C                     	;# 
   126  0D9D                     	;# 
   127  0D9D                     	;# 
   128  0D9E                     	;# 
   129  0D9F                     	;# 
   130  0DA0                     	;# 
   131  0DA1                     	;# 
   132  0DA1                     	;# 
   133  0DA2                     	;# 
   134  0DA3                     	;# 
   135  0DA3                     	;# 
   136  0DA4                     	;# 
   137  0DA5                     	;# 
   138  0DA5                     	;# 
   139  0DA6                     	;# 
   140  0DA7                     	;# 
   141  0DA7                     	;# 
   142  0DA8                     	;# 
   143  0DA9                     	;# 
   144  0DA9                     	;# 
   145  0DAA                     	;# 
   146  0DAB                     	;# 
   147  0DAC                     	;# 
   148  0DAC                     	;# 
   149  0DAD                     	;# 
   150  0DAD                     	;# 
   151  0DAE                     	;# 
   152  0DAF                     	;# 
   153  0DB0                     	;# 
   154  0DB1                     	;# 
   155  0DB1                     	;# 
   156  0DB2                     	;# 
   157  0DB3                     	;# 
   158  0DB3                     	;# 
   159  0DB4                     	;# 
   160  0DB5                     	;# 
   161  0DB5                     	;# 
   162  0DB6                     	;# 
   163  0DB7                     	;# 
   164  0DB7                     	;# 
   165  0DB8                     	;# 
   166  0DB9                     	;# 
   167  0DB9                     	;# 
   168  0DBA                     	;# 
   169  0DBB                     	;# 
   170  0DBC                     	;# 
   171  0DBC                     	;# 
   172  0DBD                     	;# 
   173  0DBD                     	;# 
   174  0DBE                     	;# 
   175  0DBF                     	;# 
   176  0DC0                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE8                     	;# 
   183  0FE9                     	;# 
   184  0FEA                     	;# 
   185  0FEA                     	;# 
   186  0FEB                     	;# 
   187  0FED                     	;# 
   188  0FEE                     	;# 
   189  0FEE                     	;# 
   190  0FEF                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  008C                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  010C                     	;# 
   233  0111                     	;# 
   234  0112                     	;# 
   235  0115                     	;# 
   236  0116                     	;# 
   237  0117                     	;# 
   238  0118                     	;# 
   239  0119                     	;# 
   240  011D                     	;# 
   241  011D                     	;# 
   242  018C                     	;# 
   243  0191                     	;# 
   244  0191                     	;# 
   245  0192                     	;# 
   246  0193                     	;# 
   247  0193                     	;# 
   248  0194                     	;# 
   249  0195                     	;# 
   250  0196                     	;# 
   251  0197                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019D                     	;# 
   258  019E                     	;# 
   259  019F                     	;# 
   260  020C                     	;# 
   261  028C                     	;# 
   262  030C                     	;# 
   263  038C                     	;# 
   264  0391                     	;# 
   265  0392                     	;# 
   266  0393                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0D8E                     	;# 
   273  0D8F                     	;# 
   274  0D90                     	;# 
   275  0D91                     	;# 
   276  0D91                     	;# 
   277  0D92                     	;# 
   278  0D93                     	;# 
   279  0D93                     	;# 
   280  0D94                     	;# 
   281  0D95                     	;# 
   282  0D95                     	;# 
   283  0D96                     	;# 
   284  0D97                     	;# 
   285  0D97                     	;# 
   286  0D98                     	;# 
   287  0D99                     	;# 
   288  0D99                     	;# 
   289  0D9A                     	;# 
   290  0D9B                     	;# 
   291  0D9C                     	;# 
   292  0D9C                     	;# 
   293  0D9D                     	;# 
   294  0D9D                     	;# 
   295  0D9E                     	;# 
   296  0D9F                     	;# 
   297  0DA0                     	;# 
   298  0DA1                     	;# 
   299  0DA1                     	;# 
   300  0DA2                     	;# 
   301  0DA3                     	;# 
   302  0DA3                     	;# 
   303  0DA4                     	;# 
   304  0DA5                     	;# 
   305  0DA5                     	;# 
   306  0DA6                     	;# 
   307  0DA7                     	;# 
   308  0DA7                     	;# 
   309  0DA8                     	;# 
   310  0DA9                     	;# 
   311  0DA9                     	;# 
   312  0DAA                     	;# 
   313  0DAB                     	;# 
   314  0DAC                     	;# 
   315  0DAC                     	;# 
   316  0DAD                     	;# 
   317  0DAD                     	;# 
   318  0DAE                     	;# 
   319  0DAF                     	;# 
   320  0DB0                     	;# 
   321  0DB1                     	;# 
   322  0DB1                     	;# 
   323  0DB2                     	;# 
   324  0DB3                     	;# 
   325  0DB3                     	;# 
   326  0DB4                     	;# 
   327  0DB5                     	;# 
   328  0DB5                     	;# 
   329  0DB6                     	;# 
   330  0DB7                     	;# 
   331  0DB7                     	;# 
   332  0DB8                     	;# 
   333  0DB9                     	;# 
   334  0DB9                     	;# 
   335  0DBA                     	;# 
   336  0DBB                     	;# 
   337  0DBC                     	;# 
   338  0DBC                     	;# 
   339  0DBD                     	;# 
   340  0DBD                     	;# 
   341  0DBE                     	;# 
   342  0DBF                     	;# 
   343  0DC0                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE8                     	;# 
   350  0FE9                     	;# 
   351  0FEA                     	;# 
   352  0FEA                     	;# 
   353  0FEB                     	;# 
   354  0FED                     	;# 
   355  0FEE                     	;# 
   356  0FEE                     	;# 
   357  0FEF                     	;# 
   358                           
   359                           	psect	idataCOMMON
   360  055D                     __pidataCOMMON:	
   361                           
   362                           ;initializer for _my_id
   363  055D  3480               	retlw	128
   364  0016                     _TMR1	set	22
   365  000B                     _INTCONbits	set	11
   366  0011                     _PIR1bits	set	17
   367  000C                     _PORTAbits	set	12
   368  0018                     _T1CONbits	set	24
   369  009D                     _ADCON0	set	157
   370  009D                     _ADCON0bits	set	157
   371  009E                     _ADCON1	set	158
   372  009C                     _ADRESH	set	156
   373  009B                     _ADRESL	set	155
   374  0099                     _OSCCON	set	153
   375  0091                     _PIE1bits	set	145
   376  008C                     _TRISAbits	set	140
   377  04E8                     _ADON	set	1256
   378  04EA                     _CHS0	set	1258
   379  04EB                     _CHS1	set	1259
   380  04E9                     _GO	set	1257
   381  0118                     _DACCON0bits	set	280
   382  0191                     _PMADR	set	401
   383  0193                     _PMDAT	set	403
   384  018C                     _ANSELA	set	396
   385  019F                     _BAUDCONbits	set	415
   386  0195                     _PMCON1bits	set	405
   387  0196                     _PMCON2	set	406
   388  0199                     _RCREG	set	409
   389  019D                     _RCSTAbits	set	413
   390  019B                     _SPBRGL	set	411
   391  019A                     _TXREG	set	410
   392  019E                     _TXSTAbits	set	414
   393  0DB3                     _PWM3DC	set	3507
   394  0DB1                     _PWM3PH	set	3505
   395  0DB5                     _PWM3PR	set	3509
   396  0DBB                     _PWM3CONbits	set	3515
   397  0DBF                     _PWM3LDCONbits	set	3519
   398                           
   399                           ; #config settings
   400  0000                     
   401                           	psect	cinit
   402  001A                     start_initialization:	
   403  001A                     __initialization:	
   404                           
   405                           ; Clear objects allocated to BANK0
   406  001A  01AE               	clrf	__pbssBANK0& (0+127)
   407  001B  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   408                           
   409                           ; Initialize objects allocated to COMMON
   410  001C  255D               	fcall	__pidataCOMMON	;fetch initializer
   411  001D  00FC               	movwf	__pdataCOMMON& (0+127)
   412  001E                     end_of_initialization:	
   413                           ;End of C runtime variable initialization code
   414                           
   415  001E                     __end_of__initialization:	
   416  001E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   417  001F  0020               	movlb	0
   418  0020  2CF0               	ljmp	_main	;jump to C main() function
   419                           
   420                           	psect	dataCOMMON
   421  007C                     __pdataCOMMON:	
   422  007C                     _my_id:	
   423  007C                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  002E                     __pbssBANK0:	
   427  002E                     _my_power_level:	
   428  002E                     	ds	1
   429  002F                     _my_random_number:	
   430  002F                     	ds	1
   431                           
   432                           	psect	cstackCOMMON
   433  0070                     __pcstackCOMMON:	
   434  0070                     ?_Send_Byte:	
   435  0070                     ?_Setup:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0070                     ?_Get_hit:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0070                     ?_Modulate_Serial:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0070                     ?_Disable_Modulation:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0070                     ?_control_transfer:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0070                     ?_Fire:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0070                     ?_main:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  0070                     ?_LED_on:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0070                     ?_LED_off:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0070                     ?_High_Priority_Interrupt:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0070                     ??_High_Priority_Interrupt:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0070                     Get_hit@ID:	
   469                           ; 0 bytes @ 0x0
   470                           
   471                           
   472                           ; 1 bytes @ 0x0
   473  0070                     	ds	1
   474  0071                     ??_Send_Byte:	
   475  0071                     ??_Setup:	
   476                           ; 0 bytes @ 0x1
   477                           
   478  0071                     ??_Modulate_Serial:	
   479                           ; 0 bytes @ 0x1
   480                           
   481  0071                     ??_Disable_Modulation:	
   482                           ; 0 bytes @ 0x1
   483                           
   484  0071                     ??_LED_on:	
   485                           ; 0 bytes @ 0x1
   486                           
   487  0071                     ??_LED_off:	
   488                           ; 0 bytes @ 0x1
   489                           
   490  0071                     ?___aldiv:	
   491                           ; 0 bytes @ 0x1
   492                           
   493  0071                     Send_Byte@data:	
   494                           ; 4 bytes @ 0x1
   495                           
   496  0071                     ___aldiv@divisor:	
   497                           ; 1 bytes @ 0x1
   498                           
   499                           
   500                           ; 4 bytes @ 0x1
   501  0071                     	ds	1
   502  0072                     ??_control_transfer:	
   503                           
   504                           ; 0 bytes @ 0x2
   505  0072                     	ds	3
   506  0075                     ___aldiv@dividend:	
   507                           
   508                           ; 4 bytes @ 0x5
   509  0075                     	ds	4
   510  0079                     ??___aldiv:	
   511                           
   512                           ; 0 bytes @ 0x9
   513  0079                     	ds	1
   514  007A                     ??_Buzz:	
   515                           
   516                           ; 0 bytes @ 0xA
   517  007A                     	ds	2
   518  007C                     ??_Get_hit:	
   519  007C                     ??_Fire:	
   520                           ; 0 bytes @ 0xC
   521                           
   522                           
   523                           	psect	cstackBANK0
   524  0020                     __pcstackBANK0:	
   525                           ; 0 bytes @ 0xC
   526                           
   527  0020                     control_transfer@cmd:	
   528  0020                     ___aldiv@counter:	
   529                           ; 1 bytes @ 0x0
   530                           
   531                           
   532                           ; 1 bytes @ 0x0
   533  0020                     	ds	1
   534  0021                     control_transfer@power_level:	
   535  0021                     ___aldiv@sign:	
   536                           ; 1 bytes @ 0x1
   537                           
   538                           
   539                           ; 1 bytes @ 0x1
   540  0021                     	ds	1
   541  0022                     control_transfer@random_number:	
   542  0022                     ___aldiv@quotient:	
   543                           ; 1 bytes @ 0x2
   544                           
   545                           
   546                           ; 4 bytes @ 0x2
   547  0022                     	ds	1
   548  0023                     control_transfer@id:	
   549                           
   550                           ; 1 bytes @ 0x3
   551  0023                     	ds	1
   552  0024                     control_transfer@checksum:	
   553                           
   554                           ; 1 bytes @ 0x4
   555  0024                     	ds	1
   556  0025                     control_transfer@i:	
   557                           
   558                           ; 2 bytes @ 0x5
   559  0025                     	ds	1
   560  0026                     ?_Buzz:	
   561  0026                     Buzz@freq:	
   562                           ; 0 bytes @ 0x6
   563                           
   564                           
   565                           ; 2 bytes @ 0x6
   566  0026                     	ds	1
   567  0027                     control_transfer@y:	
   568                           
   569                           ; 1 bytes @ 0x7
   570  0027                     	ds	1
   571  0028                     control_transfer@x:	
   572  0028                     Buzz@dur_ms:	
   573                           ; 1 bytes @ 0x8
   574                           
   575                           
   576                           ; 2 bytes @ 0x8
   577  0028                     	ds	2
   578  002A                     Buzz@i:	
   579                           
   580                           ; 2 bytes @ 0xA
   581  002A                     	ds	2
   582  002C                     ??_main:	
   583                           
   584                           ; 0 bytes @ 0xC
   585  002C                     	ds	1
   586  002D                     main@b:	
   587                           
   588                           ; 1 bytes @ 0xD
   589  002D                     	ds	1
   590                           
   591                           	psect	maintext
   592  04F0                     __pmaintext:	
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 102 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  b               1   13[BANK0 ] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;		None               void
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 17F/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   612 ;;      Params:         0       0       0       0
   613 ;;      Locals:         0       1       0       0
   614 ;;      Temps:          0       1       0       0
   615 ;;      Totals:         0       2       0       0
   616 ;;Total ram usage:        2 bytes
   617 ;; Hardware stack levels required when called:    4
   618 ;; This function calls:
   619 ;;		_Fire
   620 ;;		_Get_hit
   621 ;;		_Setup
   622 ;;		_control_transfer
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _main
   630  04F0                     _main:	
   631                           
   632                           ;main.c: 104: uint8_t b;
   633                           ;main.c: 106: Setup();
   634                           
   635                           ;incstack = 0
   636                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   637  04F0  250C               	fcall	_Setup
   638  04F1                     l147:	
   639                           ;main.c: 108: while(1)
   640                           
   641                           
   642                           ;main.c: 109: {
   643                           ;main.c: 128: Fire();
   644  04F1  2525               	fcall	_Fire
   645                           
   646                           ;main.c: 129: if((PIR1bits.RCIF))
   647  04F2  0020               	movlb	0	; select bank0
   648  04F3  1E91               	btfss	17,5	;volatile
   649  04F4  2CF1               	goto	l147
   650                           
   651                           ;main.c: 130: {
   652                           ;main.c: 131: b=(RCREG);
   653  04F5  0023               	movlb	3	; select bank3
   654  04F6  0819               	movf	25,w	;volatile
   655  04F7  0020               	movlb	0	; select bank0
   656  04F8  00AC               	movwf	??_main
   657  04F9  082C               	movf	??_main,w
   658  04FA  00AD               	movwf	main@b
   659                           
   660                           ;main.c: 132: if(b == 0x10) {
   661  04FB  082D               	movf	main@b,w
   662  04FC  3A10               	xorlw	16
   663  04FD  1D03               	skipz
   664  04FE  2D00               	goto	l2061
   665                           
   666                           ;main.c: 133: control_transfer();
   667  04FF  2021               	fcall	_control_transfer
   668  0500                     l2061:	
   669                           
   670                           ;main.c: 134: }
   671                           ;main.c: 135: if((b > 0x80) && (b != my_id)) {
   672  0500  3081               	movlw	129
   673  0501  0020               	movlb	0	; select bank0
   674  0502  022D               	subwf	main@b,w
   675  0503  1C03               	skipc
   676  0504  2CF1               	goto	l147
   677  0505  082D               	movf	main@b,w
   678  0506  067C               	xorwf	_my_id,w
   679  0507  1903               	skipnz
   680  0508  2CF1               	goto	l147
   681                           
   682                           ;main.c: 136: Get_hit(b);
   683  0509  082D               	movf	main@b,w
   684  050A  24B7               	fcall	_Get_hit
   685  050B  2CF1               	goto	l147
   686  050C                     __end_of_main:	
   687                           
   688                           	psect	text1
   689  0021                     __ptext1:	
   690 ;; *************** function _control_transfer *****************
   691 ;; Defined at:
   692 ;;		line 49 in file "main.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  i               2    5[BANK0 ] unsigned int 
   697 ;;  x               1    8[BANK0 ] unsigned char 
   698 ;;  y               1    7[BANK0 ] unsigned char 
   699 ;;  checksum        1    4[BANK0 ] unsigned char 
   700 ;;  id              1    3[BANK0 ] unsigned char 
   701 ;;  random_numbe    1    2[BANK0 ] unsigned char 
   702 ;;  power_level     1    1[BANK0 ] unsigned char 
   703 ;;  cmd             1    0[BANK0 ] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;		None               void
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   713 ;;      Params:         0       0       0       0
   714 ;;      Locals:         0       9       0       0
   715 ;;      Temps:          2       0       0       0
   716 ;;      Totals:         2       9       0       0
   717 ;;Total ram usage:       11 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    3
   720 ;; This function calls:
   721 ;;		_Send_Byte
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _control_transfer
   729  0021                     _control_transfer:	
   730                           
   731                           ;main.c: 51: uint8_t x,y,checksum;
   732                           ;main.c: 52: uint16_t i;
   733                           ;main.c: 54: uint8_t cmd;
   734                           ;main.c: 55: uint8_t power_level,random_number,id;
   735                           ;main.c: 57: checksum = 0; i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(160
      +                          00000/4000000.0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF
      +                          ) {_delay((unsigned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in _control_transfer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   739  0021  0020               	movlb	0	; select bank0
   740  0022  01A4               	clrf	control_transfer@checksum
   741  0023  01A5               	clrf	control_transfer@i
   742  0024  01A6               	clrf	control_transfer@i+1
   743  0025                     l25:	
   744  0025  1A91               	btfsc	17,5	;volatile
   745  0026  2838               	goto	l1711
   746  0027  3085               	movlw	133
   747  0028  00F2               	movwf	??_control_transfer
   748  0029                     u2787:	
   749  0029  0BF2               	decfsz	??_control_transfer,f
   750  002A  2829               	goto	u2787
   751  002B  3001               	movlw	1
   752  002C  0020               	movlb	0	; select bank0
   753  002D  07A5               	addwf	control_transfer@i,f
   754  002E  3000               	movlw	0
   755  002F  3DA6               	addwfc	control_transfer@i+1,f
   756  0030  3003               	movlw	3
   757  0031  0226               	subwf	control_transfer@i+1,w
   758  0032  30E8               	movlw	232
   759  0033  1903               	skipnz
   760  0034  0225               	subwf	control_transfer@i,w
   761  0035  1803               	btfsc	3,0
   762  0036  0008               	return
   763  0037  2825               	goto	l25
   764  0038                     l1711:	
   765  0038  0023               	movlb	3	; select bank3
   766  0039  0819               	movf	25,w	;volatile
   767  003A  00F2               	movwf	??_control_transfer
   768  003B  0872               	movf	??_control_transfer,w
   769  003C  0020               	movlb	0	; select bank0
   770  003D  00A8               	movwf	control_transfer@x
   771  003E  01A5               	clrf	control_transfer@i
   772  003F  01A6               	clrf	control_transfer@i+1
   773  0040                     l30:	
   774  0040  1A91               	btfsc	17,5	;volatile
   775  0041  2853               	goto	l1719
   776  0042  3085               	movlw	133
   777  0043  00F2               	movwf	??_control_transfer
   778  0044                     u2797:	
   779  0044  0BF2               	decfsz	??_control_transfer,f
   780  0045  2844               	goto	u2797
   781  0046  3001               	movlw	1
   782  0047  0020               	movlb	0	; select bank0
   783  0048  07A5               	addwf	control_transfer@i,f
   784  0049  3000               	movlw	0
   785  004A  3DA6               	addwfc	control_transfer@i+1,f
   786  004B  3003               	movlw	3
   787  004C  0226               	subwf	control_transfer@i+1,w
   788  004D  30E8               	movlw	232
   789  004E  1903               	skipnz
   790  004F  0225               	subwf	control_transfer@i,w
   791  0050  1803               	btfsc	3,0
   792  0051  0008               	return
   793  0052  2840               	goto	l30
   794  0053                     l1719:	
   795  0053  0023               	movlb	3	; select bank3
   796  0054  0819               	movf	25,w	;volatile
   797  0055  00F2               	movwf	??_control_transfer
   798  0056  0872               	movf	??_control_transfer,w
   799  0057  0020               	movlb	0	; select bank0
   800  0058  00A7               	movwf	control_transfer@y
   801  0059  0828               	movf	control_transfer@x,w
   802  005A  39F0               	andlw	240
   803  005B  1D03               	btfss	3,2
   804  005C  0008               	return
   805  005D  0827               	movf	control_transfer@y,w
   806  005E  39F0               	andlw	240
   807  005F  1D03               	btfss	3,2
   808  0060  0008               	return
   809  0061  0827               	movf	control_transfer@y,w
   810  0062  00F2               	movwf	??_control_transfer
   811  0063  3003               	movlw	3
   812  0064                     u2025:	
   813  0064  35F2               	lslf	??_control_transfer,f
   814  0065  3EFF               	addlw	-1
   815  0066  1D03               	skipz
   816  0067  2864               	goto	u2025
   817  0068  3572               	lslf	??_control_transfer,w
   818  0069  0428               	iorwf	control_transfer@x,w
   819  006A  00F3               	movwf	??_control_transfer+1
   820  006B  0873               	movf	??_control_transfer+1,w
   821  006C  00A8               	movwf	control_transfer@x
   822  006D  0828               	movf	control_transfer@x,w
   823  006E  00F2               	movwf	??_control_transfer
   824  006F  0872               	movf	??_control_transfer,w
   825  0070  07A4               	addwf	control_transfer@checksum,f
   826  0071  0828               	movf	control_transfer@x,w
   827  0072  067C               	xorwf	_my_id,w
   828  0073  1D03               	btfss	3,2
   829  0074  0008               	return
   830                           
   831                           ;main.c: 58: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
   832  0075  01A5               	clrf	control_transfer@i
   833  0076  01A6               	clrf	control_transfer@i+1
   834  0077                     l38:	
   835  0077  1A91               	btfsc	17,5	;volatile
   836  0078  288A               	goto	l1737
   837  0079  3085               	movlw	133
   838  007A  00F2               	movwf	??_control_transfer
   839  007B                     u2807:	
   840  007B  0BF2               	decfsz	??_control_transfer,f
   841  007C  287B               	goto	u2807
   842  007D  3001               	movlw	1
   843  007E  0020               	movlb	0	; select bank0
   844  007F  07A5               	addwf	control_transfer@i,f
   845  0080  3000               	movlw	0
   846  0081  3DA6               	addwfc	control_transfer@i+1,f
   847  0082  3003               	movlw	3
   848  0083  0226               	subwf	control_transfer@i+1,w
   849  0084  30E8               	movlw	232
   850  0085  1903               	skipnz
   851  0086  0225               	subwf	control_transfer@i,w
   852  0087  1803               	btfsc	3,0
   853  0088  0008               	return
   854  0089  2877               	goto	l38
   855  008A                     l1737:	
   856  008A  0023               	movlb	3	; select bank3
   857  008B  0819               	movf	25,w	;volatile
   858  008C  00F2               	movwf	??_control_transfer
   859  008D  0872               	movf	??_control_transfer,w
   860  008E  0020               	movlb	0	; select bank0
   861  008F  00A8               	movwf	control_transfer@x
   862  0090  01A5               	clrf	control_transfer@i
   863  0091  01A6               	clrf	control_transfer@i+1
   864  0092                     l42:	
   865  0092  1A91               	btfsc	17,5	;volatile
   866  0093  28A5               	goto	l1745
   867  0094  3085               	movlw	133
   868  0095  00F2               	movwf	??_control_transfer
   869  0096                     u2817:	
   870  0096  0BF2               	decfsz	??_control_transfer,f
   871  0097  2896               	goto	u2817
   872  0098  3001               	movlw	1
   873  0099  0020               	movlb	0	; select bank0
   874  009A  07A5               	addwf	control_transfer@i,f
   875  009B  3000               	movlw	0
   876  009C  3DA6               	addwfc	control_transfer@i+1,f
   877  009D  3003               	movlw	3
   878  009E  0226               	subwf	control_transfer@i+1,w
   879  009F  30E8               	movlw	232
   880  00A0  1903               	skipnz
   881  00A1  0225               	subwf	control_transfer@i,w
   882  00A2  1803               	btfsc	3,0
   883  00A3  0008               	return
   884  00A4  2892               	goto	l42
   885  00A5                     l1745:	
   886  00A5  0023               	movlb	3	; select bank3
   887  00A6  0819               	movf	25,w	;volatile
   888  00A7  00F2               	movwf	??_control_transfer
   889  00A8  0872               	movf	??_control_transfer,w
   890  00A9  0020               	movlb	0	; select bank0
   891  00AA  00A7               	movwf	control_transfer@y
   892  00AB  0828               	movf	control_transfer@x,w
   893  00AC  39F0               	andlw	240
   894  00AD  1D03               	btfss	3,2
   895  00AE  0008               	return
   896  00AF  0827               	movf	control_transfer@y,w
   897  00B0  39F0               	andlw	240
   898  00B1  1D03               	btfss	3,2
   899  00B2  0008               	return
   900  00B3  0827               	movf	control_transfer@y,w
   901  00B4  00F2               	movwf	??_control_transfer
   902  00B5  3003               	movlw	3
   903  00B6                     u2105:	
   904  00B6  35F2               	lslf	??_control_transfer,f
   905  00B7  3EFF               	addlw	-1
   906  00B8  1D03               	skipz
   907  00B9  28B6               	goto	u2105
   908  00BA  3572               	lslf	??_control_transfer,w
   909  00BB  0428               	iorwf	control_transfer@x,w
   910  00BC  00F3               	movwf	??_control_transfer+1
   911  00BD  0873               	movf	??_control_transfer+1,w
   912  00BE  00A0               	movwf	control_transfer@cmd
   913  00BF  0820               	movf	control_transfer@cmd,w
   914  00C0  00F2               	movwf	??_control_transfer
   915  00C1  0872               	movf	??_control_transfer,w
   916  00C2  07A4               	addwf	control_transfer@checksum,f
   917                           
   918                           ;main.c: 60: switch(cmd)
   919  00C3  2BDF               	goto	l2047
   920  00C4                     l1753:	
   921                           ;main.c: 61: {
   922                           ;main.c: 62: case 0x01:
   923                           
   924                           
   925                           ;main.c: 63: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
   926  00C4  01A5               	clrf	control_transfer@i
   927  00C5  01A6               	clrf	control_transfer@i+1
   928  00C6                     l51:	
   929  00C6  1A91               	btfsc	17,5	;volatile
   930  00C7  28D9               	goto	l1759
   931  00C8  3085               	movlw	133
   932  00C9  00F2               	movwf	??_control_transfer
   933  00CA                     u2827:	
   934  00CA  0BF2               	decfsz	??_control_transfer,f
   935  00CB  28CA               	goto	u2827
   936  00CC  3001               	movlw	1
   937  00CD  0020               	movlb	0	; select bank0
   938  00CE  07A5               	addwf	control_transfer@i,f
   939  00CF  3000               	movlw	0
   940  00D0  3DA6               	addwfc	control_transfer@i+1,f
   941  00D1  3003               	movlw	3
   942  00D2  0226               	subwf	control_transfer@i+1,w
   943  00D3  30E8               	movlw	232
   944  00D4  1903               	skipnz
   945  00D5  0225               	subwf	control_transfer@i,w
   946  00D6  1803               	btfsc	3,0
   947  00D7  0008               	return
   948  00D8  28C6               	goto	l51
   949  00D9                     l1759:	
   950  00D9  0023               	movlb	3	; select bank3
   951  00DA  0819               	movf	25,w	;volatile
   952  00DB  00F2               	movwf	??_control_transfer
   953  00DC  0872               	movf	??_control_transfer,w
   954  00DD  0020               	movlb	0	; select bank0
   955  00DE  00A8               	movwf	control_transfer@x
   956  00DF  01A5               	clrf	control_transfer@i
   957  00E0  01A6               	clrf	control_transfer@i+1
   958  00E1                     l55:	
   959  00E1  1A91               	btfsc	17,5	;volatile
   960  00E2  28F4               	goto	l1767
   961  00E3  3085               	movlw	133
   962  00E4  00F2               	movwf	??_control_transfer
   963  00E5                     u2837:	
   964  00E5  0BF2               	decfsz	??_control_transfer,f
   965  00E6  28E5               	goto	u2837
   966  00E7  3001               	movlw	1
   967  00E8  0020               	movlb	0	; select bank0
   968  00E9  07A5               	addwf	control_transfer@i,f
   969  00EA  3000               	movlw	0
   970  00EB  3DA6               	addwfc	control_transfer@i+1,f
   971  00EC  3003               	movlw	3
   972  00ED  0226               	subwf	control_transfer@i+1,w
   973  00EE  30E8               	movlw	232
   974  00EF  1903               	skipnz
   975  00F0  0225               	subwf	control_transfer@i,w
   976  00F1  1803               	btfsc	3,0
   977  00F2  0008               	return
   978  00F3  28E1               	goto	l55
   979  00F4                     l1767:	
   980  00F4  0023               	movlb	3	; select bank3
   981  00F5  0819               	movf	25,w	;volatile
   982  00F6  00F2               	movwf	??_control_transfer
   983  00F7  0872               	movf	??_control_transfer,w
   984  00F8  0020               	movlb	0	; select bank0
   985  00F9  00A7               	movwf	control_transfer@y
   986  00FA  0828               	movf	control_transfer@x,w
   987  00FB  39F0               	andlw	240
   988  00FC  1D03               	btfss	3,2
   989  00FD  0008               	return
   990  00FE  0827               	movf	control_transfer@y,w
   991  00FF  39F0               	andlw	240
   992  0100  1D03               	btfss	3,2
   993  0101  0008               	return
   994  0102  0827               	movf	control_transfer@y,w
   995  0103  00F2               	movwf	??_control_transfer
   996  0104  3003               	movlw	3
   997  0105                     u2175:	
   998  0105  35F2               	lslf	??_control_transfer,f
   999  0106  3EFF               	addlw	-1
  1000  0107  1D03               	skipz
  1001  0108  2905               	goto	u2175
  1002  0109  3572               	lslf	??_control_transfer,w
  1003  010A  0428               	iorwf	control_transfer@x,w
  1004  010B  00F3               	movwf	??_control_transfer+1
  1005  010C  0873               	movf	??_control_transfer+1,w
  1006  010D  00A8               	movwf	control_transfer@x
  1007  010E  0828               	movf	control_transfer@x,w
  1008  010F  00F2               	movwf	??_control_transfer
  1009  0110  0872               	movf	??_control_transfer,w
  1010  0111  07A4               	addwf	control_transfer@checksum,f
  1011  0112  0824               	movf	control_transfer@checksum,w
  1012  0113  1D03               	skipz
  1013  0114  0008               	return
  1014  0115  01A5               	clrf	control_transfer@i
  1015  0116  01A6               	clrf	control_transfer@i+1
  1016  0117                     l63:	
  1017  0117  1A91               	btfsc	17,5	;volatile
  1018  0118  292A               	goto	l1785
  1019  0119  3085               	movlw	133
  1020  011A  00F2               	movwf	??_control_transfer
  1021  011B                     u2847:	
  1022  011B  0BF2               	decfsz	??_control_transfer,f
  1023  011C  291B               	goto	u2847
  1024  011D  3001               	movlw	1
  1025  011E  0020               	movlb	0	; select bank0
  1026  011F  07A5               	addwf	control_transfer@i,f
  1027  0120  3000               	movlw	0
  1028  0121  3DA6               	addwfc	control_transfer@i+1,f
  1029  0122  3003               	movlw	3
  1030  0123  0226               	subwf	control_transfer@i+1,w
  1031  0124  30E8               	movlw	232
  1032  0125  1903               	skipnz
  1033  0126  0225               	subwf	control_transfer@i,w
  1034  0127  1803               	btfsc	3,0
  1035  0128  0008               	return
  1036  0129  2917               	goto	l63
  1037  012A                     l1785:	
  1038  012A  0023               	movlb	3	; select bank3
  1039  012B  0819               	movf	25,w	;volatile
  1040  012C  00F2               	movwf	??_control_transfer
  1041  012D  0872               	movf	??_control_transfer,w
  1042  012E  0020               	movlb	0	; select bank0
  1043  012F  00A8               	movwf	control_transfer@x
  1044  0130  0828               	movf	control_transfer@x,w
  1045  0131  3A11               	xorlw	17
  1046  0132  1D03               	btfss	3,2
  1047  0133  0008               	return
  1048                           
  1049                           ;main.c: 64: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1050  0134  3010               	movlw	16
  1051  0135  2535               	fcall	_Send_Byte
  1052  0136  0020               	movlb	0	; select bank0
  1053  0137  01A4               	clrf	control_transfer@checksum
  1054  0138  087C               	movf	_my_id,w
  1055  0139  390F               	andlw	15
  1056  013A  00F2               	movwf	??_control_transfer
  1057  013B  0872               	movf	??_control_transfer,w
  1058  013C  00A8               	movwf	control_transfer@x
  1059  013D  087C               	movf	_my_id,w
  1060  013E  00F2               	movwf	??_control_transfer
  1061  013F  3004               	movlw	4
  1062  0140                     u2225:	
  1063  0140  36F2               	lsrf	??_control_transfer,f
  1064  0141  0B89               	decfsz	9,f
  1065  0142  2940               	goto	u2225
  1066  0143  0872               	movf	??_control_transfer,w
  1067  0144  00F3               	movwf	??_control_transfer+1
  1068  0145  0873               	movf	??_control_transfer+1,w
  1069  0146  00A7               	movwf	control_transfer@y
  1070  0147  0828               	movf	control_transfer@x,w
  1071  0148  2535               	fcall	_Send_Byte
  1072  0149  0020               	movlb	0	; select bank0
  1073  014A  0827               	movf	control_transfer@y,w
  1074  014B  2535               	fcall	_Send_Byte
  1075  014C  087C               	movf	_my_id,w
  1076  014D  0020               	movlb	0	; select bank0
  1077  014E  02A4               	subwf	control_transfer@checksum,f
  1078                           
  1079                           ;main.c: 65: x = 0x02 & 0x0F; y = 0x02 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          2;
  1080  014F  3002               	movlw	2
  1081  0150  00F2               	movwf	??_control_transfer
  1082  0151  0872               	movf	??_control_transfer,w
  1083  0152  00A8               	movwf	control_transfer@x
  1084  0153  01A7               	clrf	control_transfer@y
  1085  0154  0828               	movf	control_transfer@x,w
  1086  0155  2535               	fcall	_Send_Byte
  1087  0156  0020               	movlb	0	; select bank0
  1088  0157  0827               	movf	control_transfer@y,w
  1089  0158  2535               	fcall	_Send_Byte
  1090  0159  3002               	movlw	2
  1091  015A  0020               	movlb	0	; select bank0
  1092  015B  02A4               	subwf	control_transfer@checksum,f
  1093                           
  1094                           ;main.c: 66: x = my_random_number & 0x0F; y = my_random_number >> 4; Send_Byte(x); Send_
      +                          Byte(y); checksum -= my_random_number;
  1095  015C  082F               	movf	_my_random_number,w
  1096  015D  390F               	andlw	15
  1097  015E  00F2               	movwf	??_control_transfer
  1098  015F  0872               	movf	??_control_transfer,w
  1099  0160  00A8               	movwf	control_transfer@x
  1100  0161  082F               	movf	_my_random_number,w
  1101  0162  00F2               	movwf	??_control_transfer
  1102  0163  3004               	movlw	4
  1103  0164                     u2235:	
  1104  0164  36F2               	lsrf	??_control_transfer,f
  1105  0165  0B89               	decfsz	9,f
  1106  0166  2964               	goto	u2235
  1107  0167  0872               	movf	??_control_transfer,w
  1108  0168  00F3               	movwf	??_control_transfer+1
  1109  0169  0873               	movf	??_control_transfer+1,w
  1110  016A  00A7               	movwf	control_transfer@y
  1111  016B  0828               	movf	control_transfer@x,w
  1112  016C  2535               	fcall	_Send_Byte
  1113  016D  0020               	movlb	0	; select bank0
  1114  016E  0827               	movf	control_transfer@y,w
  1115  016F  2535               	fcall	_Send_Byte
  1116  0170  0020               	movlb	0	; select bank0
  1117  0171  082F               	movf	_my_random_number,w
  1118  0172  02A4               	subwf	control_transfer@checksum,f
  1119                           
  1120                           ;main.c: 67: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1121  0173  0824               	movf	control_transfer@checksum,w
  1122  0174  390F               	andlw	15
  1123  0175  00F2               	movwf	??_control_transfer
  1124  0176  0872               	movf	??_control_transfer,w
  1125  0177  00A8               	movwf	control_transfer@x
  1126  0178  0824               	movf	control_transfer@checksum,w
  1127  0179  00F2               	movwf	??_control_transfer
  1128  017A  3004               	movlw	4
  1129  017B                     u2245:	
  1130  017B  36F2               	lsrf	??_control_transfer,f
  1131  017C  0B89               	decfsz	9,f
  1132  017D  297B               	goto	u2245
  1133  017E  0872               	movf	??_control_transfer,w
  1134  017F  00F3               	movwf	??_control_transfer+1
  1135  0180  0873               	movf	??_control_transfer+1,w
  1136  0181  00A7               	movwf	control_transfer@y
  1137  0182  0828               	movf	control_transfer@x,w
  1138  0183  2535               	fcall	_Send_Byte
  1139  0184  0020               	movlb	0	; select bank0
  1140  0185  0827               	movf	control_transfer@y,w
  1141  0186  2535               	fcall	_Send_Byte
  1142  0187  0020               	movlb	0	; select bank0
  1143  0188  0824               	movf	control_transfer@checksum,w
  1144  0189  02A4               	subwf	control_transfer@checksum,f
  1145  018A  3011               	movlw	17
  1146  018B  2535               	fcall	_Send_Byte
  1147                           
  1148                           ;main.c: 68: break;
  1149  018C  0008               	return
  1150  018D                     l1835:	
  1151                           ;main.c: 69: case 0x03:
  1152                           
  1153                           
  1154                           ;main.c: 70: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1155  018D  0020               	movlb	0	; select bank0
  1156  018E  01A5               	clrf	control_transfer@i
  1157  018F  01A6               	clrf	control_transfer@i+1
  1158  0190                     l70:	
  1159  0190  1A91               	btfsc	17,5	;volatile
  1160  0191  29A3               	goto	l1841
  1161  0192  3085               	movlw	133
  1162  0193  00F2               	movwf	??_control_transfer
  1163  0194                     u2857:	
  1164  0194  0BF2               	decfsz	??_control_transfer,f
  1165  0195  2994               	goto	u2857
  1166  0196  3001               	movlw	1
  1167  0197  0020               	movlb	0	; select bank0
  1168  0198  07A5               	addwf	control_transfer@i,f
  1169  0199  3000               	movlw	0
  1170  019A  3DA6               	addwfc	control_transfer@i+1,f
  1171  019B  3003               	movlw	3
  1172  019C  0226               	subwf	control_transfer@i+1,w
  1173  019D  30E8               	movlw	232
  1174  019E  1903               	skipnz
  1175  019F  0225               	subwf	control_transfer@i,w
  1176  01A0  1803               	btfsc	3,0
  1177  01A1  0008               	return
  1178  01A2  2990               	goto	l70
  1179  01A3                     l1841:	
  1180  01A3  0023               	movlb	3	; select bank3
  1181  01A4  0819               	movf	25,w	;volatile
  1182  01A5  00F2               	movwf	??_control_transfer
  1183  01A6  0872               	movf	??_control_transfer,w
  1184  01A7  0020               	movlb	0	; select bank0
  1185  01A8  00A8               	movwf	control_transfer@x
  1186  01A9  01A5               	clrf	control_transfer@i
  1187  01AA  01A6               	clrf	control_transfer@i+1
  1188  01AB                     l74:	
  1189  01AB  1A91               	btfsc	17,5	;volatile
  1190  01AC  29BE               	goto	l1849
  1191  01AD  3085               	movlw	133
  1192  01AE  00F2               	movwf	??_control_transfer
  1193  01AF                     u2867:	
  1194  01AF  0BF2               	decfsz	??_control_transfer,f
  1195  01B0  29AF               	goto	u2867
  1196  01B1  3001               	movlw	1
  1197  01B2  0020               	movlb	0	; select bank0
  1198  01B3  07A5               	addwf	control_transfer@i,f
  1199  01B4  3000               	movlw	0
  1200  01B5  3DA6               	addwfc	control_transfer@i+1,f
  1201  01B6  3003               	movlw	3
  1202  01B7  0226               	subwf	control_transfer@i+1,w
  1203  01B8  30E8               	movlw	232
  1204  01B9  1903               	skipnz
  1205  01BA  0225               	subwf	control_transfer@i,w
  1206  01BB  1803               	btfsc	3,0
  1207  01BC  0008               	return
  1208  01BD  29AB               	goto	l74
  1209  01BE                     l1849:	
  1210  01BE  0023               	movlb	3	; select bank3
  1211  01BF  0819               	movf	25,w	;volatile
  1212  01C0  00F2               	movwf	??_control_transfer
  1213  01C1  0872               	movf	??_control_transfer,w
  1214  01C2  0020               	movlb	0	; select bank0
  1215  01C3  00A7               	movwf	control_transfer@y
  1216  01C4  0828               	movf	control_transfer@x,w
  1217  01C5  39F0               	andlw	240
  1218  01C6  1D03               	btfss	3,2
  1219  01C7  0008               	return
  1220  01C8  0827               	movf	control_transfer@y,w
  1221  01C9  39F0               	andlw	240
  1222  01CA  1D03               	btfss	3,2
  1223  01CB  0008               	return
  1224  01CC  0827               	movf	control_transfer@y,w
  1225  01CD  00F2               	movwf	??_control_transfer
  1226  01CE  3003               	movlw	3
  1227  01CF                     u2315:	
  1228  01CF  35F2               	lslf	??_control_transfer,f
  1229  01D0  3EFF               	addlw	-1
  1230  01D1  1D03               	skipz
  1231  01D2  29CF               	goto	u2315
  1232  01D3  3572               	lslf	??_control_transfer,w
  1233  01D4  0428               	iorwf	control_transfer@x,w
  1234  01D5  00F3               	movwf	??_control_transfer+1
  1235  01D6  0873               	movf	??_control_transfer+1,w
  1236  01D7  00A2               	movwf	control_transfer@random_number
  1237  01D8  0822               	movf	control_transfer@random_number,w
  1238  01D9  00F2               	movwf	??_control_transfer
  1239  01DA  0872               	movf	??_control_transfer,w
  1240  01DB  07A4               	addwf	control_transfer@checksum,f
  1241                           
  1242                           ;main.c: 71: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1243  01DC  01A5               	clrf	control_transfer@i
  1244  01DD  01A6               	clrf	control_transfer@i+1
  1245  01DE                     l81:	
  1246  01DE  1A91               	btfsc	17,5	;volatile
  1247  01DF  29F1               	goto	l1863
  1248  01E0  3085               	movlw	133
  1249  01E1  00F2               	movwf	??_control_transfer
  1250  01E2                     u2877:	
  1251  01E2  0BF2               	decfsz	??_control_transfer,f
  1252  01E3  29E2               	goto	u2877
  1253  01E4  3001               	movlw	1
  1254  01E5  0020               	movlb	0	; select bank0
  1255  01E6  07A5               	addwf	control_transfer@i,f
  1256  01E7  3000               	movlw	0
  1257  01E8  3DA6               	addwfc	control_transfer@i+1,f
  1258  01E9  3003               	movlw	3
  1259  01EA  0226               	subwf	control_transfer@i+1,w
  1260  01EB  30E8               	movlw	232
  1261  01EC  1903               	skipnz
  1262  01ED  0225               	subwf	control_transfer@i,w
  1263  01EE  1803               	btfsc	3,0
  1264  01EF  0008               	return
  1265  01F0  29DE               	goto	l81
  1266  01F1                     l1863:	
  1267  01F1  0023               	movlb	3	; select bank3
  1268  01F2  0819               	movf	25,w	;volatile
  1269  01F3  00F2               	movwf	??_control_transfer
  1270  01F4  0872               	movf	??_control_transfer,w
  1271  01F5  0020               	movlb	0	; select bank0
  1272  01F6  00A8               	movwf	control_transfer@x
  1273  01F7  01A5               	clrf	control_transfer@i
  1274  01F8  01A6               	clrf	control_transfer@i+1
  1275  01F9                     l85:	
  1276  01F9  1A91               	btfsc	17,5	;volatile
  1277  01FA  2A0C               	goto	l1871
  1278  01FB  3085               	movlw	133
  1279  01FC  00F2               	movwf	??_control_transfer
  1280  01FD                     u2887:	
  1281  01FD  0BF2               	decfsz	??_control_transfer,f
  1282  01FE  29FD               	goto	u2887
  1283  01FF  3001               	movlw	1
  1284  0200  0020               	movlb	0	; select bank0
  1285  0201  07A5               	addwf	control_transfer@i,f
  1286  0202  3000               	movlw	0
  1287  0203  3DA6               	addwfc	control_transfer@i+1,f
  1288  0204  3003               	movlw	3
  1289  0205  0226               	subwf	control_transfer@i+1,w
  1290  0206  30E8               	movlw	232
  1291  0207  1903               	skipnz
  1292  0208  0225               	subwf	control_transfer@i,w
  1293  0209  1803               	btfsc	3,0
  1294  020A  0008               	return
  1295  020B  29F9               	goto	l85
  1296  020C                     l1871:	
  1297  020C  0023               	movlb	3	; select bank3
  1298  020D  0819               	movf	25,w	;volatile
  1299  020E  00F2               	movwf	??_control_transfer
  1300  020F  0872               	movf	??_control_transfer,w
  1301  0210  0020               	movlb	0	; select bank0
  1302  0211  00A7               	movwf	control_transfer@y
  1303  0212  0828               	movf	control_transfer@x,w
  1304  0213  39F0               	andlw	240
  1305  0214  1D03               	btfss	3,2
  1306  0215  0008               	return
  1307  0216  0827               	movf	control_transfer@y,w
  1308  0217  39F0               	andlw	240
  1309  0218  1D03               	btfss	3,2
  1310  0219  0008               	return
  1311  021A  0827               	movf	control_transfer@y,w
  1312  021B  00F2               	movwf	??_control_transfer
  1313  021C  3003               	movlw	3
  1314  021D                     u2385:	
  1315  021D  35F2               	lslf	??_control_transfer,f
  1316  021E  3EFF               	addlw	-1
  1317  021F  1D03               	skipz
  1318  0220  2A1D               	goto	u2385
  1319  0221  3572               	lslf	??_control_transfer,w
  1320  0222  0428               	iorwf	control_transfer@x,w
  1321  0223  00F3               	movwf	??_control_transfer+1
  1322  0224  0873               	movf	??_control_transfer+1,w
  1323  0225  00A3               	movwf	control_transfer@id
  1324  0226  0823               	movf	control_transfer@id,w
  1325  0227  00F2               	movwf	??_control_transfer
  1326  0228  0872               	movf	??_control_transfer,w
  1327  0229  07A4               	addwf	control_transfer@checksum,f
  1328                           
  1329                           ;main.c: 72: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1330  022A  01A5               	clrf	control_transfer@i
  1331  022B  01A6               	clrf	control_transfer@i+1
  1332  022C                     l92:	
  1333  022C  1A91               	btfsc	17,5	;volatile
  1334  022D  2A3F               	goto	l1885
  1335  022E  3085               	movlw	133
  1336  022F  00F2               	movwf	??_control_transfer
  1337  0230                     u2897:	
  1338  0230  0BF2               	decfsz	??_control_transfer,f
  1339  0231  2A30               	goto	u2897
  1340  0232  3001               	movlw	1
  1341  0233  0020               	movlb	0	; select bank0
  1342  0234  07A5               	addwf	control_transfer@i,f
  1343  0235  3000               	movlw	0
  1344  0236  3DA6               	addwfc	control_transfer@i+1,f
  1345  0237  3003               	movlw	3
  1346  0238  0226               	subwf	control_transfer@i+1,w
  1347  0239  30E8               	movlw	232
  1348  023A  1903               	skipnz
  1349  023B  0225               	subwf	control_transfer@i,w
  1350  023C  1803               	btfsc	3,0
  1351  023D  0008               	return
  1352  023E  2A2C               	goto	l92
  1353  023F                     l1885:	
  1354  023F  0023               	movlb	3	; select bank3
  1355  0240  0819               	movf	25,w	;volatile
  1356  0241  00F2               	movwf	??_control_transfer
  1357  0242  0872               	movf	??_control_transfer,w
  1358  0243  0020               	movlb	0	; select bank0
  1359  0244  00A8               	movwf	control_transfer@x
  1360  0245  01A5               	clrf	control_transfer@i
  1361  0246  01A6               	clrf	control_transfer@i+1
  1362  0247                     l96:	
  1363  0247  1A91               	btfsc	17,5	;volatile
  1364  0248  2A5A               	goto	l1893
  1365  0249  3085               	movlw	133
  1366  024A  00F2               	movwf	??_control_transfer
  1367  024B                     u2907:	
  1368  024B  0BF2               	decfsz	??_control_transfer,f
  1369  024C  2A4B               	goto	u2907
  1370  024D  3001               	movlw	1
  1371  024E  0020               	movlb	0	; select bank0
  1372  024F  07A5               	addwf	control_transfer@i,f
  1373  0250  3000               	movlw	0
  1374  0251  3DA6               	addwfc	control_transfer@i+1,f
  1375  0252  3003               	movlw	3
  1376  0253  0226               	subwf	control_transfer@i+1,w
  1377  0254  30E8               	movlw	232
  1378  0255  1903               	skipnz
  1379  0256  0225               	subwf	control_transfer@i,w
  1380  0257  1803               	btfsc	3,0
  1381  0258  0008               	return
  1382  0259  2A47               	goto	l96
  1383  025A                     l1893:	
  1384  025A  0023               	movlb	3	; select bank3
  1385  025B  0819               	movf	25,w	;volatile
  1386  025C  00F2               	movwf	??_control_transfer
  1387  025D  0872               	movf	??_control_transfer,w
  1388  025E  0020               	movlb	0	; select bank0
  1389  025F  00A7               	movwf	control_transfer@y
  1390  0260  0828               	movf	control_transfer@x,w
  1391  0261  39F0               	andlw	240
  1392  0262  1D03               	btfss	3,2
  1393  0263  0008               	return
  1394  0264  0827               	movf	control_transfer@y,w
  1395  0265  39F0               	andlw	240
  1396  0266  1D03               	btfss	3,2
  1397  0267  0008               	return
  1398  0268  0827               	movf	control_transfer@y,w
  1399  0269  00F2               	movwf	??_control_transfer
  1400  026A  3003               	movlw	3
  1401  026B                     u2455:	
  1402  026B  35F2               	lslf	??_control_transfer,f
  1403  026C  3EFF               	addlw	-1
  1404  026D  1D03               	skipz
  1405  026E  2A6B               	goto	u2455
  1406  026F  3572               	lslf	??_control_transfer,w
  1407  0270  0428               	iorwf	control_transfer@x,w
  1408  0271  00F3               	movwf	??_control_transfer+1
  1409  0272  0873               	movf	??_control_transfer+1,w
  1410  0273  00A8               	movwf	control_transfer@x
  1411  0274  0828               	movf	control_transfer@x,w
  1412  0275  00F2               	movwf	??_control_transfer
  1413  0276  0872               	movf	??_control_transfer,w
  1414  0277  07A4               	addwf	control_transfer@checksum,f
  1415  0278  0824               	movf	control_transfer@checksum,w
  1416  0279  1D03               	skipz
  1417  027A  0008               	return
  1418  027B  01A5               	clrf	control_transfer@i
  1419  027C  01A6               	clrf	control_transfer@i+1
  1420  027D                     l104:	
  1421  027D  1A91               	btfsc	17,5	;volatile
  1422  027E  2A90               	goto	l1911
  1423  027F  3085               	movlw	133
  1424  0280  00F2               	movwf	??_control_transfer
  1425  0281                     u2917:	
  1426  0281  0BF2               	decfsz	??_control_transfer,f
  1427  0282  2A81               	goto	u2917
  1428  0283  3001               	movlw	1
  1429  0284  0020               	movlb	0	; select bank0
  1430  0285  07A5               	addwf	control_transfer@i,f
  1431  0286  3000               	movlw	0
  1432  0287  3DA6               	addwfc	control_transfer@i+1,f
  1433  0288  3003               	movlw	3
  1434  0289  0226               	subwf	control_transfer@i+1,w
  1435  028A  30E8               	movlw	232
  1436  028B  1903               	skipnz
  1437  028C  0225               	subwf	control_transfer@i,w
  1438  028D  1803               	btfsc	3,0
  1439  028E  0008               	return
  1440  028F  2A7D               	goto	l104
  1441  0290                     l1911:	
  1442  0290  0023               	movlb	3	; select bank3
  1443  0291  0819               	movf	25,w	;volatile
  1444  0292  00F2               	movwf	??_control_transfer
  1445  0293  0872               	movf	??_control_transfer,w
  1446  0294  0020               	movlb	0	; select bank0
  1447  0295  00A8               	movwf	control_transfer@x
  1448  0296  0828               	movf	control_transfer@x,w
  1449  0297  3A11               	xorlw	17
  1450  0298  1D03               	btfss	3,2
  1451  0299  0008               	return
  1452                           
  1453                           ;main.c: 73: if(random_number != my_random_number) goto err;
  1454  029A  0822               	movf	control_transfer@random_number,w
  1455  029B  062F               	xorwf	_my_random_number,w
  1456  029C  1D03               	btfss	3,2
  1457  029D  0008               	return
  1458                           
  1459                           ;main.c: 74: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1460  029E  3010               	movlw	16
  1461  029F  2535               	fcall	_Send_Byte
  1462  02A0  0020               	movlb	0	; select bank0
  1463  02A1  01A4               	clrf	control_transfer@checksum
  1464  02A2  087C               	movf	_my_id,w
  1465  02A3  390F               	andlw	15
  1466  02A4  00F2               	movwf	??_control_transfer
  1467  02A5  0872               	movf	??_control_transfer,w
  1468  02A6  00A8               	movwf	control_transfer@x
  1469  02A7  087C               	movf	_my_id,w
  1470  02A8  00F2               	movwf	??_control_transfer
  1471  02A9  3004               	movlw	4
  1472  02AA                     u2515:	
  1473  02AA  36F2               	lsrf	??_control_transfer,f
  1474  02AB  0B89               	decfsz	9,f
  1475  02AC  2AAA               	goto	u2515
  1476  02AD  0872               	movf	??_control_transfer,w
  1477  02AE  00F3               	movwf	??_control_transfer+1
  1478  02AF  0873               	movf	??_control_transfer+1,w
  1479  02B0  00A7               	movwf	control_transfer@y
  1480  02B1  0828               	movf	control_transfer@x,w
  1481  02B2  2535               	fcall	_Send_Byte
  1482  02B3  0020               	movlb	0	; select bank0
  1483  02B4  0827               	movf	control_transfer@y,w
  1484  02B5  2535               	fcall	_Send_Byte
  1485  02B6  087C               	movf	_my_id,w
  1486  02B7  0020               	movlb	0	; select bank0
  1487  02B8  02A4               	subwf	control_transfer@checksum,f
  1488                           
  1489                           ;main.c: 75: x = 0x00 & 0x0F; y = 0x00 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          0;
  1490  02B9  01A8               	clrf	control_transfer@x
  1491  02BA  01A7               	clrf	control_transfer@y
  1492  02BB  0828               	movf	control_transfer@x,w
  1493  02BC  2535               	fcall	_Send_Byte
  1494  02BD  0020               	movlb	0	; select bank0
  1495  02BE  0827               	movf	control_transfer@y,w
  1496  02BF  2535               	fcall	_Send_Byte
  1497                           
  1498                           ;main.c: 76: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1499  02C0  0020               	movlb	0	; select bank0
  1500  02C1  0824               	movf	control_transfer@checksum,w
  1501  02C2  390F               	andlw	15
  1502  02C3  00F2               	movwf	??_control_transfer
  1503  02C4  0872               	movf	??_control_transfer,w
  1504  02C5  00A8               	movwf	control_transfer@x
  1505  02C6  0824               	movf	control_transfer@checksum,w
  1506  02C7  00F2               	movwf	??_control_transfer
  1507  02C8  3004               	movlw	4
  1508  02C9                     u2525:	
  1509  02C9  36F2               	lsrf	??_control_transfer,f
  1510  02CA  0B89               	decfsz	9,f
  1511  02CB  2AC9               	goto	u2525
  1512  02CC  0872               	movf	??_control_transfer,w
  1513  02CD  00F3               	movwf	??_control_transfer+1
  1514  02CE  0873               	movf	??_control_transfer+1,w
  1515  02CF  00A7               	movwf	control_transfer@y
  1516  02D0  0828               	movf	control_transfer@x,w
  1517  02D1  2535               	fcall	_Send_Byte
  1518  02D2  0020               	movlb	0	; select bank0
  1519  02D3  0827               	movf	control_transfer@y,w
  1520  02D4  2535               	fcall	_Send_Byte
  1521  02D5  0020               	movlb	0	; select bank0
  1522  02D6  0824               	movf	control_transfer@checksum,w
  1523  02D7  02A4               	subwf	control_transfer@checksum,f
  1524  02D8  3011               	movlw	17
  1525  02D9  2535               	fcall	_Send_Byte
  1526                           
  1527                           ;main.c: 77: my_id=id;
  1528  02DA  0020               	movlb	0	; select bank0
  1529  02DB  0823               	movf	control_transfer@id,w
  1530  02DC  00F2               	movwf	??_control_transfer
  1531  02DD  0872               	movf	??_control_transfer,w
  1532  02DE  00FC               	movwf	_my_id
  1533                           
  1534                           ;main.c: 78: break;
  1535  02DF  0008               	return
  1536  02E0                     l1955:	
  1537                           ;main.c: 79: case 0x08:
  1538                           
  1539                           
  1540                           ;main.c: 80: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1541  02E0  01A5               	clrf	control_transfer@i
  1542  02E1  01A6               	clrf	control_transfer@i+1
  1543  02E2                     l111:	
  1544  02E2  1A91               	btfsc	17,5	;volatile
  1545  02E3  2AF5               	goto	l1961
  1546  02E4  3085               	movlw	133
  1547  02E5  00F2               	movwf	??_control_transfer
  1548  02E6                     u2927:	
  1549  02E6  0BF2               	decfsz	??_control_transfer,f
  1550  02E7  2AE6               	goto	u2927
  1551  02E8  3001               	movlw	1
  1552  02E9  0020               	movlb	0	; select bank0
  1553  02EA  07A5               	addwf	control_transfer@i,f
  1554  02EB  3000               	movlw	0
  1555  02EC  3DA6               	addwfc	control_transfer@i+1,f
  1556  02ED  3003               	movlw	3
  1557  02EE  0226               	subwf	control_transfer@i+1,w
  1558  02EF  30E8               	movlw	232
  1559  02F0  1903               	skipnz
  1560  02F1  0225               	subwf	control_transfer@i,w
  1561  02F2  1803               	btfsc	3,0
  1562  02F3  0008               	return
  1563  02F4  2AE2               	goto	l111
  1564  02F5                     l1961:	
  1565  02F5  0023               	movlb	3	; select bank3
  1566  02F6  0819               	movf	25,w	;volatile
  1567  02F7  00F2               	movwf	??_control_transfer
  1568  02F8  0872               	movf	??_control_transfer,w
  1569  02F9  0020               	movlb	0	; select bank0
  1570  02FA  00A8               	movwf	control_transfer@x
  1571  02FB  01A5               	clrf	control_transfer@i
  1572  02FC  01A6               	clrf	control_transfer@i+1
  1573  02FD                     l115:	
  1574  02FD  1A91               	btfsc	17,5	;volatile
  1575  02FE  2B10               	goto	l1969
  1576  02FF  3085               	movlw	133
  1577  0300  00F2               	movwf	??_control_transfer
  1578  0301                     u2937:	
  1579  0301  0BF2               	decfsz	??_control_transfer,f
  1580  0302  2B01               	goto	u2937
  1581  0303  3001               	movlw	1
  1582  0304  0020               	movlb	0	; select bank0
  1583  0305  07A5               	addwf	control_transfer@i,f
  1584  0306  3000               	movlw	0
  1585  0307  3DA6               	addwfc	control_transfer@i+1,f
  1586  0308  3003               	movlw	3
  1587  0309  0226               	subwf	control_transfer@i+1,w
  1588  030A  30E8               	movlw	232
  1589  030B  1903               	skipnz
  1590  030C  0225               	subwf	control_transfer@i,w
  1591  030D  1803               	btfsc	3,0
  1592  030E  0008               	return
  1593  030F  2AFD               	goto	l115
  1594  0310                     l1969:	
  1595  0310  0023               	movlb	3	; select bank3
  1596  0311  0819               	movf	25,w	;volatile
  1597  0312  00F2               	movwf	??_control_transfer
  1598  0313  0872               	movf	??_control_transfer,w
  1599  0314  0020               	movlb	0	; select bank0
  1600  0315  00A7               	movwf	control_transfer@y
  1601  0316  0828               	movf	control_transfer@x,w
  1602  0317  39F0               	andlw	240
  1603  0318  1D03               	btfss	3,2
  1604  0319  0008               	return
  1605  031A  0827               	movf	control_transfer@y,w
  1606  031B  39F0               	andlw	240
  1607  031C  1D03               	btfss	3,2
  1608  031D  0008               	return
  1609  031E  0827               	movf	control_transfer@y,w
  1610  031F  00F2               	movwf	??_control_transfer
  1611  0320  3003               	movlw	3
  1612  0321                     u2595:	
  1613  0321  35F2               	lslf	??_control_transfer,f
  1614  0322  3EFF               	addlw	-1
  1615  0323  1D03               	skipz
  1616  0324  2B21               	goto	u2595
  1617  0325  3572               	lslf	??_control_transfer,w
  1618  0326  0428               	iorwf	control_transfer@x,w
  1619  0327  00F3               	movwf	??_control_transfer+1
  1620  0328  0873               	movf	??_control_transfer+1,w
  1621  0329  00A1               	movwf	control_transfer@power_level
  1622  032A  0821               	movf	control_transfer@power_level,w
  1623  032B  00F2               	movwf	??_control_transfer
  1624  032C  0872               	movf	??_control_transfer,w
  1625  032D  07A4               	addwf	control_transfer@checksum,f
  1626                           
  1627                           ;main.c: 81: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1628  032E  01A5               	clrf	control_transfer@i
  1629  032F  01A6               	clrf	control_transfer@i+1
  1630  0330                     l122:	
  1631  0330  1A91               	btfsc	17,5	;volatile
  1632  0331  2B43               	goto	l1983
  1633  0332  3085               	movlw	133
  1634  0333  00F2               	movwf	??_control_transfer
  1635  0334                     u2947:	
  1636  0334  0BF2               	decfsz	??_control_transfer,f
  1637  0335  2B34               	goto	u2947
  1638  0336  3001               	movlw	1
  1639  0337  0020               	movlb	0	; select bank0
  1640  0338  07A5               	addwf	control_transfer@i,f
  1641  0339  3000               	movlw	0
  1642  033A  3DA6               	addwfc	control_transfer@i+1,f
  1643  033B  3003               	movlw	3
  1644  033C  0226               	subwf	control_transfer@i+1,w
  1645  033D  30E8               	movlw	232
  1646  033E  1903               	skipnz
  1647  033F  0225               	subwf	control_transfer@i,w
  1648  0340  1803               	btfsc	3,0
  1649  0341  0008               	return
  1650  0342  2B30               	goto	l122
  1651  0343                     l1983:	
  1652  0343  0023               	movlb	3	; select bank3
  1653  0344  0819               	movf	25,w	;volatile
  1654  0345  00F2               	movwf	??_control_transfer
  1655  0346  0872               	movf	??_control_transfer,w
  1656  0347  0020               	movlb	0	; select bank0
  1657  0348  00A8               	movwf	control_transfer@x
  1658  0349  01A5               	clrf	control_transfer@i
  1659  034A  01A6               	clrf	control_transfer@i+1
  1660  034B                     l126:	
  1661  034B  1A91               	btfsc	17,5	;volatile
  1662  034C  2B5E               	goto	l1991
  1663  034D  3085               	movlw	133
  1664  034E  00F2               	movwf	??_control_transfer
  1665  034F                     u2957:	
  1666  034F  0BF2               	decfsz	??_control_transfer,f
  1667  0350  2B4F               	goto	u2957
  1668  0351  3001               	movlw	1
  1669  0352  0020               	movlb	0	; select bank0
  1670  0353  07A5               	addwf	control_transfer@i,f
  1671  0354  3000               	movlw	0
  1672  0355  3DA6               	addwfc	control_transfer@i+1,f
  1673  0356  3003               	movlw	3
  1674  0357  0226               	subwf	control_transfer@i+1,w
  1675  0358  30E8               	movlw	232
  1676  0359  1903               	skipnz
  1677  035A  0225               	subwf	control_transfer@i,w
  1678  035B  1803               	btfsc	3,0
  1679  035C  0008               	return
  1680  035D  2B4B               	goto	l126
  1681  035E                     l1991:	
  1682  035E  0023               	movlb	3	; select bank3
  1683  035F  0819               	movf	25,w	;volatile
  1684  0360  00F2               	movwf	??_control_transfer
  1685  0361  0872               	movf	??_control_transfer,w
  1686  0362  0020               	movlb	0	; select bank0
  1687  0363  00A7               	movwf	control_transfer@y
  1688  0364  0828               	movf	control_transfer@x,w
  1689  0365  39F0               	andlw	240
  1690  0366  1D03               	btfss	3,2
  1691  0367  0008               	return
  1692  0368  0827               	movf	control_transfer@y,w
  1693  0369  39F0               	andlw	240
  1694  036A  1D03               	btfss	3,2
  1695  036B  0008               	return
  1696  036C  0827               	movf	control_transfer@y,w
  1697  036D  00F2               	movwf	??_control_transfer
  1698  036E  3003               	movlw	3
  1699  036F                     u2665:	
  1700  036F  35F2               	lslf	??_control_transfer,f
  1701  0370  3EFF               	addlw	-1
  1702  0371  1D03               	skipz
  1703  0372  2B6F               	goto	u2665
  1704  0373  3572               	lslf	??_control_transfer,w
  1705  0374  0428               	iorwf	control_transfer@x,w
  1706  0375  00F3               	movwf	??_control_transfer+1
  1707  0376  0873               	movf	??_control_transfer+1,w
  1708  0377  00A8               	movwf	control_transfer@x
  1709  0378  0828               	movf	control_transfer@x,w
  1710  0379  00F2               	movwf	??_control_transfer
  1711  037A  0872               	movf	??_control_transfer,w
  1712  037B  07A4               	addwf	control_transfer@checksum,f
  1713  037C  0824               	movf	control_transfer@checksum,w
  1714  037D  1D03               	skipz
  1715  037E  0008               	return
  1716  037F  01A5               	clrf	control_transfer@i
  1717  0380  01A6               	clrf	control_transfer@i+1
  1718  0381                     l134:	
  1719  0381  1A91               	btfsc	17,5	;volatile
  1720  0382  2B94               	goto	l2009
  1721  0383  3085               	movlw	133
  1722  0384  00F2               	movwf	??_control_transfer
  1723  0385                     u2967:	
  1724  0385  0BF2               	decfsz	??_control_transfer,f
  1725  0386  2B85               	goto	u2967
  1726  0387  3001               	movlw	1
  1727  0388  0020               	movlb	0	; select bank0
  1728  0389  07A5               	addwf	control_transfer@i,f
  1729  038A  3000               	movlw	0
  1730  038B  3DA6               	addwfc	control_transfer@i+1,f
  1731  038C  3003               	movlw	3
  1732  038D  0226               	subwf	control_transfer@i+1,w
  1733  038E  30E8               	movlw	232
  1734  038F  1903               	skipnz
  1735  0390  0225               	subwf	control_transfer@i,w
  1736  0391  1803               	btfsc	3,0
  1737  0392  0008               	return
  1738  0393  2B81               	goto	l134
  1739  0394                     l2009:	
  1740  0394  0023               	movlb	3	; select bank3
  1741  0395  0819               	movf	25,w	;volatile
  1742  0396  00F2               	movwf	??_control_transfer
  1743  0397  0872               	movf	??_control_transfer,w
  1744  0398  0020               	movlb	0	; select bank0
  1745  0399  00A8               	movwf	control_transfer@x
  1746  039A  0828               	movf	control_transfer@x,w
  1747  039B  3A11               	xorlw	17
  1748  039C  1D03               	btfss	3,2
  1749  039D  0008               	return
  1750                           
  1751                           ;main.c: 82: my_power_level = power_level;
  1752  039E  0821               	movf	control_transfer@power_level,w
  1753  039F  00F2               	movwf	??_control_transfer
  1754  03A0  0872               	movf	??_control_transfer,w
  1755  03A1  00AE               	movwf	_my_power_level
  1756                           
  1757                           ;main.c: 83: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1758  03A2  3010               	movlw	16
  1759  03A3  2535               	fcall	_Send_Byte
  1760  03A4  0020               	movlb	0	; select bank0
  1761  03A5  01A4               	clrf	control_transfer@checksum
  1762  03A6  087C               	movf	_my_id,w
  1763  03A7  390F               	andlw	15
  1764  03A8  00F2               	movwf	??_control_transfer
  1765  03A9  0872               	movf	??_control_transfer,w
  1766  03AA  00A8               	movwf	control_transfer@x
  1767  03AB  087C               	movf	_my_id,w
  1768  03AC  00F2               	movwf	??_control_transfer
  1769  03AD  3004               	movlw	4
  1770  03AE                     u2715:	
  1771  03AE  36F2               	lsrf	??_control_transfer,f
  1772  03AF  0B89               	decfsz	9,f
  1773  03B0  2BAE               	goto	u2715
  1774  03B1  0872               	movf	??_control_transfer,w
  1775  03B2  00F3               	movwf	??_control_transfer+1
  1776  03B3  0873               	movf	??_control_transfer+1,w
  1777  03B4  00A7               	movwf	control_transfer@y
  1778  03B5  0828               	movf	control_transfer@x,w
  1779  03B6  2535               	fcall	_Send_Byte
  1780  03B7  0020               	movlb	0	; select bank0
  1781  03B8  0827               	movf	control_transfer@y,w
  1782  03B9  2535               	fcall	_Send_Byte
  1783  03BA  087C               	movf	_my_id,w
  1784  03BB  0020               	movlb	0	; select bank0
  1785  03BC  02A4               	subwf	control_transfer@checksum,f
  1786                           
  1787                           ;main.c: 84: x = 0x00 & 0x0F; y = 0x00 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          0;
  1788  03BD  01A8               	clrf	control_transfer@x
  1789  03BE  01A7               	clrf	control_transfer@y
  1790  03BF  0828               	movf	control_transfer@x,w
  1791  03C0  2535               	fcall	_Send_Byte
  1792  03C1  0020               	movlb	0	; select bank0
  1793  03C2  0827               	movf	control_transfer@y,w
  1794  03C3  2535               	fcall	_Send_Byte
  1795                           
  1796                           ;main.c: 85: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1797  03C4  0020               	movlb	0	; select bank0
  1798  03C5  0824               	movf	control_transfer@checksum,w
  1799  03C6  390F               	andlw	15
  1800  03C7  00F2               	movwf	??_control_transfer
  1801  03C8  0872               	movf	??_control_transfer,w
  1802  03C9  00A8               	movwf	control_transfer@x
  1803  03CA  0824               	movf	control_transfer@checksum,w
  1804  03CB  00F2               	movwf	??_control_transfer
  1805  03CC  3004               	movlw	4
  1806  03CD                     u2725:	
  1807  03CD  36F2               	lsrf	??_control_transfer,f
  1808  03CE  0B89               	decfsz	9,f
  1809  03CF  2BCD               	goto	u2725
  1810  03D0  0872               	movf	??_control_transfer,w
  1811  03D1  00F3               	movwf	??_control_transfer+1
  1812  03D2  0873               	movf	??_control_transfer+1,w
  1813  03D3  00A7               	movwf	control_transfer@y
  1814  03D4  0828               	movf	control_transfer@x,w
  1815  03D5  2535               	fcall	_Send_Byte
  1816  03D6  0020               	movlb	0	; select bank0
  1817  03D7  0827               	movf	control_transfer@y,w
  1818  03D8  2535               	fcall	_Send_Byte
  1819  03D9  0020               	movlb	0	; select bank0
  1820  03DA  0824               	movf	control_transfer@checksum,w
  1821  03DB  02A4               	subwf	control_transfer@checksum,f
  1822  03DC  3011               	movlw	17
  1823  03DD  2535               	fcall	_Send_Byte
  1824                           
  1825                           ;main.c: 90: }
  1826                           
  1827                           ;main.c: 89: goto err;
  1828                           
  1829                           ;main.c: 88: default:
  1830                           
  1831                           ;main.c: 86: break;
  1832  03DE  0008               	return
  1833  03DF                     l2047:	
  1834  03DF  0020               	movlb	0	; select bank0
  1835  03E0  0820               	movf	control_transfer@cmd,w
  1836                           
  1837                           ; Switch size 1, requested type "space"
  1838                           ; Number of cases is 3, Range of values is 1 to 8
  1839                           ; switch strategies available:
  1840                           ; Name         Instructions Cycles
  1841                           ; simple_byte           10     6 (average)
  1842                           ; direct_byte           25     9 (fixed)
  1843                           ; jumptable            263     9 (fixed)
  1844                           ;	Chosen strategy is simple_byte
  1845  03E1  3A01               	xorlw	1	; case 1
  1846  03E2  1903               	skipnz
  1847  03E3  28C4               	goto	l1753
  1848  03E4  3A02               	xorlw	2	; case 3
  1849  03E5  1903               	skipnz
  1850  03E6  298D               	goto	l1835
  1851  03E7  3A0B               	xorlw	11	; case 8
  1852  03E8  1903               	skipnz
  1853  03E9  2AE0               	goto	l1955
  1854  03EA  2BEC               	goto	l140
  1855  03EB  0008               	return
  1856  03EC                     l140:	
  1857                           ;main.c: 92: return;
  1858                           
  1859                           ;main.c: 91: err:
  1860                           
  1861  03EC  0008               	return
  1862  03ED                     __end_of_control_transfer:	
  1863                           
  1864                           	psect	text2
  1865  050C                     __ptext2:	
  1866 ;; *************** function _Setup *****************
  1867 ;; Defined at:
  1868 ;;		line 24 in file "user.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1882 ;;      Params:         0       0       0       0
  1883 ;;      Locals:         0       0       0       0
  1884 ;;      Temps:          1       0       0       0
  1885 ;;      Totals:         1       0       0       0
  1886 ;;Total ram usage:        1 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _Setup
  1898  050C                     _Setup:	
  1899                           
  1900                           ;user.c: 26: OSCCON = 0b01111010;
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _Setup: [wreg+status,2+status,0]
  1904  050C  307A               	movlw	122
  1905  050D  0021               	movlb	1	; select bank1
  1906  050E  0099               	movwf	25	;volatile
  1907                           
  1908                           ;user.c: 28: ANSELA = 0x00;
  1909  050F  0023               	movlb	3	; select bank3
  1910  0510  018C               	clrf	12	;volatile
  1911                           
  1912                           ;user.c: 29: TRISAbits.TRISA5 = 0;
  1913  0511  0021               	movlb	1	; select bank1
  1914  0512  128C               	bcf	12,5	;volatile
  1915                           
  1916                           ;user.c: 30: TRISAbits.TRISA2 = 0;
  1917  0513  110C               	bcf	12,2	;volatile
  1918                           
  1919                           ;user.c: 31: TRISAbits.TRISA0 = 0;
  1920  0514  100C               	bcf	12,0	;volatile
  1921                           
  1922                           ;user.c: 32: PORTAbits.RA5 = 1;
  1923  0515  0020               	movlb	0	; select bank0
  1924  0516  168C               	bsf	12,5	;volatile
  1925                           
  1926                           ;user.c: 36: ADCON1 |= 0b00110000;
  1927  0517  3030               	movlw	48
  1928  0518  00F1               	movwf	??_Setup
  1929  0519  0871               	movf	??_Setup,w
  1930  051A  0021               	movlb	1	; select bank1
  1931  051B  049E               	iorwf	30,f	;volatile
  1932                           
  1933                           ;user.c: 39: SPBRGL = 103;
  1934  051C  3067               	movlw	103
  1935  051D  0023               	movlb	3	; select bank3
  1936  051E  009B               	movwf	27	;volatile
  1937                           
  1938                           ;user.c: 40: TXSTAbits.SYNC = 0;
  1939  051F  121E               	bcf	30,4	;volatile
  1940                           
  1941                           ;user.c: 41: RCSTAbits.SPEN = 1;
  1942  0520  179D               	bsf	29,7	;volatile
  1943                           
  1944                           ;user.c: 42: BAUDCONbits.SCKP = 1;
  1945  0521  161F               	bsf	31,4	;volatile
  1946                           
  1947                           ;user.c: 43: TXSTAbits.TXEN = 1;
  1948  0522  169E               	bsf	30,5	;volatile
  1949                           
  1950                           ;user.c: 46: RCSTAbits.CREN = 1;
  1951  0523  161D               	bsf	29,4	;volatile
  1952  0524  0008               	return
  1953  0525                     __end_of_Setup:	
  1954                           
  1955                           	psect	text3
  1956  04B7                     __ptext3:	
  1957 ;; *************** function _Get_hit *****************
  1958 ;; Defined at:
  1959 ;;		line 155 in file "user.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  ID              1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  ID              1    0[COMMON] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;		None               void
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1973 ;;      Params:         0       0       0       0
  1974 ;;      Locals:         0       0       0       0
  1975 ;;      Temps:          0       0       0       0
  1976 ;;      Totals:         0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    3
  1980 ;; This function calls:
  1981 ;;		_Buzz
  1982 ;;		_LED_off
  1983 ;;		_LED_on
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _Get_hit
  1991  04B7                     _Get_hit:	
  1992                           
  1993                           ;user.c: 156: LED_on();
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in _Get_hit: [wreg+status,2+status,0+pclath+cstack]
  1997  04B7  2557               	fcall	_LED_on
  1998                           
  1999                           ;user.c: 157: Buzz(4000,100);
  2000  04B8  30A0               	movlw	160
  2001  04B9  0020               	movlb	0	; select bank0
  2002  04BA  00A6               	movwf	Buzz@freq
  2003  04BB  300F               	movlw	15
  2004  04BC  00A7               	movwf	Buzz@freq+1
  2005  04BD  3064               	movlw	100
  2006  04BE  00A8               	movwf	Buzz@dur_ms
  2007  04BF  3000               	movlw	0
  2008  04C0  00A9               	movwf	Buzz@dur_ms+1
  2009  04C1  246F               	fcall	_Buzz
  2010                           
  2011                           ;user.c: 158: LED_off();
  2012  04C2  255A               	fcall	_LED_off
  2013                           
  2014                           ;user.c: 159: Buzz(3500,100);
  2015  04C3  30AC               	movlw	172
  2016  04C4  0020               	movlb	0	; select bank0
  2017  04C5  00A6               	movwf	Buzz@freq
  2018  04C6  300D               	movlw	13
  2019  04C7  00A7               	movwf	Buzz@freq+1
  2020  04C8  3064               	movlw	100
  2021  04C9  00A8               	movwf	Buzz@dur_ms
  2022  04CA  3000               	movlw	0
  2023  04CB  00A9               	movwf	Buzz@dur_ms+1
  2024  04CC  246F               	fcall	_Buzz
  2025                           
  2026                           ;user.c: 160: LED_on();
  2027  04CD  2557               	fcall	_LED_on
  2028                           
  2029                           ;user.c: 161: Buzz(4000,100);
  2030  04CE  30A0               	movlw	160
  2031  04CF  0020               	movlb	0	; select bank0
  2032  04D0  00A6               	movwf	Buzz@freq
  2033  04D1  300F               	movlw	15
  2034  04D2  00A7               	movwf	Buzz@freq+1
  2035  04D3  3064               	movlw	100
  2036  04D4  00A8               	movwf	Buzz@dur_ms
  2037  04D5  3000               	movlw	0
  2038  04D6  00A9               	movwf	Buzz@dur_ms+1
  2039  04D7  246F               	fcall	_Buzz
  2040                           
  2041                           ;user.c: 162: LED_off();
  2042  04D8  255A               	fcall	_LED_off
  2043                           
  2044                           ;user.c: 163: Buzz(4500,100);
  2045  04D9  3094               	movlw	148
  2046  04DA  0020               	movlb	0	; select bank0
  2047  04DB  00A6               	movwf	Buzz@freq
  2048  04DC  3011               	movlw	17
  2049  04DD  00A7               	movwf	Buzz@freq+1
  2050  04DE  3064               	movlw	100
  2051  04DF  00A8               	movwf	Buzz@dur_ms
  2052  04E0  3000               	movlw	0
  2053  04E1  00A9               	movwf	Buzz@dur_ms+1
  2054  04E2  246F               	fcall	_Buzz
  2055                           
  2056                           ;user.c: 164: LED_on();
  2057  04E3  2557               	fcall	_LED_on
  2058                           
  2059                           ;user.c: 165: Buzz(4000,100);
  2060  04E4  30A0               	movlw	160
  2061  04E5  0020               	movlb	0	; select bank0
  2062  04E6  00A6               	movwf	Buzz@freq
  2063  04E7  300F               	movlw	15
  2064  04E8  00A7               	movwf	Buzz@freq+1
  2065  04E9  3064               	movlw	100
  2066  04EA  00A8               	movwf	Buzz@dur_ms
  2067  04EB  3000               	movlw	0
  2068  04EC  00A9               	movwf	Buzz@dur_ms+1
  2069  04ED  246F               	fcall	_Buzz
  2070                           
  2071                           ;user.c: 166: LED_off();
  2072  04EE  255A               	fcall	_LED_off
  2073  04EF  0008               	return
  2074  04F0                     __end_of_Get_hit:	
  2075                           
  2076                           	psect	text4
  2077  0557                     __ptext4:	
  2078 ;; *************** function _LED_on *****************
  2079 ;; Defined at:
  2080 ;;		line 60 in file "user.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;		None               void
  2087 ;; Registers used:
  2088 ;;		None
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2094 ;;      Params:         0       0       0       0
  2095 ;;      Locals:         0       0       0       0
  2096 ;;      Temps:          0       0       0       0
  2097 ;;      Totals:         0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_Get_hit
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function _LED_on
  2110  0557                     _LED_on:	
  2111                           
  2112                           ;user.c: 62: PORTAbits.RA5 = 0;
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _LED_on: []
  2116  0557  0020               	movlb	0	; select bank0
  2117  0558  128C               	bcf	12,5	;volatile
  2118  0559  0008               	return
  2119  055A                     __end_of_LED_on:	
  2120                           
  2121                           	psect	text5
  2122  055A                     __ptext5:	
  2123 ;; *************** function _LED_off *****************
  2124 ;; Defined at:
  2125 ;;		line 65 in file "user.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;		None               void
  2132 ;; Registers used:
  2133 ;;		None
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2139 ;;      Params:         0       0       0       0
  2140 ;;      Locals:         0       0       0       0
  2141 ;;      Temps:          0       0       0       0
  2142 ;;      Totals:         0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    1
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_Get_hit
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _LED_off
  2155  055A                     _LED_off:	
  2156                           
  2157                           ;user.c: 67: PORTAbits.RA5 = 1;
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _LED_off: []
  2161  055A  0020               	movlb	0	; select bank0
  2162  055B  168C               	bsf	12,5	;volatile
  2163  055C  0008               	return
  2164  055D                     __end_of_LED_off:	
  2165                           
  2166                           	psect	text6
  2167  0525                     __ptext6:	
  2168 ;; *************** function _Fire *****************
  2169 ;; Defined at:
  2170 ;;		line 95 in file "main.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, pclath, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2184 ;;      Params:         0       0       0       0
  2185 ;;      Locals:         0       0       0       0
  2186 ;;      Temps:          0       0       0       0
  2187 ;;      Totals:         0       0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    3
  2191 ;; This function calls:
  2192 ;;		_Buzz
  2193 ;;		_Send_Byte
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _Fire
  2201  0525                     _Fire:	
  2202                           
  2203                           ;main.c: 96: if (PORTAbits.RA4) {
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _Fire: [wreg+status,2+status,0+pclath+cstack]
  2207  0525  0020               	movlb	0	; select bank0
  2208  0526  1E0C               	btfss	12,4	;volatile
  2209  0527  0008               	return
  2210                           
  2211                           ;main.c: 97: Send_Byte(my_id);
  2212  0528  087C               	movf	_my_id,w
  2213  0529  2535               	fcall	_Send_Byte
  2214                           
  2215                           ;main.c: 98: Buzz(3000,50);
  2216  052A  30B8               	movlw	184
  2217  052B  0020               	movlb	0	; select bank0
  2218  052C  00A6               	movwf	Buzz@freq
  2219  052D  300B               	movlw	11
  2220  052E  00A7               	movwf	Buzz@freq+1
  2221  052F  3032               	movlw	50
  2222  0530  00A8               	movwf	Buzz@dur_ms
  2223  0531  3000               	movlw	0
  2224  0532  00A9               	movwf	Buzz@dur_ms+1
  2225  0533  246F               	fcall	_Buzz
  2226  0534  0008               	return
  2227  0535                     __end_of_Fire:	
  2228                           
  2229                           	psect	text7
  2230  0535                     __ptext7:	
  2231 ;; *************** function _Send_Byte *****************
  2232 ;; Defined at:
  2233 ;;		line 85 in file "user.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  data            1    wreg     unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  data            1    1[COMMON] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, pclath, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2247 ;;      Params:         0       0       0       0
  2248 ;;      Locals:         1       0       0       0
  2249 ;;      Temps:          0       0       0       0
  2250 ;;      Totals:         1       0       0       0
  2251 ;;Total ram usage:        1 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    2
  2254 ;; This function calls:
  2255 ;;		_Disable_Modulation
  2256 ;;		_Modulate_Serial
  2257 ;; This function is called by:
  2258 ;;		_control_transfer
  2259 ;;		_Fire
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _Send_Byte
  2265  0535                     _Send_Byte:	
  2266                           
  2267                           ;incstack = 0
  2268                           ; Regs used in _Send_Byte: [wreg+status,2+status,0+pclath+cstack]
  2269                           ;Send_Byte@data stored from wreg
  2270  0535  00F1               	movwf	Send_Byte@data
  2271                           
  2272                           ;user.c: 87: RCSTAbits.CREN = 0;
  2273  0536  0023               	movlb	3	; select bank3
  2274  0537  121D               	bcf	29,4	;volatile
  2275                           
  2276                           ;user.c: 88: Modulate_Serial();
  2277  0538  2543               	fcall	_Modulate_Serial
  2278                           
  2279                           ;user.c: 89: TXREG = data;
  2280  0539  0871               	movf	Send_Byte@data,w
  2281  053A  0023               	movlb	3	; select bank3
  2282  053B  009A               	movwf	26	;volatile
  2283  053C                     l253:	
  2284                           ;user.c: 90: while(!TXSTAbits.TRMT);
  2285                           
  2286  053C  1C9E               	btfss	30,1	;volatile
  2287  053D  2D3C               	goto	l253
  2288                           
  2289                           ;user.c: 91: Disable_Modulation();
  2290  053E  2551               	fcall	_Disable_Modulation
  2291                           
  2292                           ;user.c: 92: RCSTAbits.CREN = 1;
  2293  053F  0023               	movlb	3	; select bank3
  2294  0540  161D               	bsf	29,4	;volatile
  2295                           
  2296                           ;user.c: 93: RCREG;
  2297  0541  0819               	movf	25,w	;volatile
  2298  0542  0008               	return
  2299  0543                     __end_of_Send_Byte:	
  2300                           
  2301                           	psect	text8
  2302  0543                     __ptext8:	
  2303 ;; *************** function _Modulate_Serial *****************
  2304 ;; Defined at:
  2305 ;;		line 96 in file "user.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;		None               void
  2312 ;; Registers used:
  2313 ;;		None
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2319 ;;      Params:         0       0       0       0
  2320 ;;      Locals:         0       0       0       0
  2321 ;;      Temps:          0       0       0       0
  2322 ;;      Totals:         0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    1
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_Send_Byte
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _Modulate_Serial
  2335  0543                     _Modulate_Serial:	
  2336                           
  2337                           ;user.c: 97: DACCON0bits.DACEN = 1;
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _Modulate_Serial: []
  2341  0543  0022               	movlb	2	; select bank2
  2342  0544  1798               	bsf	24,7	;volatile
  2343                           
  2344                           ;user.c: 99: INTCONbits.GIE = 1;
  2345  0545  178B               	bsf	11,7	;volatile
  2346                           
  2347                           ;user.c: 100: INTCONbits.PEIE = 1;
  2348  0546  170B               	bsf	11,6	;volatile
  2349                           
  2350                           ;user.c: 101: PIE1bits.TMR1IE = 1;
  2351  0547  0021               	movlb	1	; select bank1
  2352  0548  1411               	bsf	17,0	;volatile
  2353                           
  2354                           ;user.c: 103: T1CONbits.nT1SYNC = 1;
  2355  0549  0020               	movlb	0	; select bank0
  2356  054A  1518               	bsf	24,2	;volatile
  2357                           
  2358                           ;user.c: 104: T1CONbits.TMR1ON = 1;
  2359  054B  1418               	bsf	24,0	;volatile
  2360                           
  2361                           ;user.c: 105: TMR1 = 65486;
  2362  054C  30FF               	movlw	255
  2363  054D  0097               	movwf	23	;volatile
  2364  054E  30CE               	movlw	206
  2365  054F  0096               	movwf	22	;volatile
  2366  0550  0008               	return
  2367  0551                     __end_of_Modulate_Serial:	
  2368                           
  2369                           	psect	text9
  2370  0551                     __ptext9:	
  2371 ;; *************** function _Disable_Modulation *****************
  2372 ;; Defined at:
  2373 ;;		line 108 in file "user.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		None
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2387 ;;      Params:         0       0       0       0
  2388 ;;      Locals:         0       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         0       0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    1
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_Send_Byte
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _Disable_Modulation
  2403  0551                     _Disable_Modulation:	
  2404                           
  2405                           ;user.c: 109: INTCONbits.GIE = 0;
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in _Disable_Modulation: []
  2409  0551  138B               	bcf	11,7	;volatile
  2410                           
  2411                           ;user.c: 110: T1CONbits.TMR1ON = 0;
  2412  0552  0020               	movlb	0	; select bank0
  2413  0553  1018               	bcf	24,0	;volatile
  2414                           
  2415                           ;user.c: 111: DACCON0bits.DACEN = 0;
  2416  0554  0022               	movlb	2	; select bank2
  2417  0555  1398               	bcf	24,7	;volatile
  2418  0556  0008               	return
  2419  0557                     __end_of_Disable_Modulation:	
  2420                           
  2421                           	psect	text10
  2422  046F                     __ptext10:	
  2423 ;; *************** function _Buzz *****************
  2424 ;; Defined at:
  2425 ;;		line 70 in file "user.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  freq            2    6[BANK0 ] unsigned int 
  2428 ;;  dur_ms          2    8[BANK0 ] unsigned int 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  i               2   10[BANK0 ] unsigned int 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;		None               void
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2440 ;;      Params:         0       4       0       0
  2441 ;;      Locals:         0       2       0       0
  2442 ;;      Temps:          2       0       0       0
  2443 ;;      Totals:         2       6       0       0
  2444 ;;Total ram usage:        8 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		___aldiv
  2449 ;; This function is called by:
  2450 ;;		_Fire
  2451 ;;		_Get_hit
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           
  2456                           ;psect for function _Buzz
  2457  046F                     _Buzz:	
  2458                           
  2459                           ;user.c: 72: PWM3CONbits.PWM3EN = 1;
  2460                           
  2461                           ;incstack = 0
  2462                           ; Regs used in _Buzz: [wreg+status,2+status,0+pclath+cstack]
  2463  046F  003B               	movlb	27	; select bank27
  2464  0470  17BB               	bsf	59,7	;volatile
  2465                           
  2466                           ;user.c: 73: PWM3CONbits.PWM3OE = 1;
  2467  0471  173B               	bsf	59,6	;volatile
  2468                           
  2469                           ;user.c: 74: PWM3PR = (16000000 / freq) - 1;
  2470  0472  0020               	movlb	0	; select bank0
  2471  0473  0826               	movf	Buzz@freq,w
  2472  0474  00F1               	movwf	___aldiv@divisor
  2473  0475  0827               	movf	Buzz@freq+1,w
  2474  0476  00F2               	movwf	___aldiv@divisor+1
  2475  0477  01F3               	clrf	___aldiv@divisor+2
  2476  0478  01F4               	clrf	___aldiv@divisor+3
  2477  0479  3000               	movlw	0
  2478  047A  00F8               	movwf	___aldiv@dividend+3
  2479  047B  30F4               	movlw	244
  2480  047C  00F7               	movwf	___aldiv@dividend+2
  2481  047D  3024               	movlw	36
  2482  047E  00F6               	movwf	___aldiv@dividend+1
  2483  047F  3000               	movlw	0
  2484  0480  00F5               	movwf	___aldiv@dividend
  2485  0481  23ED               	fcall	___aldiv
  2486  0482  0871               	movf	?___aldiv,w
  2487  0483  3EFF               	addlw	255
  2488  0484  00FA               	movwf	??_Buzz
  2489  0485  30FF               	movlw	255
  2490  0486  3D72               	addwfc	?___aldiv+1,w
  2491  0487  00FB               	movwf	??_Buzz+1
  2492  0488  087A               	movf	??_Buzz,w
  2493  0489  003B               	movlb	27	; select bank27
  2494  048A  00B5               	movwf	53	;volatile
  2495  048B  087B               	movf	??_Buzz+1,w
  2496  048C  00B6               	movwf	54	;volatile
  2497                           
  2498                           ;user.c: 75: PWM3DC = PWM3PR >> 1;
  2499  048D  0836               	movf	54,w	;volatile
  2500  048E  00FB               	movwf	??_Buzz+1
  2501  048F  0835               	movf	53,w	;volatile
  2502  0490  00FA               	movwf	??_Buzz
  2503  0491  36FB               	lsrf	??_Buzz+1,f
  2504  0492  0CFA               	rrf	??_Buzz,f
  2505  0493  087A               	movf	??_Buzz,w
  2506  0494  00B3               	movwf	51	;volatile
  2507  0495  087B               	movf	??_Buzz+1,w
  2508  0496  00B4               	movwf	52	;volatile
  2509                           
  2510                           ;user.c: 76: PWM3PH = 0x0000;
  2511  0497  01B1               	clrf	49	;volatile
  2512  0498  01B2               	clrf	50	;volatile
  2513                           
  2514                           ;user.c: 77: PWM3LDCONbits.LDA = 1;
  2515  0499  17BF               	bsf	63,7	;volatile
  2516                           
  2517                           ;user.c: 79: for(uint16_t i = 0; i <= dur_ms; i++){
  2518  049A  0020               	movlb	0	; select bank0
  2519  049B  01AA               	clrf	Buzz@i
  2520  049C  01AB               	clrf	Buzz@i+1
  2521  049D                     l247:	
  2522  049D  082B               	movf	Buzz@i+1,w
  2523  049E  0229               	subwf	Buzz@dur_ms+1,w
  2524  049F  1D03               	skipz
  2525  04A0  2CA3               	goto	u1125
  2526  04A1  082A               	movf	Buzz@i,w
  2527  04A2  0228               	subwf	Buzz@dur_ms,w
  2528  04A3                     u1125:	
  2529  04A3  1C03               	btfss	3,0
  2530  04A4  2CB4               	goto	l249
  2531                           
  2532                           ;user.c: 80: _delay((unsigned long)((1)*(16000000/4000.0)));
  2533  04A5  3006               	movlw	6
  2534  04A6  00FB               	movwf	??_Buzz+1
  2535  04A7  3030               	movlw	48
  2536  04A8  00FA               	movwf	??_Buzz
  2537  04A9                     u2977:	
  2538  04A9  0BFA               	decfsz	??_Buzz,f
  2539  04AA  2CA9               	goto	u2977
  2540  04AB  0BFB               	decfsz	??_Buzz+1,f
  2541  04AC  2CA9               	goto	u2977
  2542  04AD  0000               	nop
  2543  04AE  3001               	movlw	1
  2544  04AF  0020               	movlb	0	; select bank0
  2545  04B0  07AA               	addwf	Buzz@i,f
  2546  04B1  3000               	movlw	0
  2547  04B2  3DAB               	addwfc	Buzz@i+1,f
  2548  04B3  2C9D               	goto	l247
  2549  04B4                     l249:	
  2550                           
  2551                           ;user.c: 81: }
  2552                           ;user.c: 82: PWM3CONbits.PWM3OE = 0;
  2553  04B4  003B               	movlb	27	; select bank27
  2554  04B5  133B               	bcf	59,6	;volatile
  2555  04B6  0008               	return
  2556  04B7                     __end_of_Buzz:	
  2557                           
  2558                           	psect	text11
  2559  03ED                     __ptext11:	
  2560 ;; *************** function ___aldiv *****************
  2561 ;; Defined at:
  2562 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  divisor         4    1[COMMON] long 
  2565 ;;  dividend        4    5[COMMON] long 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  quotient        4    2[BANK0 ] long 
  2568 ;;  sign            1    1[BANK0 ] unsigned char 
  2569 ;;  counter         1    0[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  4    1[COMMON] long 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2579 ;;      Params:         8       0       0       0
  2580 ;;      Locals:         0       6       0       0
  2581 ;;      Temps:          1       0       0       0
  2582 ;;      Totals:         9       6       0       0
  2583 ;;Total ram usage:       15 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_Buzz
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function ___aldiv
  2595  03ED                     ___aldiv:	
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2599  03ED  0020               	movlb	0	; select bank0
  2600  03EE  01A1               	clrf	___aldiv@sign
  2601  03EF  1FF4               	btfss	___aldiv@divisor+3,7
  2602  03F0  2BFE               	goto	l337
  2603  03F1  09F1               	comf	___aldiv@divisor,f
  2604  03F2  09F2               	comf	___aldiv@divisor+1,f
  2605  03F3  09F3               	comf	___aldiv@divisor+2,f
  2606  03F4  09F4               	comf	___aldiv@divisor+3,f
  2607  03F5  0AF1               	incf	___aldiv@divisor,f
  2608  03F6  1903               	skipnz
  2609  03F7  0AF2               	incf	___aldiv@divisor+1,f
  2610  03F8  1903               	skipnz
  2611  03F9  0AF3               	incf	___aldiv@divisor+2,f
  2612  03FA  1903               	skipnz
  2613  03FB  0AF4               	incf	___aldiv@divisor+3,f
  2614  03FC  01A1               	clrf	___aldiv@sign
  2615  03FD  0AA1               	incf	___aldiv@sign,f
  2616  03FE                     l337:	
  2617  03FE  1FF8               	btfss	___aldiv@dividend+3,7
  2618  03FF  2C0F               	goto	l1225
  2619  0400  09F5               	comf	___aldiv@dividend,f
  2620  0401  09F6               	comf	___aldiv@dividend+1,f
  2621  0402  09F7               	comf	___aldiv@dividend+2,f
  2622  0403  09F8               	comf	___aldiv@dividend+3,f
  2623  0404  0AF5               	incf	___aldiv@dividend,f
  2624  0405  1903               	skipnz
  2625  0406  0AF6               	incf	___aldiv@dividend+1,f
  2626  0407  1903               	skipnz
  2627  0408  0AF7               	incf	___aldiv@dividend+2,f
  2628  0409  1903               	skipnz
  2629  040A  0AF8               	incf	___aldiv@dividend+3,f
  2630  040B  3001               	movlw	1
  2631  040C  00F9               	movwf	??___aldiv
  2632  040D  0879               	movf	??___aldiv,w
  2633  040E  06A1               	xorwf	___aldiv@sign,f
  2634  040F                     l1225:	
  2635  040F  3000               	movlw	0
  2636  0410  00A5               	movwf	___aldiv@quotient+3
  2637  0411  3000               	movlw	0
  2638  0412  00A4               	movwf	___aldiv@quotient+2
  2639  0413  3000               	movlw	0
  2640  0414  00A3               	movwf	___aldiv@quotient+1
  2641  0415  3000               	movlw	0
  2642  0416  00A2               	movwf	___aldiv@quotient
  2643  0417  0874               	movf	___aldiv@divisor+3,w
  2644  0418  0473               	iorwf	___aldiv@divisor+2,w
  2645  0419  0472               	iorwf	___aldiv@divisor+1,w
  2646  041A  0471               	iorwf	___aldiv@divisor,w
  2647  041B  1903               	skipnz
  2648  041C  2C58               	goto	l1247
  2649  041D  01A0               	clrf	___aldiv@counter
  2650  041E  0AA0               	incf	___aldiv@counter,f
  2651  041F                     l1233:	
  2652  041F  1BF4               	btfsc	___aldiv@divisor+3,7
  2653  0420  2C2D               	goto	l1235
  2654  0421  3001               	movlw	1
  2655  0422                     u1045:	
  2656  0422  35F1               	lslf	___aldiv@divisor,f
  2657  0423  0DF2               	rlf	___aldiv@divisor+1,f
  2658  0424  0DF3               	rlf	___aldiv@divisor+2,f
  2659  0425  0DF4               	rlf	___aldiv@divisor+3,f
  2660  0426  0B89               	decfsz	9,f
  2661  0427  2C22               	goto	u1045
  2662  0428  3001               	movlw	1
  2663  0429  00F9               	movwf	??___aldiv
  2664  042A  0879               	movf	??___aldiv,w
  2665  042B  07A0               	addwf	___aldiv@counter,f
  2666  042C  2C1F               	goto	l1233
  2667  042D                     l1235:	
  2668  042D  3001               	movlw	1
  2669  042E                     u1065:	
  2670  042E  35A2               	lslf	___aldiv@quotient,f
  2671  042F  0DA3               	rlf	___aldiv@quotient+1,f
  2672  0430  0DA4               	rlf	___aldiv@quotient+2,f
  2673  0431  0DA5               	rlf	___aldiv@quotient+3,f
  2674  0432  0B89               	decfsz	9,f
  2675  0433  2C2E               	goto	u1065
  2676  0434  0874               	movf	___aldiv@divisor+3,w
  2677  0435  0278               	subwf	___aldiv@dividend+3,w
  2678  0436  1D03               	skipz
  2679  0437  2C42               	goto	u1075
  2680  0438  0873               	movf	___aldiv@divisor+2,w
  2681  0439  0277               	subwf	___aldiv@dividend+2,w
  2682  043A  1D03               	skipz
  2683  043B  2C42               	goto	u1075
  2684  043C  0872               	movf	___aldiv@divisor+1,w
  2685  043D  0276               	subwf	___aldiv@dividend+1,w
  2686  043E  1D03               	skipz
  2687  043F  2C42               	goto	u1075
  2688  0440  0871               	movf	___aldiv@divisor,w
  2689  0441  0275               	subwf	___aldiv@dividend,w
  2690  0442                     u1075:	
  2691  0442  1C03               	skipc
  2692  0443  2C4D               	goto	l1243
  2693  0444  0871               	movf	___aldiv@divisor,w
  2694  0445  02F5               	subwf	___aldiv@dividend,f
  2695  0446  0872               	movf	___aldiv@divisor+1,w
  2696  0447  3BF6               	subwfb	___aldiv@dividend+1,f
  2697  0448  0873               	movf	___aldiv@divisor+2,w
  2698  0449  3BF7               	subwfb	___aldiv@dividend+2,f
  2699  044A  0874               	movf	___aldiv@divisor+3,w
  2700  044B  3BF8               	subwfb	___aldiv@dividend+3,f
  2701  044C  1422               	bsf	___aldiv@quotient,0
  2702  044D                     l1243:	
  2703  044D  3001               	movlw	1
  2704  044E                     u1085:	
  2705  044E  36F4               	lsrf	___aldiv@divisor+3,f
  2706  044F  0CF3               	rrf	___aldiv@divisor+2,f
  2707  0450  0CF2               	rrf	___aldiv@divisor+1,f
  2708  0451  0CF1               	rrf	___aldiv@divisor,f
  2709  0452  0B89               	decfsz	9,f
  2710  0453  2C4E               	goto	u1085
  2711  0454  3001               	movlw	1
  2712  0455  02A0               	subwf	___aldiv@counter,f
  2713  0456  1D03               	btfss	3,2
  2714  0457  2C2D               	goto	l1235
  2715  0458                     l1247:	
  2716  0458  0821               	movf	___aldiv@sign,w
  2717  0459  1903               	btfsc	3,2
  2718  045A  2C66               	goto	l1251
  2719  045B  09A2               	comf	___aldiv@quotient,f
  2720  045C  09A3               	comf	___aldiv@quotient+1,f
  2721  045D  09A4               	comf	___aldiv@quotient+2,f
  2722  045E  09A5               	comf	___aldiv@quotient+3,f
  2723  045F  0AA2               	incf	___aldiv@quotient,f
  2724  0460  1903               	skipnz
  2725  0461  0AA3               	incf	___aldiv@quotient+1,f
  2726  0462  1903               	skipnz
  2727  0463  0AA4               	incf	___aldiv@quotient+2,f
  2728  0464  1903               	skipnz
  2729  0465  0AA5               	incf	___aldiv@quotient+3,f
  2730  0466                     l1251:	
  2731  0466  0825               	movf	___aldiv@quotient+3,w
  2732  0467  00F4               	movwf	?___aldiv+3
  2733  0468  0824               	movf	___aldiv@quotient+2,w
  2734  0469  00F3               	movwf	?___aldiv+2
  2735  046A  0823               	movf	___aldiv@quotient+1,w
  2736  046B  00F2               	movwf	?___aldiv+1
  2737  046C  0822               	movf	___aldiv@quotient,w
  2738  046D  00F1               	movwf	?___aldiv
  2739  046E  0008               	return
  2740  046F                     __end_of___aldiv:	
  2741                           
  2742                           	psect	intentry
  2743  0004                     __pintentry:	
  2744 ;; *************** function _High_Priority_Interrupt *****************
  2745 ;; Defined at:
  2746 ;;		line 171 in file "user.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		wreg
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2760 ;;      Params:         0       0       0       0
  2761 ;;      Locals:         0       0       0       0
  2762 ;;      Temps:          1       0       0       0
  2763 ;;      Totals:         1       0       0       0
  2764 ;;Total ram usage:        1 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		Interrupt level 1
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773  0004                     _High_Priority_Interrupt:	
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _High_Priority_Interrupt: [wreg]
  2777  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2778  0005  3180               	pagesel	$
  2779  0006  0020               	movlb	0	; select bank0
  2780  0007  087F               	movf	127,w
  2781  0008  00F0               	movwf	??_High_Priority_Interrupt
  2782                           
  2783                           ;user.c: 172: if(PIR1bits.TMR1IF == 1)
  2784  0009  1C11               	btfss	17,0	;volatile
  2785  000A  2815               	goto	i1l278
  2786  000B  0022               	banksel	280	;# 
  2787  000C  0818               	movf	280,w	;# 
  2788  000D  3A20               	xorlw	32	;# 
  2789  000E  0098               	movwf	280	;# 
  2790                           
  2791                           ;user.c: 179: TMR1 += 65486;
  2792  000F  30CE               	movlw	206
  2793  0010  0020               	movlb	0	; select bank0
  2794  0011  0796               	addwf	22,f	;volatile
  2795  0012  30FF               	movlw	255
  2796  0013  3D97               	addwfc	23,f	;volatile
  2797                           
  2798                           ;user.c: 180: PIR1bits.TMR1IF = 0;
  2799  0014  1011               	bcf	17,0	;volatile
  2800  0015                     i1l278:	
  2801  0015  0870               	movf	??_High_Priority_Interrupt,w
  2802  0016  00FF               	movwf	127
  2803  0017  107E               	bcf	126,0	;clear compiler interrupt flag
  2804  0018  0009               	retfie
  2805  0019                     __end_of_High_Priority_Interrupt:	
  2806  007E                     btemp	set	126	;btemp
  2807  007E                     pic14e$flags	set	126
  2808  007E                     wtemp	set	126
  2809  007E                     wtemp0	set	126
  2810  0080                     wtemp1	set	128
  2811  0082                     wtemp2	set	130
  2812  0084                     wtemp3	set	132
  2813  0086                     wtemp4	set	134
  2814  0088                     wtemp5	set	136
  2815  007F                     wtemp6	set	127
  2816  007E                     ttemp	set	126
  2817  007E                     ttemp0	set	126
  2818  0081                     ttemp1	set	129
  2819  0084                     ttemp2	set	132
  2820  0087                     ttemp3	set	135
  2821  007F                     ttemp4	set	127
  2822  007E                     ltemp	set	126
  2823  007E                     ltemp0	set	126
  2824  0082                     ltemp1	set	130
  2825  0086                     ltemp2	set	134
  2826  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     14      16
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _control_transfer->_Send_Byte
    _Get_hit->_Buzz
    _Fire->_Buzz
    _Buzz->___aldiv

Critical Paths under _High_Priority_Interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _Get_hit->_Buzz
    _Fire->_Buzz
    _Buzz->___aldiv

Critical Paths under _High_Priority_Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_Priority_Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_Priority_Interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5793
                                             12 BANK0      2     2      0
                               _Fire
                            _Get_hit
                              _Setup
                   _control_transfer
 ---------------------------------------------------------------------------------
 (1) _control_transfer                                    11    11      0    3415
                                              2 COMMON     2     2      0
                                              0 BANK0      9     9      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Get_hit                                              1     1      0    1110
                               _Buzz
                            _LED_off
                             _LED_on
 ---------------------------------------------------------------------------------
 (2) _LED_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Fire                                                 0     0      0    1141
                               _Buzz
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      31
                                              1 COMMON     1     1      0
                 _Disable_Modulation
                    _Modulate_Serial
 ---------------------------------------------------------------------------------
 (3) _Modulate_Serial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Disable_Modulation                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Buzz                                                 8     4      4    1110
                                             10 COMMON     2     2      0
                                              6 BANK0      6     2      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     406
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _High_Priority_Interrupt                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Fire
     _Buzz
       ___aldiv
     _Send_Byte
       _Disable_Modulation
       _Modulate_Serial
   _Get_hit
     _Buzz
       ___aldiv
     _LED_off
     _LED_on
   _Setup
   _control_transfer
     _Send_Byte
       _Disable_Modulation
       _Modulate_Serial

 _High_Priority_Interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      10       6       20.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Aug 17 14:48:41 2014

                     __CFG_CP$OFF 0000                                l30 0040                                l25 0025  
                              l42 0092                                l51 00C6                                l70 0190  
                              l38 0077                                l63 0117                                l55 00E1  
                              l81 01DE                                l74 01AB                                l92 022C  
                              l85 01F9                                l96 0247                                _GO 04E9  
                             l111 02E2                               l104 027D                               l122 0330  
                             l115 02FD                               l140 03EC                               l134 0381  
                             l126 034B                               l147 04F1                               l253 053C  
                             l247 049D                               l337 03FE                               l249 04B4  
                    __CFG_BORV$LO 0000                               wreg 0009                      __CFG_LVP$OFF 0000  
                            l1233 041F                              l1225 040F                              l2009 0394  
                            l1251 0466                              l1243 044D                              l1235 042D  
                            l2061 0500                              l1247 0458                              l2047 03DF  
                 __end_of_LED_off 055D                              l1711 0038                              l1911 0290  
                            l1719 0053                              l1841 01A3                              l1753 00C4  
                            l1745 00A5                              l1737 008A                              l1835 018D  
                            l1871 020C                              l1863 01F1                              l1767 00F4  
                            l1759 00D9                              l1961 02F5                              l1849 01BE  
                            l1785 012A                              l1955 02E0                              l1893 025A  
                            l1885 023F                              l1991 035E                              l1983 0343  
                            l1969 0310                              _ADON 04E8                              _CHS0 04EA  
                            _CHS1 04EB                              u1045 0422                              u1125 04A3  
                            u1065 042E                              u2105 00B6                              u2025 0064  
                            u1075 0442                              u1085 044E                              u2225 0140  
                            u2315 01CF                              u2235 0164                              u2245 017B  
                            u2175 0105                              u2515 02AA                              u2525 02C9  
                            u2455 026B                              u2385 021D                              u2715 03AE  
                            u2725 03CD                              u2807 007B                              u2665 036F  
                            u2817 0096                              u2595 0321                              u2907 024B  
                            u2827 00CA                              u2917 0281                              u2837 00E5  
                            u2927 02E6                              u2847 011B                              u2937 0301  
                            u2857 0194                              u2947 0334                              u2867 01AF  
                            u2787 0029                              u2957 034F                              u2877 01E2  
                            u2797 0044                              u2967 0385                              u2887 01FD  
                            u2977 04A9                              u2897 0230                              _TMR1 0016  
                            _Fire 0525                              _Buzz 046F                      __CFG_WRT$OFF 0000  
                            _main 04F0                     Send_Byte@data 0071                              btemp 007E  
                   __CFG_BOREN$ON 0000                              ltemp 007E                              start 0019  
                            ttemp 007E                              wtemp 007E                        Buzz@dur_ms 0028  
                   __CFG_MCLRE$ON 0000                   __end_of_Get_hit 04F0                             ?_Fire 0070  
                           ?_Buzz 0026                   __end_of___aldiv 046F                             ?_main 0070  
                   __CFG_WDTE$OFF 0000  __size_of_High_Priority_Interrupt 0015                             i1l278 0015  
                           _PMADR 0191                             _PMDAT 0193                             _RCREG 0199  
                           _TXREG 019A                             Buzz@i 002A                             _Setup 050C  
                           _my_id 007C                             main@b 002D                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F          __end_of_control_transfer 03ED                      __end_of_Fire 0535  
                 __initialization 001A                      __end_of_Buzz 04B7                      __end_of_main 050C  
                          DACCON0 0118                            ??_Fire 007C                            ??_Buzz 007A  
                          ??_main 002C                    __CFG_PLLEN$OFF 0000                         ??_LED_off 0071  
                          ?_Setup 0070                            _ADCON0 009D                            _ADCON1 009E  
                          _ADRESH 009C                            _ADRESL 009B                            _ANSELA 018C  
                          _LED_on 0557                            _PMCON2 0196                            _OSCCON 0099  
                          _PWM3DC 0DB3                            _PWM3PH 0DB1                            _SPBRGL 019B  
                          _PWM3PR 0DB5                         ??_Get_hit 007C                    __CFG_PWRTE$OFF 0000  
                       ??___aldiv 0079                __size_of_Send_Byte 000E                    __CFG_STVREN$ON 0000  
      __end_of_Disable_Modulation 0557                      __pdataCOMMON 007C                  _my_random_number 002F  
        __size_of_Modulate_Serial 000E           __end_of__initialization 001E                    __pcstackCOMMON 0070  
                   __end_of_Setup 0525           _High_Priority_Interrupt 0004                           ??_Setup 0071  
               __end_of_Send_Byte 0543                        __pbssBANK0 002E                           ?_LED_on 0070  
                      __pmaintext 04F0                        __pintentry 0004                           _LED_off 055A  
                 __size_of_LED_on 0003                           _Get_hit 04B7                 ??_Modulate_Serial 0071  
               ?_control_transfer 0070                ??_control_transfer 0072         ??_High_Priority_Interrupt 0070  
                         ___aldiv 03ED                           __ptext1 0021                           __ptext2 050C  
                         __ptext3 04B7                           __ptext4 0557                           __ptext5 055A  
                         __ptext6 0525                           __ptext7 0535                           __ptext8 0543  
                         __ptext9 0551                         _T1CONbits 0018                  ___aldiv@dividend 0075  
            end_of_initialization 001E                         _RCSTAbits 019D                  ___aldiv@quotient 0022  
                       Get_hit@ID 0070                         _PORTAbits 000C                  __CFG_FOSC$INTOSC 0000  
                       _TRISAbits 008C                       _DACCON0bits 0118                _Disable_Modulation 0551  
                  __end_of_LED_on 055A                         _TXSTAbits 019E               control_transfer@cmd 0020  
             ?_Disable_Modulation 0070                       _BAUDCONbits 019F                     __pidataCOMMON 055D  
             start_initialization 001A              ??_Disable_Modulation 0071                          ??_LED_on 0071  
                       _Send_Byte 0535                     _PWM3LDCONbits 0DBF                  __CFG_LPBOREN$OFF 0000  
                        ?_LED_off 0070                         ___latbits 0000                   _Modulate_Serial 0543  
                   __pcstackBANK0 0020                          ?_Get_hit 0070                        ?_Send_Byte 0070  
                        ?___aldiv 0071                    _my_power_level 002E         __size_of_control_transfer 03CC  
                  __size_of_Setup 0019                   ___aldiv@divisor 0071                   ___aldiv@counter 0020  
                        _PIE1bits 0091                          _PIR1bits 0011          control_transfer@checksum 0024  
         __end_of_Modulate_Serial 0551                        _ADCON0bits 009D                control_transfer@id 0023  
                        Buzz@freq 0026                  __size_of_LED_off 0003       control_transfer@power_level 0021  
                     ??_Send_Byte 0071                  __size_of_Get_hit 0039          ?_High_Priority_Interrupt 0070  
                __size_of___aldiv 0082     control_transfer@random_number 0022                          __ptext10 046F  
                        __ptext11 03ED                     __size_of_Fire 0010                     __size_of_Buzz 0048  
                   __size_of_main 001C                 control_transfer@i 0025                 control_transfer@x 0028  
               control_transfer@y 0027                  ?_Modulate_Serial 0070                  _control_transfer 0021  
                      _INTCONbits 000B       __size_of_Disable_Modulation 0006                       _PWM3CONbits 0DBB  
                     pic14e$flags 007E                          intlevel1 0000   __end_of_High_Priority_Interrupt 0019  
                      _PMCON1bits 0195                 __CFG_CLKOUTEN$OFF 0000                      ___aldiv@sign 0021  
