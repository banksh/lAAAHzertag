

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Aug 17 17:26:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	12LF1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  008C                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  0111                     	;# 
    70  0112                     	;# 
    71  0115                     	;# 
    72  0116                     	;# 
    73  0117                     	;# 
    74  0118                     	;# 
    75  0119                     	;# 
    76  011D                     	;# 
    77  011D                     	;# 
    78  018C                     	;# 
    79  0191                     	;# 
    80  0191                     	;# 
    81  0192                     	;# 
    82  0193                     	;# 
    83  0193                     	;# 
    84  0194                     	;# 
    85  0195                     	;# 
    86  0196                     	;# 
    87  0197                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019B                     	;# 
    91  019B                     	;# 
    92  019C                     	;# 
    93  019D                     	;# 
    94  019E                     	;# 
    95  019F                     	;# 
    96  020C                     	;# 
    97  028C                     	;# 
    98  030C                     	;# 
    99  038C                     	;# 
   100  0391                     	;# 
   101  0392                     	;# 
   102  0393                     	;# 
   103  0691                     	;# 
   104  0692                     	;# 
   105  0693                     	;# 
   106  0694                     	;# 
   107  0695                     	;# 
   108  0D8E                     	;# 
   109  0D8F                     	;# 
   110  0D90                     	;# 
   111  0D91                     	;# 
   112  0D91                     	;# 
   113  0D92                     	;# 
   114  0D93                     	;# 
   115  0D93                     	;# 
   116  0D94                     	;# 
   117  0D95                     	;# 
   118  0D95                     	;# 
   119  0D96                     	;# 
   120  0D97                     	;# 
   121  0D97                     	;# 
   122  0D98                     	;# 
   123  0D99                     	;# 
   124  0D99                     	;# 
   125  0D9A                     	;# 
   126  0D9B                     	;# 
   127  0D9C                     	;# 
   128  0D9C                     	;# 
   129  0D9D                     	;# 
   130  0D9D                     	;# 
   131  0D9E                     	;# 
   132  0D9F                     	;# 
   133  0DA0                     	;# 
   134  0DA1                     	;# 
   135  0DA1                     	;# 
   136  0DA2                     	;# 
   137  0DA3                     	;# 
   138  0DA3                     	;# 
   139  0DA4                     	;# 
   140  0DA5                     	;# 
   141  0DA5                     	;# 
   142  0DA6                     	;# 
   143  0DA7                     	;# 
   144  0DA7                     	;# 
   145  0DA8                     	;# 
   146  0DA9                     	;# 
   147  0DA9                     	;# 
   148  0DAA                     	;# 
   149  0DAB                     	;# 
   150  0DAC                     	;# 
   151  0DAC                     	;# 
   152  0DAD                     	;# 
   153  0DAD                     	;# 
   154  0DAE                     	;# 
   155  0DAF                     	;# 
   156  0DB0                     	;# 
   157  0DB1                     	;# 
   158  0DB1                     	;# 
   159  0DB2                     	;# 
   160  0DB3                     	;# 
   161  0DB3                     	;# 
   162  0DB4                     	;# 
   163  0DB5                     	;# 
   164  0DB5                     	;# 
   165  0DB6                     	;# 
   166  0DB7                     	;# 
   167  0DB7                     	;# 
   168  0DB8                     	;# 
   169  0DB9                     	;# 
   170  0DB9                     	;# 
   171  0DBA                     	;# 
   172  0DBB                     	;# 
   173  0DBC                     	;# 
   174  0DBC                     	;# 
   175  0DBD                     	;# 
   176  0DBD                     	;# 
   177  0DBE                     	;# 
   178  0DBF                     	;# 
   179  0DC0                     	;# 
   180  0FE4                     	;# 
   181  0FE5                     	;# 
   182  0FE6                     	;# 
   183  0FE7                     	;# 
   184  0FE8                     	;# 
   185  0FE8                     	;# 
   186  0FE9                     	;# 
   187  0FEA                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEE                     	;# 
   193  0FEF                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0016                     	;# 
   213  0017                     	;# 
   214  0018                     	;# 
   215  0019                     	;# 
   216  001A                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  008C                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009B                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  0111                     	;# 
   237  0112                     	;# 
   238  0115                     	;# 
   239  0116                     	;# 
   240  0117                     	;# 
   241  0118                     	;# 
   242  0119                     	;# 
   243  011D                     	;# 
   244  011D                     	;# 
   245  018C                     	;# 
   246  0191                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0193                     	;# 
   250  0193                     	;# 
   251  0194                     	;# 
   252  0195                     	;# 
   253  0196                     	;# 
   254  0197                     	;# 
   255  0199                     	;# 
   256  019A                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019C                     	;# 
   260  019D                     	;# 
   261  019E                     	;# 
   262  019F                     	;# 
   263  020C                     	;# 
   264  028C                     	;# 
   265  030C                     	;# 
   266  038C                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  0691                     	;# 
   271  0692                     	;# 
   272  0693                     	;# 
   273  0694                     	;# 
   274  0695                     	;# 
   275  0D8E                     	;# 
   276  0D8F                     	;# 
   277  0D90                     	;# 
   278  0D91                     	;# 
   279  0D91                     	;# 
   280  0D92                     	;# 
   281  0D93                     	;# 
   282  0D93                     	;# 
   283  0D94                     	;# 
   284  0D95                     	;# 
   285  0D95                     	;# 
   286  0D96                     	;# 
   287  0D97                     	;# 
   288  0D97                     	;# 
   289  0D98                     	;# 
   290  0D99                     	;# 
   291  0D99                     	;# 
   292  0D9A                     	;# 
   293  0D9B                     	;# 
   294  0D9C                     	;# 
   295  0D9C                     	;# 
   296  0D9D                     	;# 
   297  0D9D                     	;# 
   298  0D9E                     	;# 
   299  0D9F                     	;# 
   300  0DA0                     	;# 
   301  0DA1                     	;# 
   302  0DA1                     	;# 
   303  0DA2                     	;# 
   304  0DA3                     	;# 
   305  0DA3                     	;# 
   306  0DA4                     	;# 
   307  0DA5                     	;# 
   308  0DA5                     	;# 
   309  0DA6                     	;# 
   310  0DA7                     	;# 
   311  0DA7                     	;# 
   312  0DA8                     	;# 
   313  0DA9                     	;# 
   314  0DA9                     	;# 
   315  0DAA                     	;# 
   316  0DAB                     	;# 
   317  0DAC                     	;# 
   318  0DAC                     	;# 
   319  0DAD                     	;# 
   320  0DAD                     	;# 
   321  0DAE                     	;# 
   322  0DAF                     	;# 
   323  0DB0                     	;# 
   324  0DB1                     	;# 
   325  0DB1                     	;# 
   326  0DB2                     	;# 
   327  0DB3                     	;# 
   328  0DB3                     	;# 
   329  0DB4                     	;# 
   330  0DB5                     	;# 
   331  0DB5                     	;# 
   332  0DB6                     	;# 
   333  0DB7                     	;# 
   334  0DB7                     	;# 
   335  0DB8                     	;# 
   336  0DB9                     	;# 
   337  0DB9                     	;# 
   338  0DBA                     	;# 
   339  0DBB                     	;# 
   340  0DBC                     	;# 
   341  0DBC                     	;# 
   342  0DBD                     	;# 
   343  0DBD                     	;# 
   344  0DBE                     	;# 
   345  0DBF                     	;# 
   346  0DC0                     	;# 
   347  0FE4                     	;# 
   348  0FE5                     	;# 
   349  0FE6                     	;# 
   350  0FE7                     	;# 
   351  0FE8                     	;# 
   352  0FE8                     	;# 
   353  0FE9                     	;# 
   354  0FEA                     	;# 
   355  0FEA                     	;# 
   356  0FEB                     	;# 
   357  0FED                     	;# 
   358  0FEE                     	;# 
   359  0FEE                     	;# 
   360  0FEF                     	;# 
   361                           
   362                           	psect	idataCOMMON
   363  05F3                     __pidataCOMMON:	
   364                           
   365                           ;initializer for _my_id
   366  05F3  3480               	retlw	128
   367                           
   368                           	psect	nvBANK0
   369  002F                     __pnvBANK0:	
   370  002F                     _config:	
   371  002F                     	ds	8
   372  0016                     _TMR1	set	22
   373  000B                     _INTCONbits	set	11
   374  0011                     _PIR1bits	set	17
   375  000C                     _PORTAbits	set	12
   376  0018                     _T1CONbits	set	24
   377  009D                     _ADCON0	set	157
   378  009D                     _ADCON0bits	set	157
   379  009E                     _ADCON1	set	158
   380  009C                     _ADRESH	set	156
   381  009B                     _ADRESL	set	155
   382  0099                     _OSCCON	set	153
   383  0091                     _PIE1bits	set	145
   384  008C                     _TRISAbits	set	140
   385  04E8                     _ADON	set	1256
   386  04EA                     _CHS0	set	1258
   387  04EB                     _CHS1	set	1259
   388  04E9                     _GO	set	1257
   389  0118                     _DACCON0bits	set	280
   390  0191                     _PMADR	set	401
   391  0193                     _PMDAT	set	403
   392  018C                     _ANSELA	set	396
   393  019F                     _BAUDCONbits	set	415
   394  0195                     _PMCON1bits	set	405
   395  0196                     _PMCON2	set	406
   396  0199                     _RCREG	set	409
   397  019D                     _RCSTAbits	set	413
   398  019B                     _SPBRGL	set	411
   399  019A                     _TXREG	set	410
   400  019E                     _TXSTAbits	set	414
   401  0DB3                     _PWM3DC	set	3507
   402  0DB1                     _PWM3PH	set	3505
   403  0DB5                     _PWM3PR	set	3509
   404  0DBB                     _PWM3CONbits	set	3515
   405  0DBF                     _PWM3LDCONbits	set	3519
   406                           
   407                           ; #config settings
   408  0000                     
   409                           	psect	cinit
   410  001A                     start_initialization:	
   411  001A                     __initialization:	
   412                           
   413                           ; Clear objects allocated to BANK0
   414  001A  01B7               	clrf	__pbssBANK0& (0+127)
   415  001B  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   416                           
   417                           ; Initialize objects allocated to COMMON
   418  001C  25F3               	fcall	__pidataCOMMON	;fetch initializer
   419  001D  00FC               	movwf	__pdataCOMMON& (0+127)
   420  001E                     end_of_initialization:	
   421                           ;End of C runtime variable initialization code
   422                           
   423  001E                     __end_of__initialization:	
   424  001E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   425  001F  0020               	movlb	0
   426  0020  2C6B               	ljmp	_main	;jump to C main() function
   427                           
   428                           	psect	dataCOMMON
   429  007C                     __pdataCOMMON:	
   430  007C                     _my_id:	
   431  007C                     	ds	1
   432                           
   433                           	psect	bssBANK0
   434  0037                     __pbssBANK0:	
   435  0037                     _my_power_level:	
   436  0037                     	ds	1
   437  0038                     _my_random_number:	
   438  0038                     	ds	1
   439                           
   440                           	psect	cstackCOMMON
   441  0070                     __pcstackCOMMON:	
   442  0070                     ?_Send_Byte:	
   443  0070                     ?_Setup:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0070                     ?_Get_hit:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  0070                     ?_Modulate_Serial:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  0070                     ?_Disable_Modulation:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  0070                     ?_control_transfer:	
   456                           ; 0 bytes @ 0x0
   457                           
   458  0070                     ?_Fire:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  0070                     ?_main:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  0070                     ?_LED_on:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  0070                     ?_LED_off:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?_High_Priority_Interrupt:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ??_High_Priority_Interrupt:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     Get_hit@ID:	
   477                           ; 0 bytes @ 0x0
   478                           
   479                           
   480                           ; 1 bytes @ 0x0
   481  0070                     	ds	1
   482  0071                     ??_Send_Byte:	
   483  0071                     ??_Setup:	
   484                           ; 0 bytes @ 0x1
   485                           
   486  0071                     ?_Save:	
   487                           ; 0 bytes @ 0x1
   488                           
   489  0071                     ?_Load:	
   490                           ; 0 bytes @ 0x1
   491                           
   492  0071                     ??_Modulate_Serial:	
   493                           ; 0 bytes @ 0x1
   494                           
   495  0071                     ??_Disable_Modulation:	
   496                           ; 0 bytes @ 0x1
   497                           
   498  0071                     ??_LED_on:	
   499                           ; 0 bytes @ 0x1
   500                           
   501  0071                     ??_LED_off:	
   502                           ; 0 bytes @ 0x1
   503                           
   504  0071                     ?___aldiv:	
   505                           ; 0 bytes @ 0x1
   506                           
   507  0071                     Send_Byte@data:	
   508                           ; 4 bytes @ 0x1
   509                           
   510  0071                     Load@address:	
   511                           ; 1 bytes @ 0x1
   512                           
   513  0071                     Save@address:	
   514                           ; 2 bytes @ 0x1
   515                           
   516  0071                     ___aldiv@divisor:	
   517                           ; 2 bytes @ 0x1
   518                           
   519                           
   520                           ; 4 bytes @ 0x1
   521  0071                     	ds	1
   522  0072                     ??_control_transfer:	
   523                           
   524                           ; 0 bytes @ 0x2
   525  0072                     	ds	1
   526  0073                     Load@ptr:	
   527  0073                     Save@ptr:	
   528                           ; 1 bytes @ 0x3
   529                           
   530                           
   531                           ; 1 bytes @ 0x3
   532  0073                     	ds	1
   533  0074                     Load@data_length:	
   534  0074                     Save@data_length:	
   535                           ; 1 bytes @ 0x4
   536                           
   537                           
   538                           ; 1 bytes @ 0x4
   539  0074                     	ds	1
   540  0075                     ??_Save:	
   541  0075                     ??_Load:	
   542                           ; 0 bytes @ 0x5
   543                           
   544  0075                     ___aldiv@dividend:	
   545                           ; 0 bytes @ 0x5
   546                           
   547                           
   548                           ; 4 bytes @ 0x5
   549  0075                     	ds	1
   550  0076                     Load@i:	
   551  0076                     Save@i:	
   552                           ; 1 bytes @ 0x6
   553                           
   554                           
   555                           ; 1 bytes @ 0x6
   556  0076                     	ds	3
   557  0079                     ??___aldiv:	
   558                           
   559                           ; 0 bytes @ 0x9
   560  0079                     	ds	1
   561  007A                     ??_Buzz:	
   562                           
   563                           ; 0 bytes @ 0xA
   564  007A                     	ds	2
   565  007C                     ??_Get_hit:	
   566  007C                     ??_Fire:	
   567                           ; 0 bytes @ 0xC
   568                           
   569                           
   570                           	psect	cstackBANK0
   571  0020                     __pcstackBANK0:	
   572                           ; 0 bytes @ 0xC
   573                           
   574  0020                     control_transfer@id:	
   575  0020                     ___aldiv@counter:	
   576                           ; 1 bytes @ 0x0
   577                           
   578                           
   579                           ; 1 bytes @ 0x0
   580  0020                     	ds	1
   581  0021                     control_transfer@cmd:	
   582  0021                     ___aldiv@sign:	
   583                           ; 1 bytes @ 0x1
   584                           
   585                           
   586                           ; 1 bytes @ 0x1
   587  0021                     	ds	1
   588  0022                     control_transfer@power_level:	
   589  0022                     ___aldiv@quotient:	
   590                           ; 1 bytes @ 0x2
   591                           
   592                           
   593                           ; 4 bytes @ 0x2
   594  0022                     	ds	1
   595  0023                     control_transfer@random_number:	
   596                           
   597                           ; 1 bytes @ 0x3
   598  0023                     	ds	1
   599  0024                     control_transfer@checksum:	
   600                           
   601                           ; 1 bytes @ 0x4
   602  0024                     	ds	1
   603  0025                     control_transfer@i:	
   604                           
   605                           ; 2 bytes @ 0x5
   606  0025                     	ds	1
   607  0026                     ?_Buzz:	
   608  0026                     Buzz@freq:	
   609                           ; 0 bytes @ 0x6
   610                           
   611                           
   612                           ; 2 bytes @ 0x6
   613  0026                     	ds	1
   614  0027                     control_transfer@y:	
   615                           
   616                           ; 1 bytes @ 0x7
   617  0027                     	ds	1
   618  0028                     control_transfer@x:	
   619  0028                     Buzz@dur_ms:	
   620                           ; 1 bytes @ 0x8
   621                           
   622                           
   623                           ; 2 bytes @ 0x8
   624  0028                     	ds	2
   625  002A                     Buzz@i:	
   626                           
   627                           ; 2 bytes @ 0xA
   628  002A                     	ds	2
   629  002C                     ??_main:	
   630                           
   631                           ; 0 bytes @ 0xC
   632  002C                     	ds	2
   633  002E                     main@b:	
   634                           
   635                           ; 1 bytes @ 0xE
   636  002E                     	ds	1
   637                           
   638                           	psect	maintext
   639  046B                     __pmaintext:	
   640 ;;
   641 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   642 ;;
   643 ;; *************** function _main *****************
   644 ;; Defined at:
   645 ;;		line 107 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  b               1   14[BANK0 ] unsigned char 
   650 ;; Return value:  Size  Location     Type
   651 ;;		None               void
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 17F/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   659 ;;      Params:         0       0       0       0
   660 ;;      Locals:         0       1       0       0
   661 ;;      Temps:          0       2       0       0
   662 ;;      Totals:         0       3       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels required when called:    4
   665 ;; This function calls:
   666 ;;		_Fire
   667 ;;		_Get_hit
   668 ;;		_Load
   669 ;;		_Save
   670 ;;		_Setup
   671 ;;		_control_transfer
   672 ;; This function is called by:
   673 ;;		Startup code after reset
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _main
   679  046B                     _main:	
   680                           
   681                           ;main.c: 109: uint8_t b;
   682                           ;main.c: 111: config.health = 16;
   683                           
   684                           ;incstack = 0
   685                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   686  046B  3010               	movlw	16
   687  046C  0020               	movlb	0	; select bank0
   688  046D  00B3               	movwf	_config+4
   689  046E  3000               	movlw	0
   690  046F  00B4               	movwf	_config+5
   691                           
   692                           ;main.c: 112: config.id = 0x80;
   693  0470  3080               	movlw	128
   694  0471  00AF               	movwf	_config
   695  0472  3000               	movlw	0
   696  0473  00B0               	movwf	_config+1
   697                           
   698                           ;main.c: 113: config.power = 0x16;
   699  0474  3016               	movlw	22
   700  0475  00B1               	movwf	_config+2
   701  0476  3000               	movlw	0
   702  0477  00B2               	movwf	_config+3
   703                           
   704                           ;main.c: 114: config.respawn_timer = 10;
   705  0478  300A               	movlw	10
   706  0479  00B5               	movwf	_config+6
   707  047A  3000               	movlw	0
   708  047B  00B6               	movwf	_config+7
   709                           
   710                           ;main.c: 116: Setup();
   711  047C  25A2               	fcall	_Setup
   712  047D                     l2187:	
   713                           ;main.c: 118: while(1)
   714                           
   715                           
   716                           ;main.c: 119: {
   717                           ;main.c: 138: Fire();
   718  047D  25BB               	fcall	_Fire
   719                           
   720                           ;main.c: 139: if((PIR1bits.RCIF))
   721  047E  0020               	movlb	0	; select bank0
   722  047F  1E91               	btfss	17,5	;volatile
   723  0480  2C97               	goto	l2201
   724                           
   725                           ;main.c: 140: {
   726                           ;main.c: 141: b=(RCREG);
   727  0481  0023               	movlb	3	; select bank3
   728  0482  0819               	movf	25,w	;volatile
   729  0483  0020               	movlb	0	; select bank0
   730  0484  00AC               	movwf	??_main
   731  0485  082C               	movf	??_main,w
   732  0486  00AE               	movwf	main@b
   733                           
   734                           ;main.c: 142: if(b == 0x10) {
   735  0487  082E               	movf	main@b,w
   736  0488  3A10               	xorlw	16
   737  0489  1D03               	skipz
   738  048A  2C8C               	goto	l2195
   739                           
   740                           ;main.c: 143: control_transfer();
   741  048B  2021               	fcall	_control_transfer
   742  048C                     l2195:	
   743                           
   744                           ;main.c: 144: }
   745                           ;main.c: 145: if((b > 0x80) && (b != my_id)) {
   746  048C  3081               	movlw	129
   747  048D  0020               	movlb	0	; select bank0
   748  048E  022E               	subwf	main@b,w
   749  048F  1C03               	skipc
   750  0490  2C97               	goto	l2201
   751  0491  082E               	movf	main@b,w
   752  0492  067C               	xorwf	_my_id,w
   753  0493  1903               	skipnz
   754  0494  2C97               	goto	l2201
   755                           
   756                           ;main.c: 146: Get_hit(b);
   757  0495  082E               	movf	main@b,w
   758  0496  2544               	fcall	_Get_hit
   759  0497                     l2201:	
   760                           
   761                           ;main.c: 147: }
   762                           ;main.c: 149: }
   763                           ;main.c: 152: Save(0x7D0, (uint16_t*) &config, 4);
   764  0497  30D0               	movlw	208
   765  0498  00F1               	movwf	Save@address
   766  0499  3007               	movlw	7
   767  049A  00F2               	movwf	Save@address+1
   768  049B  302F               	movlw	_config& (0+255)
   769  049C  0020               	movlb	0	; select bank0
   770  049D  00AC               	movwf	??_main
   771  049E  082C               	movf	??_main,w
   772  049F  00F3               	movwf	Save@ptr
   773  04A0  3004               	movlw	4
   774  04A1  00AD               	movwf	??_main+1
   775  04A2  082D               	movf	??_main+1,w
   776  04A3  00F4               	movwf	Save@data_length
   777  04A4  2500               	fcall	_Save
   778                           
   779                           ;main.c: 154: config.id = 0x92;
   780  04A5  3092               	movlw	146
   781  04A6  0020               	movlb	0	; select bank0
   782  04A7  00AF               	movwf	_config
   783  04A8  3000               	movlw	0
   784  04A9  00B0               	movwf	_config+1
   785                           
   786                           ;main.c: 155: Load(0x7D0, (uint16_t*) &config, 4);
   787  04AA  30D0               	movlw	208
   788  04AB  00F1               	movwf	Load@address
   789  04AC  3007               	movlw	7
   790  04AD  00F2               	movwf	Load@address+1
   791  04AE  302F               	movlw	_config& (0+255)
   792  04AF  00AC               	movwf	??_main
   793  04B0  082C               	movf	??_main,w
   794  04B1  00F3               	movwf	Load@ptr
   795  04B2  3004               	movlw	4
   796  04B3  00AD               	movwf	??_main+1
   797  04B4  082D               	movf	??_main+1,w
   798  04B5  00F4               	movwf	Load@data_length
   799  04B6  257D               	fcall	_Load
   800  04B7  2C7D               	goto	l2187
   801  04B8                     __end_of_main:	
   802                           
   803                           	psect	text1
   804  0021                     __ptext1:	
   805 ;; *************** function _control_transfer *****************
   806 ;; Defined at:
   807 ;;		line 53 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  i               2    5[BANK0 ] unsigned int 
   812 ;;  x               1    8[BANK0 ] unsigned char 
   813 ;;  y               1    7[BANK0 ] unsigned char 
   814 ;;  checksum        1    4[BANK0 ] unsigned char 
   815 ;;  random_numbe    1    3[BANK0 ] unsigned char 
   816 ;;  power_level     1    2[BANK0 ] unsigned char 
   817 ;;  cmd             1    1[BANK0 ] unsigned char 
   818 ;;  id              1    0[BANK0 ] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;		None               void
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   828 ;;      Params:         0       0       0       0
   829 ;;      Locals:         0       9       0       0
   830 ;;      Temps:          2       0       0       0
   831 ;;      Totals:         2       9       0       0
   832 ;;Total ram usage:       11 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    3
   835 ;; This function calls:
   836 ;;		_Send_Byte
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _control_transfer
   844  0021                     _control_transfer:	
   845                           
   846                           ;main.c: 55: uint8_t x,y,checksum;
   847                           ;main.c: 56: uint16_t i;
   848                           ;main.c: 58: uint8_t cmd;
   849                           ;main.c: 59: uint8_t power_level,random_number,id;
   850                           ;main.c: 61: checksum = 0; i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(160
      +                          00000/4000000.0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF
      +                          ) {_delay((unsigned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _control_transfer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   854  0021  0020               	movlb	0	; select bank0
   855  0022  01A4               	clrf	control_transfer@checksum
   856  0023  01A5               	clrf	control_transfer@i
   857  0024  01A6               	clrf	control_transfer@i+1
   858  0025                     l31:	
   859  0025  1A91               	btfsc	17,5	;volatile
   860  0026  2838               	goto	l1843
   861  0027  3085               	movlw	133
   862  0028  00F2               	movwf	??_control_transfer
   863  0029                     u2827:	
   864  0029  0BF2               	decfsz	??_control_transfer,f
   865  002A  2829               	goto	u2827
   866  002B  3001               	movlw	1
   867  002C  0020               	movlb	0	; select bank0
   868  002D  07A5               	addwf	control_transfer@i,f
   869  002E  3000               	movlw	0
   870  002F  3DA6               	addwfc	control_transfer@i+1,f
   871  0030  3003               	movlw	3
   872  0031  0226               	subwf	control_transfer@i+1,w
   873  0032  30E8               	movlw	232
   874  0033  1903               	skipnz
   875  0034  0225               	subwf	control_transfer@i,w
   876  0035  1803               	btfsc	3,0
   877  0036  0008               	return
   878  0037  2825               	goto	l31
   879  0038                     l1843:	
   880  0038  0023               	movlb	3	; select bank3
   881  0039  0819               	movf	25,w	;volatile
   882  003A  00F2               	movwf	??_control_transfer
   883  003B  0872               	movf	??_control_transfer,w
   884  003C  0020               	movlb	0	; select bank0
   885  003D  00A8               	movwf	control_transfer@x
   886  003E  01A5               	clrf	control_transfer@i
   887  003F  01A6               	clrf	control_transfer@i+1
   888  0040                     l36:	
   889  0040  1A91               	btfsc	17,5	;volatile
   890  0041  2853               	goto	l1851
   891  0042  3085               	movlw	133
   892  0043  00F2               	movwf	??_control_transfer
   893  0044                     u2837:	
   894  0044  0BF2               	decfsz	??_control_transfer,f
   895  0045  2844               	goto	u2837
   896  0046  3001               	movlw	1
   897  0047  0020               	movlb	0	; select bank0
   898  0048  07A5               	addwf	control_transfer@i,f
   899  0049  3000               	movlw	0
   900  004A  3DA6               	addwfc	control_transfer@i+1,f
   901  004B  3003               	movlw	3
   902  004C  0226               	subwf	control_transfer@i+1,w
   903  004D  30E8               	movlw	232
   904  004E  1903               	skipnz
   905  004F  0225               	subwf	control_transfer@i,w
   906  0050  1803               	btfsc	3,0
   907  0051  0008               	return
   908  0052  2840               	goto	l36
   909  0053                     l1851:	
   910  0053  0023               	movlb	3	; select bank3
   911  0054  0819               	movf	25,w	;volatile
   912  0055  00F2               	movwf	??_control_transfer
   913  0056  0872               	movf	??_control_transfer,w
   914  0057  0020               	movlb	0	; select bank0
   915  0058  00A7               	movwf	control_transfer@y
   916  0059  0828               	movf	control_transfer@x,w
   917  005A  39F0               	andlw	240
   918  005B  1D03               	btfss	3,2
   919  005C  0008               	return
   920  005D  0827               	movf	control_transfer@y,w
   921  005E  39F0               	andlw	240
   922  005F  1D03               	btfss	3,2
   923  0060  0008               	return
   924  0061  0827               	movf	control_transfer@y,w
   925  0062  00F2               	movwf	??_control_transfer
   926  0063  3003               	movlw	3
   927  0064                     u2065:	
   928  0064  35F2               	lslf	??_control_transfer,f
   929  0065  3EFF               	addlw	-1
   930  0066  1D03               	skipz
   931  0067  2864               	goto	u2065
   932  0068  3572               	lslf	??_control_transfer,w
   933  0069  0428               	iorwf	control_transfer@x,w
   934  006A  00F3               	movwf	??_control_transfer+1
   935  006B  0873               	movf	??_control_transfer+1,w
   936  006C  00A8               	movwf	control_transfer@x
   937  006D  0828               	movf	control_transfer@x,w
   938  006E  00F2               	movwf	??_control_transfer
   939  006F  0872               	movf	??_control_transfer,w
   940  0070  07A4               	addwf	control_transfer@checksum,f
   941  0071  0828               	movf	control_transfer@x,w
   942  0072  067C               	xorwf	_my_id,w
   943  0073  1D03               	btfss	3,2
   944  0074  0008               	return
   945                           
   946                           ;main.c: 62: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
   947  0075  01A5               	clrf	control_transfer@i
   948  0076  01A6               	clrf	control_transfer@i+1
   949  0077                     l44:	
   950  0077  1A91               	btfsc	17,5	;volatile
   951  0078  288A               	goto	l1869
   952  0079  3085               	movlw	133
   953  007A  00F2               	movwf	??_control_transfer
   954  007B                     u2847:	
   955  007B  0BF2               	decfsz	??_control_transfer,f
   956  007C  287B               	goto	u2847
   957  007D  3001               	movlw	1
   958  007E  0020               	movlb	0	; select bank0
   959  007F  07A5               	addwf	control_transfer@i,f
   960  0080  3000               	movlw	0
   961  0081  3DA6               	addwfc	control_transfer@i+1,f
   962  0082  3003               	movlw	3
   963  0083  0226               	subwf	control_transfer@i+1,w
   964  0084  30E8               	movlw	232
   965  0085  1903               	skipnz
   966  0086  0225               	subwf	control_transfer@i,w
   967  0087  1803               	btfsc	3,0
   968  0088  0008               	return
   969  0089  2877               	goto	l44
   970  008A                     l1869:	
   971  008A  0023               	movlb	3	; select bank3
   972  008B  0819               	movf	25,w	;volatile
   973  008C  00F2               	movwf	??_control_transfer
   974  008D  0872               	movf	??_control_transfer,w
   975  008E  0020               	movlb	0	; select bank0
   976  008F  00A8               	movwf	control_transfer@x
   977  0090  01A5               	clrf	control_transfer@i
   978  0091  01A6               	clrf	control_transfer@i+1
   979  0092                     l48:	
   980  0092  1A91               	btfsc	17,5	;volatile
   981  0093  28A5               	goto	l1877
   982  0094  3085               	movlw	133
   983  0095  00F2               	movwf	??_control_transfer
   984  0096                     u2857:	
   985  0096  0BF2               	decfsz	??_control_transfer,f
   986  0097  2896               	goto	u2857
   987  0098  3001               	movlw	1
   988  0099  0020               	movlb	0	; select bank0
   989  009A  07A5               	addwf	control_transfer@i,f
   990  009B  3000               	movlw	0
   991  009C  3DA6               	addwfc	control_transfer@i+1,f
   992  009D  3003               	movlw	3
   993  009E  0226               	subwf	control_transfer@i+1,w
   994  009F  30E8               	movlw	232
   995  00A0  1903               	skipnz
   996  00A1  0225               	subwf	control_transfer@i,w
   997  00A2  1803               	btfsc	3,0
   998  00A3  0008               	return
   999  00A4  2892               	goto	l48
  1000  00A5                     l1877:	
  1001  00A5  0023               	movlb	3	; select bank3
  1002  00A6  0819               	movf	25,w	;volatile
  1003  00A7  00F2               	movwf	??_control_transfer
  1004  00A8  0872               	movf	??_control_transfer,w
  1005  00A9  0020               	movlb	0	; select bank0
  1006  00AA  00A7               	movwf	control_transfer@y
  1007  00AB  0828               	movf	control_transfer@x,w
  1008  00AC  39F0               	andlw	240
  1009  00AD  1D03               	btfss	3,2
  1010  00AE  0008               	return
  1011  00AF  0827               	movf	control_transfer@y,w
  1012  00B0  39F0               	andlw	240
  1013  00B1  1D03               	btfss	3,2
  1014  00B2  0008               	return
  1015  00B3  0827               	movf	control_transfer@y,w
  1016  00B4  00F2               	movwf	??_control_transfer
  1017  00B5  3003               	movlw	3
  1018  00B6                     u2145:	
  1019  00B6  35F2               	lslf	??_control_transfer,f
  1020  00B7  3EFF               	addlw	-1
  1021  00B8  1D03               	skipz
  1022  00B9  28B6               	goto	u2145
  1023  00BA  3572               	lslf	??_control_transfer,w
  1024  00BB  0428               	iorwf	control_transfer@x,w
  1025  00BC  00F3               	movwf	??_control_transfer+1
  1026  00BD  0873               	movf	??_control_transfer+1,w
  1027  00BE  00A1               	movwf	control_transfer@cmd
  1028  00BF  0821               	movf	control_transfer@cmd,w
  1029  00C0  00F2               	movwf	??_control_transfer
  1030  00C1  0872               	movf	??_control_transfer,w
  1031  00C2  07A4               	addwf	control_transfer@checksum,f
  1032                           
  1033                           ;main.c: 64: switch(cmd)
  1034  00C3  2BDB               	goto	l2177
  1035  00C4                     l1885:	
  1036                           ;main.c: 65: {
  1037                           ;main.c: 66: case 0x01:
  1038                           
  1039                           
  1040                           ;main.c: 67: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1041  00C4  01A5               	clrf	control_transfer@i
  1042  00C5  01A6               	clrf	control_transfer@i+1
  1043  00C6                     l57:	
  1044  00C6  1A91               	btfsc	17,5	;volatile
  1045  00C7  28D9               	goto	l1891
  1046  00C8  3085               	movlw	133
  1047  00C9  00F2               	movwf	??_control_transfer
  1048  00CA                     u2867:	
  1049  00CA  0BF2               	decfsz	??_control_transfer,f
  1050  00CB  28CA               	goto	u2867
  1051  00CC  3001               	movlw	1
  1052  00CD  0020               	movlb	0	; select bank0
  1053  00CE  07A5               	addwf	control_transfer@i,f
  1054  00CF  3000               	movlw	0
  1055  00D0  3DA6               	addwfc	control_transfer@i+1,f
  1056  00D1  3003               	movlw	3
  1057  00D2  0226               	subwf	control_transfer@i+1,w
  1058  00D3  30E8               	movlw	232
  1059  00D4  1903               	skipnz
  1060  00D5  0225               	subwf	control_transfer@i,w
  1061  00D6  1803               	btfsc	3,0
  1062  00D7  0008               	return
  1063  00D8  28C6               	goto	l57
  1064  00D9                     l1891:	
  1065  00D9  0023               	movlb	3	; select bank3
  1066  00DA  0819               	movf	25,w	;volatile
  1067  00DB  00F2               	movwf	??_control_transfer
  1068  00DC  0872               	movf	??_control_transfer,w
  1069  00DD  0020               	movlb	0	; select bank0
  1070  00DE  00A8               	movwf	control_transfer@x
  1071  00DF  01A5               	clrf	control_transfer@i
  1072  00E0  01A6               	clrf	control_transfer@i+1
  1073  00E1                     l61:	
  1074  00E1  1A91               	btfsc	17,5	;volatile
  1075  00E2  28F4               	goto	l1899
  1076  00E3  3085               	movlw	133
  1077  00E4  00F2               	movwf	??_control_transfer
  1078  00E5                     u2877:	
  1079  00E5  0BF2               	decfsz	??_control_transfer,f
  1080  00E6  28E5               	goto	u2877
  1081  00E7  3001               	movlw	1
  1082  00E8  0020               	movlb	0	; select bank0
  1083  00E9  07A5               	addwf	control_transfer@i,f
  1084  00EA  3000               	movlw	0
  1085  00EB  3DA6               	addwfc	control_transfer@i+1,f
  1086  00EC  3003               	movlw	3
  1087  00ED  0226               	subwf	control_transfer@i+1,w
  1088  00EE  30E8               	movlw	232
  1089  00EF  1903               	skipnz
  1090  00F0  0225               	subwf	control_transfer@i,w
  1091  00F1  1803               	btfsc	3,0
  1092  00F2  0008               	return
  1093  00F3  28E1               	goto	l61
  1094  00F4                     l1899:	
  1095  00F4  0023               	movlb	3	; select bank3
  1096  00F5  0819               	movf	25,w	;volatile
  1097  00F6  00F2               	movwf	??_control_transfer
  1098  00F7  0872               	movf	??_control_transfer,w
  1099  00F8  0020               	movlb	0	; select bank0
  1100  00F9  00A7               	movwf	control_transfer@y
  1101  00FA  0828               	movf	control_transfer@x,w
  1102  00FB  39F0               	andlw	240
  1103  00FC  1D03               	btfss	3,2
  1104  00FD  0008               	return
  1105  00FE  0827               	movf	control_transfer@y,w
  1106  00FF  39F0               	andlw	240
  1107  0100  1D03               	btfss	3,2
  1108  0101  0008               	return
  1109  0102  0827               	movf	control_transfer@y,w
  1110  0103  00F2               	movwf	??_control_transfer
  1111  0104  3003               	movlw	3
  1112  0105                     u2215:	
  1113  0105  35F2               	lslf	??_control_transfer,f
  1114  0106  3EFF               	addlw	-1
  1115  0107  1D03               	skipz
  1116  0108  2905               	goto	u2215
  1117  0109  3572               	lslf	??_control_transfer,w
  1118  010A  0428               	iorwf	control_transfer@x,w
  1119  010B  00F3               	movwf	??_control_transfer+1
  1120  010C  0873               	movf	??_control_transfer+1,w
  1121  010D  00A8               	movwf	control_transfer@x
  1122  010E  0828               	movf	control_transfer@x,w
  1123  010F  00F2               	movwf	??_control_transfer
  1124  0110  0872               	movf	??_control_transfer,w
  1125  0111  07A4               	addwf	control_transfer@checksum,f
  1126  0112  0824               	movf	control_transfer@checksum,w
  1127  0113  1D03               	skipz
  1128  0114  0008               	return
  1129  0115  01A5               	clrf	control_transfer@i
  1130  0116  01A6               	clrf	control_transfer@i+1
  1131  0117                     l69:	
  1132  0117  1A91               	btfsc	17,5	;volatile
  1133  0118  292A               	goto	l1917
  1134  0119  3085               	movlw	133
  1135  011A  00F2               	movwf	??_control_transfer
  1136  011B                     u2887:	
  1137  011B  0BF2               	decfsz	??_control_transfer,f
  1138  011C  291B               	goto	u2887
  1139  011D  3001               	movlw	1
  1140  011E  0020               	movlb	0	; select bank0
  1141  011F  07A5               	addwf	control_transfer@i,f
  1142  0120  3000               	movlw	0
  1143  0121  3DA6               	addwfc	control_transfer@i+1,f
  1144  0122  3003               	movlw	3
  1145  0123  0226               	subwf	control_transfer@i+1,w
  1146  0124  30E8               	movlw	232
  1147  0125  1903               	skipnz
  1148  0126  0225               	subwf	control_transfer@i,w
  1149  0127  1803               	btfsc	3,0
  1150  0128  0008               	return
  1151  0129  2917               	goto	l69
  1152  012A                     l1917:	
  1153  012A  0023               	movlb	3	; select bank3
  1154  012B  0819               	movf	25,w	;volatile
  1155  012C  00F2               	movwf	??_control_transfer
  1156  012D  0872               	movf	??_control_transfer,w
  1157  012E  0020               	movlb	0	; select bank0
  1158  012F  00A8               	movwf	control_transfer@x
  1159  0130  0828               	movf	control_transfer@x,w
  1160  0131  3A11               	xorlw	17
  1161  0132  1D03               	btfss	3,2
  1162  0133  0008               	return
  1163                           
  1164                           ;main.c: 68: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1165  0134  3010               	movlw	16
  1166  0135  25CB               	fcall	_Send_Byte
  1167  0136  0020               	movlb	0	; select bank0
  1168  0137  01A4               	clrf	control_transfer@checksum
  1169  0138  087C               	movf	_my_id,w
  1170  0139  390F               	andlw	15
  1171  013A  00F2               	movwf	??_control_transfer
  1172  013B  0872               	movf	??_control_transfer,w
  1173  013C  00A8               	movwf	control_transfer@x
  1174  013D  087C               	movf	_my_id,w
  1175  013E  00F2               	movwf	??_control_transfer
  1176  013F  3004               	movlw	4
  1177  0140                     u2265:	
  1178  0140  36F2               	lsrf	??_control_transfer,f
  1179  0141  0B89               	decfsz	9,f
  1180  0142  2940               	goto	u2265
  1181  0143  0872               	movf	??_control_transfer,w
  1182  0144  00F3               	movwf	??_control_transfer+1
  1183  0145  0873               	movf	??_control_transfer+1,w
  1184  0146  00A7               	movwf	control_transfer@y
  1185  0147  0828               	movf	control_transfer@x,w
  1186  0148  25CB               	fcall	_Send_Byte
  1187  0149  0020               	movlb	0	; select bank0
  1188  014A  0827               	movf	control_transfer@y,w
  1189  014B  25CB               	fcall	_Send_Byte
  1190  014C  087C               	movf	_my_id,w
  1191  014D  0020               	movlb	0	; select bank0
  1192  014E  02A4               	subwf	control_transfer@checksum,f
  1193                           
  1194                           ;main.c: 69: x = 0x02 & 0x0F; y = 0x02 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          2;
  1195  014F  3002               	movlw	2
  1196  0150  00F2               	movwf	??_control_transfer
  1197  0151  0872               	movf	??_control_transfer,w
  1198  0152  00A8               	movwf	control_transfer@x
  1199  0153  01A7               	clrf	control_transfer@y
  1200  0154  0828               	movf	control_transfer@x,w
  1201  0155  25CB               	fcall	_Send_Byte
  1202  0156  0020               	movlb	0	; select bank0
  1203  0157  0827               	movf	control_transfer@y,w
  1204  0158  25CB               	fcall	_Send_Byte
  1205  0159  3002               	movlw	2
  1206  015A  0020               	movlb	0	; select bank0
  1207  015B  02A4               	subwf	control_transfer@checksum,f
  1208                           
  1209                           ;main.c: 70: x = my_random_number & 0x0F; y = my_random_number >> 4; Send_Byte(x); Send_
      +                          Byte(y); checksum -= my_random_number;
  1210  015C  0838               	movf	_my_random_number,w
  1211  015D  390F               	andlw	15
  1212  015E  00F2               	movwf	??_control_transfer
  1213  015F  0872               	movf	??_control_transfer,w
  1214  0160  00A8               	movwf	control_transfer@x
  1215  0161  0838               	movf	_my_random_number,w
  1216  0162  00F2               	movwf	??_control_transfer
  1217  0163  3004               	movlw	4
  1218  0164                     u2275:	
  1219  0164  36F2               	lsrf	??_control_transfer,f
  1220  0165  0B89               	decfsz	9,f
  1221  0166  2964               	goto	u2275
  1222  0167  0872               	movf	??_control_transfer,w
  1223  0168  00F3               	movwf	??_control_transfer+1
  1224  0169  0873               	movf	??_control_transfer+1,w
  1225  016A  00A7               	movwf	control_transfer@y
  1226  016B  0828               	movf	control_transfer@x,w
  1227  016C  25CB               	fcall	_Send_Byte
  1228  016D  0020               	movlb	0	; select bank0
  1229  016E  0827               	movf	control_transfer@y,w
  1230  016F  25CB               	fcall	_Send_Byte
  1231  0170  0020               	movlb	0	; select bank0
  1232  0171  0838               	movf	_my_random_number,w
  1233  0172  02A4               	subwf	control_transfer@checksum,f
  1234                           
  1235                           ;main.c: 71: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1236  0173  0824               	movf	control_transfer@checksum,w
  1237  0174  390F               	andlw	15
  1238  0175  00F2               	movwf	??_control_transfer
  1239  0176  0872               	movf	??_control_transfer,w
  1240  0177  00A8               	movwf	control_transfer@x
  1241  0178  0824               	movf	control_transfer@checksum,w
  1242  0179  00F2               	movwf	??_control_transfer
  1243  017A  3004               	movlw	4
  1244  017B                     u2285:	
  1245  017B  36F2               	lsrf	??_control_transfer,f
  1246  017C  0B89               	decfsz	9,f
  1247  017D  297B               	goto	u2285
  1248  017E  0872               	movf	??_control_transfer,w
  1249  017F  00F3               	movwf	??_control_transfer+1
  1250  0180  0873               	movf	??_control_transfer+1,w
  1251  0181  00A7               	movwf	control_transfer@y
  1252  0182  0828               	movf	control_transfer@x,w
  1253  0183  25CB               	fcall	_Send_Byte
  1254  0184  0020               	movlb	0	; select bank0
  1255  0185  0827               	movf	control_transfer@y,w
  1256  0186  25CB               	fcall	_Send_Byte
  1257  0187  0020               	movlb	0	; select bank0
  1258  0188  0824               	movf	control_transfer@checksum,w
  1259  0189  02A4               	subwf	control_transfer@checksum,f
  1260  018A  3011               	movlw	17
  1261  018B  25CB               	fcall	_Send_Byte
  1262                           
  1263                           ;main.c: 72: break;
  1264  018C  0008               	return
  1265  018D                     l1967:	
  1266                           ;main.c: 73: case 0x03:
  1267                           
  1268                           
  1269                           ;main.c: 74: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1270  018D  0020               	movlb	0	; select bank0
  1271  018E  01A5               	clrf	control_transfer@i
  1272  018F  01A6               	clrf	control_transfer@i+1
  1273  0190                     l76:	
  1274  0190  1A91               	btfsc	17,5	;volatile
  1275  0191  29A3               	goto	l1973
  1276  0192  3085               	movlw	133
  1277  0193  00F2               	movwf	??_control_transfer
  1278  0194                     u2897:	
  1279  0194  0BF2               	decfsz	??_control_transfer,f
  1280  0195  2994               	goto	u2897
  1281  0196  3001               	movlw	1
  1282  0197  0020               	movlb	0	; select bank0
  1283  0198  07A5               	addwf	control_transfer@i,f
  1284  0199  3000               	movlw	0
  1285  019A  3DA6               	addwfc	control_transfer@i+1,f
  1286  019B  3003               	movlw	3
  1287  019C  0226               	subwf	control_transfer@i+1,w
  1288  019D  30E8               	movlw	232
  1289  019E  1903               	skipnz
  1290  019F  0225               	subwf	control_transfer@i,w
  1291  01A0  1803               	btfsc	3,0
  1292  01A1  0008               	return
  1293  01A2  2990               	goto	l76
  1294  01A3                     l1973:	
  1295  01A3  0023               	movlb	3	; select bank3
  1296  01A4  0819               	movf	25,w	;volatile
  1297  01A5  00F2               	movwf	??_control_transfer
  1298  01A6  0872               	movf	??_control_transfer,w
  1299  01A7  0020               	movlb	0	; select bank0
  1300  01A8  00A8               	movwf	control_transfer@x
  1301  01A9  01A5               	clrf	control_transfer@i
  1302  01AA  01A6               	clrf	control_transfer@i+1
  1303  01AB                     l80:	
  1304  01AB  1A91               	btfsc	17,5	;volatile
  1305  01AC  29BE               	goto	l1981
  1306  01AD  3085               	movlw	133
  1307  01AE  00F2               	movwf	??_control_transfer
  1308  01AF                     u2907:	
  1309  01AF  0BF2               	decfsz	??_control_transfer,f
  1310  01B0  29AF               	goto	u2907
  1311  01B1  3001               	movlw	1
  1312  01B2  0020               	movlb	0	; select bank0
  1313  01B3  07A5               	addwf	control_transfer@i,f
  1314  01B4  3000               	movlw	0
  1315  01B5  3DA6               	addwfc	control_transfer@i+1,f
  1316  01B6  3003               	movlw	3
  1317  01B7  0226               	subwf	control_transfer@i+1,w
  1318  01B8  30E8               	movlw	232
  1319  01B9  1903               	skipnz
  1320  01BA  0225               	subwf	control_transfer@i,w
  1321  01BB  1803               	btfsc	3,0
  1322  01BC  0008               	return
  1323  01BD  29AB               	goto	l80
  1324  01BE                     l1981:	
  1325  01BE  0023               	movlb	3	; select bank3
  1326  01BF  0819               	movf	25,w	;volatile
  1327  01C0  00F2               	movwf	??_control_transfer
  1328  01C1  0872               	movf	??_control_transfer,w
  1329  01C2  0020               	movlb	0	; select bank0
  1330  01C3  00A7               	movwf	control_transfer@y
  1331  01C4  0828               	movf	control_transfer@x,w
  1332  01C5  39F0               	andlw	240
  1333  01C6  1D03               	btfss	3,2
  1334  01C7  0008               	return
  1335  01C8  0827               	movf	control_transfer@y,w
  1336  01C9  39F0               	andlw	240
  1337  01CA  1D03               	btfss	3,2
  1338  01CB  0008               	return
  1339  01CC  0827               	movf	control_transfer@y,w
  1340  01CD  00F2               	movwf	??_control_transfer
  1341  01CE  3003               	movlw	3
  1342  01CF                     u2355:	
  1343  01CF  35F2               	lslf	??_control_transfer,f
  1344  01D0  3EFF               	addlw	-1
  1345  01D1  1D03               	skipz
  1346  01D2  29CF               	goto	u2355
  1347  01D3  3572               	lslf	??_control_transfer,w
  1348  01D4  0428               	iorwf	control_transfer@x,w
  1349  01D5  00F3               	movwf	??_control_transfer+1
  1350  01D6  0873               	movf	??_control_transfer+1,w
  1351  01D7  00A3               	movwf	control_transfer@random_number
  1352  01D8  0823               	movf	control_transfer@random_number,w
  1353  01D9  00F2               	movwf	??_control_transfer
  1354  01DA  0872               	movf	??_control_transfer,w
  1355  01DB  07A4               	addwf	control_transfer@checksum,f
  1356                           
  1357                           ;main.c: 75: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1358  01DC  01A5               	clrf	control_transfer@i
  1359  01DD  01A6               	clrf	control_transfer@i+1
  1360  01DE                     l87:	
  1361  01DE  1A91               	btfsc	17,5	;volatile
  1362  01DF  29F1               	goto	l1995
  1363  01E0  3085               	movlw	133
  1364  01E1  00F2               	movwf	??_control_transfer
  1365  01E2                     u2917:	
  1366  01E2  0BF2               	decfsz	??_control_transfer,f
  1367  01E3  29E2               	goto	u2917
  1368  01E4  3001               	movlw	1
  1369  01E5  0020               	movlb	0	; select bank0
  1370  01E6  07A5               	addwf	control_transfer@i,f
  1371  01E7  3000               	movlw	0
  1372  01E8  3DA6               	addwfc	control_transfer@i+1,f
  1373  01E9  3003               	movlw	3
  1374  01EA  0226               	subwf	control_transfer@i+1,w
  1375  01EB  30E8               	movlw	232
  1376  01EC  1903               	skipnz
  1377  01ED  0225               	subwf	control_transfer@i,w
  1378  01EE  1803               	btfsc	3,0
  1379  01EF  0008               	return
  1380  01F0  29DE               	goto	l87
  1381  01F1                     l1995:	
  1382  01F1  0023               	movlb	3	; select bank3
  1383  01F2  0819               	movf	25,w	;volatile
  1384  01F3  00F2               	movwf	??_control_transfer
  1385  01F4  0872               	movf	??_control_transfer,w
  1386  01F5  0020               	movlb	0	; select bank0
  1387  01F6  00A8               	movwf	control_transfer@x
  1388  01F7  01A5               	clrf	control_transfer@i
  1389  01F8  01A6               	clrf	control_transfer@i+1
  1390  01F9                     l91:	
  1391  01F9  1A91               	btfsc	17,5	;volatile
  1392  01FA  2A0C               	goto	l2003
  1393  01FB  3085               	movlw	133
  1394  01FC  00F2               	movwf	??_control_transfer
  1395  01FD                     u2927:	
  1396  01FD  0BF2               	decfsz	??_control_transfer,f
  1397  01FE  29FD               	goto	u2927
  1398  01FF  3001               	movlw	1
  1399  0200  0020               	movlb	0	; select bank0
  1400  0201  07A5               	addwf	control_transfer@i,f
  1401  0202  3000               	movlw	0
  1402  0203  3DA6               	addwfc	control_transfer@i+1,f
  1403  0204  3003               	movlw	3
  1404  0205  0226               	subwf	control_transfer@i+1,w
  1405  0206  30E8               	movlw	232
  1406  0207  1903               	skipnz
  1407  0208  0225               	subwf	control_transfer@i,w
  1408  0209  1803               	btfsc	3,0
  1409  020A  0008               	return
  1410  020B  29F9               	goto	l91
  1411  020C                     l2003:	
  1412  020C  0023               	movlb	3	; select bank3
  1413  020D  0819               	movf	25,w	;volatile
  1414  020E  00F2               	movwf	??_control_transfer
  1415  020F  0872               	movf	??_control_transfer,w
  1416  0210  0020               	movlb	0	; select bank0
  1417  0211  00A7               	movwf	control_transfer@y
  1418  0212  0828               	movf	control_transfer@x,w
  1419  0213  39F0               	andlw	240
  1420  0214  1D03               	btfss	3,2
  1421  0215  0008               	return
  1422  0216  0827               	movf	control_transfer@y,w
  1423  0217  39F0               	andlw	240
  1424  0218  1D03               	btfss	3,2
  1425  0219  0008               	return
  1426  021A  0827               	movf	control_transfer@y,w
  1427  021B  00F2               	movwf	??_control_transfer
  1428  021C  3003               	movlw	3
  1429  021D                     u2425:	
  1430  021D  35F2               	lslf	??_control_transfer,f
  1431  021E  3EFF               	addlw	-1
  1432  021F  1D03               	skipz
  1433  0220  2A1D               	goto	u2425
  1434  0221  3572               	lslf	??_control_transfer,w
  1435  0222  0428               	iorwf	control_transfer@x,w
  1436  0223  00F3               	movwf	??_control_transfer+1
  1437  0224  0873               	movf	??_control_transfer+1,w
  1438  0225  00A0               	movwf	control_transfer@id
  1439  0226  0820               	movf	control_transfer@id,w
  1440  0227  00F2               	movwf	??_control_transfer
  1441  0228  0872               	movf	??_control_transfer,w
  1442  0229  07A4               	addwf	control_transfer@checksum,f
  1443                           
  1444                           ;main.c: 76: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1445  022A  01A5               	clrf	control_transfer@i
  1446  022B  01A6               	clrf	control_transfer@i+1
  1447  022C                     l98:	
  1448  022C  1A91               	btfsc	17,5	;volatile
  1449  022D  2A3F               	goto	l2017
  1450  022E  3085               	movlw	133
  1451  022F  00F2               	movwf	??_control_transfer
  1452  0230                     u2937:	
  1453  0230  0BF2               	decfsz	??_control_transfer,f
  1454  0231  2A30               	goto	u2937
  1455  0232  3001               	movlw	1
  1456  0233  0020               	movlb	0	; select bank0
  1457  0234  07A5               	addwf	control_transfer@i,f
  1458  0235  3000               	movlw	0
  1459  0236  3DA6               	addwfc	control_transfer@i+1,f
  1460  0237  3003               	movlw	3
  1461  0238  0226               	subwf	control_transfer@i+1,w
  1462  0239  30E8               	movlw	232
  1463  023A  1903               	skipnz
  1464  023B  0225               	subwf	control_transfer@i,w
  1465  023C  1803               	btfsc	3,0
  1466  023D  0008               	return
  1467  023E  2A2C               	goto	l98
  1468  023F                     l2017:	
  1469  023F  0023               	movlb	3	; select bank3
  1470  0240  0819               	movf	25,w	;volatile
  1471  0241  00F2               	movwf	??_control_transfer
  1472  0242  0872               	movf	??_control_transfer,w
  1473  0243  0020               	movlb	0	; select bank0
  1474  0244  00A8               	movwf	control_transfer@x
  1475  0245  01A5               	clrf	control_transfer@i
  1476  0246  01A6               	clrf	control_transfer@i+1
  1477  0247                     l102:	
  1478  0247  1A91               	btfsc	17,5	;volatile
  1479  0248  2A5A               	goto	l2025
  1480  0249  3085               	movlw	133
  1481  024A  00F2               	movwf	??_control_transfer
  1482  024B                     u2947:	
  1483  024B  0BF2               	decfsz	??_control_transfer,f
  1484  024C  2A4B               	goto	u2947
  1485  024D  3001               	movlw	1
  1486  024E  0020               	movlb	0	; select bank0
  1487  024F  07A5               	addwf	control_transfer@i,f
  1488  0250  3000               	movlw	0
  1489  0251  3DA6               	addwfc	control_transfer@i+1,f
  1490  0252  3003               	movlw	3
  1491  0253  0226               	subwf	control_transfer@i+1,w
  1492  0254  30E8               	movlw	232
  1493  0255  1903               	skipnz
  1494  0256  0225               	subwf	control_transfer@i,w
  1495  0257  1803               	btfsc	3,0
  1496  0258  0008               	return
  1497  0259  2A47               	goto	l102
  1498  025A                     l2025:	
  1499  025A  0023               	movlb	3	; select bank3
  1500  025B  0819               	movf	25,w	;volatile
  1501  025C  00F2               	movwf	??_control_transfer
  1502  025D  0872               	movf	??_control_transfer,w
  1503  025E  0020               	movlb	0	; select bank0
  1504  025F  00A7               	movwf	control_transfer@y
  1505  0260  0828               	movf	control_transfer@x,w
  1506  0261  39F0               	andlw	240
  1507  0262  1D03               	btfss	3,2
  1508  0263  0008               	return
  1509  0264  0827               	movf	control_transfer@y,w
  1510  0265  39F0               	andlw	240
  1511  0266  1D03               	btfss	3,2
  1512  0267  0008               	return
  1513  0268  0827               	movf	control_transfer@y,w
  1514  0269  00F2               	movwf	??_control_transfer
  1515  026A  3003               	movlw	3
  1516  026B                     u2495:	
  1517  026B  35F2               	lslf	??_control_transfer,f
  1518  026C  3EFF               	addlw	-1
  1519  026D  1D03               	skipz
  1520  026E  2A6B               	goto	u2495
  1521  026F  3572               	lslf	??_control_transfer,w
  1522  0270  0428               	iorwf	control_transfer@x,w
  1523  0271  00F3               	movwf	??_control_transfer+1
  1524  0272  0873               	movf	??_control_transfer+1,w
  1525  0273  00A8               	movwf	control_transfer@x
  1526  0274  0828               	movf	control_transfer@x,w
  1527  0275  00F2               	movwf	??_control_transfer
  1528  0276  0872               	movf	??_control_transfer,w
  1529  0277  07A4               	addwf	control_transfer@checksum,f
  1530  0278  0824               	movf	control_transfer@checksum,w
  1531  0279  1D03               	skipz
  1532  027A  0008               	return
  1533  027B  01A5               	clrf	control_transfer@i
  1534  027C  01A6               	clrf	control_transfer@i+1
  1535  027D                     l110:	
  1536  027D  1A91               	btfsc	17,5	;volatile
  1537  027E  2A90               	goto	l2043
  1538  027F  3085               	movlw	133
  1539  0280  00F2               	movwf	??_control_transfer
  1540  0281                     u2957:	
  1541  0281  0BF2               	decfsz	??_control_transfer,f
  1542  0282  2A81               	goto	u2957
  1543  0283  3001               	movlw	1
  1544  0284  0020               	movlb	0	; select bank0
  1545  0285  07A5               	addwf	control_transfer@i,f
  1546  0286  3000               	movlw	0
  1547  0287  3DA6               	addwfc	control_transfer@i+1,f
  1548  0288  3003               	movlw	3
  1549  0289  0226               	subwf	control_transfer@i+1,w
  1550  028A  30E8               	movlw	232
  1551  028B  1903               	skipnz
  1552  028C  0225               	subwf	control_transfer@i,w
  1553  028D  1803               	btfsc	3,0
  1554  028E  0008               	return
  1555  028F  2A7D               	goto	l110
  1556  0290                     l2043:	
  1557  0290  0023               	movlb	3	; select bank3
  1558  0291  0819               	movf	25,w	;volatile
  1559  0292  00F2               	movwf	??_control_transfer
  1560  0293  0872               	movf	??_control_transfer,w
  1561  0294  0020               	movlb	0	; select bank0
  1562  0295  00A8               	movwf	control_transfer@x
  1563  0296  0828               	movf	control_transfer@x,w
  1564  0297  3A11               	xorlw	17
  1565  0298  1D03               	btfss	3,2
  1566  0299  0008               	return
  1567                           
  1568                           ;main.c: 77: if(random_number != my_random_number) goto err;
  1569  029A  0823               	movf	control_transfer@random_number,w
  1570  029B  0638               	xorwf	_my_random_number,w
  1571  029C  1D03               	btfss	3,2
  1572  029D  0008               	return
  1573                           
  1574                           ;main.c: 78: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1575  029E  3010               	movlw	16
  1576  029F  25CB               	fcall	_Send_Byte
  1577  02A0  0020               	movlb	0	; select bank0
  1578  02A1  01A4               	clrf	control_transfer@checksum
  1579  02A2  087C               	movf	_my_id,w
  1580  02A3  390F               	andlw	15
  1581  02A4  00F2               	movwf	??_control_transfer
  1582  02A5  0872               	movf	??_control_transfer,w
  1583  02A6  00A8               	movwf	control_transfer@x
  1584  02A7  087C               	movf	_my_id,w
  1585  02A8  00F2               	movwf	??_control_transfer
  1586  02A9  3004               	movlw	4
  1587  02AA                     u2555:	
  1588  02AA  36F2               	lsrf	??_control_transfer,f
  1589  02AB  0B89               	decfsz	9,f
  1590  02AC  2AAA               	goto	u2555
  1591  02AD  0872               	movf	??_control_transfer,w
  1592  02AE  00F3               	movwf	??_control_transfer+1
  1593  02AF  0873               	movf	??_control_transfer+1,w
  1594  02B0  00A7               	movwf	control_transfer@y
  1595  02B1  0828               	movf	control_transfer@x,w
  1596  02B2  25CB               	fcall	_Send_Byte
  1597  02B3  0020               	movlb	0	; select bank0
  1598  02B4  0827               	movf	control_transfer@y,w
  1599  02B5  25CB               	fcall	_Send_Byte
  1600  02B6  087C               	movf	_my_id,w
  1601  02B7  0020               	movlb	0	; select bank0
  1602  02B8  02A4               	subwf	control_transfer@checksum,f
  1603                           
  1604                           ;main.c: 79: x = 0x00 & 0x0F; y = 0x00 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          0;
  1605  02B9  01A8               	clrf	control_transfer@x
  1606  02BA  01A7               	clrf	control_transfer@y
  1607  02BB  0828               	movf	control_transfer@x,w
  1608  02BC  25CB               	fcall	_Send_Byte
  1609  02BD  0020               	movlb	0	; select bank0
  1610  02BE  0827               	movf	control_transfer@y,w
  1611  02BF  25CB               	fcall	_Send_Byte
  1612                           
  1613                           ;main.c: 80: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1614  02C0  0020               	movlb	0	; select bank0
  1615  02C1  0824               	movf	control_transfer@checksum,w
  1616  02C2  390F               	andlw	15
  1617  02C3  00F2               	movwf	??_control_transfer
  1618  02C4  0872               	movf	??_control_transfer,w
  1619  02C5  00A8               	movwf	control_transfer@x
  1620  02C6  0824               	movf	control_transfer@checksum,w
  1621  02C7  00F2               	movwf	??_control_transfer
  1622  02C8  3004               	movlw	4
  1623  02C9                     u2565:	
  1624  02C9  36F2               	lsrf	??_control_transfer,f
  1625  02CA  0B89               	decfsz	9,f
  1626  02CB  2AC9               	goto	u2565
  1627  02CC  0872               	movf	??_control_transfer,w
  1628  02CD  00F3               	movwf	??_control_transfer+1
  1629  02CE  0873               	movf	??_control_transfer+1,w
  1630  02CF  00A7               	movwf	control_transfer@y
  1631  02D0  0828               	movf	control_transfer@x,w
  1632  02D1  25CB               	fcall	_Send_Byte
  1633  02D2  0020               	movlb	0	; select bank0
  1634  02D3  0827               	movf	control_transfer@y,w
  1635  02D4  25CB               	fcall	_Send_Byte
  1636  02D5  0020               	movlb	0	; select bank0
  1637  02D6  0824               	movf	control_transfer@checksum,w
  1638  02D7  02A4               	subwf	control_transfer@checksum,f
  1639  02D8  3011               	movlw	17
  1640  02D9  25CB               	fcall	_Send_Byte
  1641                           
  1642                           ;main.c: 83: break;
  1643  02DA  0008               	return
  1644  02DB                     l2085:	
  1645                           ;main.c: 84: case 0x08:
  1646                           
  1647                           
  1648                           ;main.c: 85: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1649  02DB  0020               	movlb	0	; select bank0
  1650  02DC  01A5               	clrf	control_transfer@i
  1651  02DD  01A6               	clrf	control_transfer@i+1
  1652  02DE                     l117:	
  1653  02DE  1A91               	btfsc	17,5	;volatile
  1654  02DF  2AF1               	goto	l2091
  1655  02E0  3085               	movlw	133
  1656  02E1  00F2               	movwf	??_control_transfer
  1657  02E2                     u2967:	
  1658  02E2  0BF2               	decfsz	??_control_transfer,f
  1659  02E3  2AE2               	goto	u2967
  1660  02E4  3001               	movlw	1
  1661  02E5  0020               	movlb	0	; select bank0
  1662  02E6  07A5               	addwf	control_transfer@i,f
  1663  02E7  3000               	movlw	0
  1664  02E8  3DA6               	addwfc	control_transfer@i+1,f
  1665  02E9  3003               	movlw	3
  1666  02EA  0226               	subwf	control_transfer@i+1,w
  1667  02EB  30E8               	movlw	232
  1668  02EC  1903               	skipnz
  1669  02ED  0225               	subwf	control_transfer@i,w
  1670  02EE  1803               	btfsc	3,0
  1671  02EF  0008               	return
  1672  02F0  2ADE               	goto	l117
  1673  02F1                     l2091:	
  1674  02F1  0023               	movlb	3	; select bank3
  1675  02F2  0819               	movf	25,w	;volatile
  1676  02F3  00F2               	movwf	??_control_transfer
  1677  02F4  0872               	movf	??_control_transfer,w
  1678  02F5  0020               	movlb	0	; select bank0
  1679  02F6  00A8               	movwf	control_transfer@x
  1680  02F7  01A5               	clrf	control_transfer@i
  1681  02F8  01A6               	clrf	control_transfer@i+1
  1682  02F9                     l121:	
  1683  02F9  1A91               	btfsc	17,5	;volatile
  1684  02FA  2B0C               	goto	l2099
  1685  02FB  3085               	movlw	133
  1686  02FC  00F2               	movwf	??_control_transfer
  1687  02FD                     u2977:	
  1688  02FD  0BF2               	decfsz	??_control_transfer,f
  1689  02FE  2AFD               	goto	u2977
  1690  02FF  3001               	movlw	1
  1691  0300  0020               	movlb	0	; select bank0
  1692  0301  07A5               	addwf	control_transfer@i,f
  1693  0302  3000               	movlw	0
  1694  0303  3DA6               	addwfc	control_transfer@i+1,f
  1695  0304  3003               	movlw	3
  1696  0305  0226               	subwf	control_transfer@i+1,w
  1697  0306  30E8               	movlw	232
  1698  0307  1903               	skipnz
  1699  0308  0225               	subwf	control_transfer@i,w
  1700  0309  1803               	btfsc	3,0
  1701  030A  0008               	return
  1702  030B  2AF9               	goto	l121
  1703  030C                     l2099:	
  1704  030C  0023               	movlb	3	; select bank3
  1705  030D  0819               	movf	25,w	;volatile
  1706  030E  00F2               	movwf	??_control_transfer
  1707  030F  0872               	movf	??_control_transfer,w
  1708  0310  0020               	movlb	0	; select bank0
  1709  0311  00A7               	movwf	control_transfer@y
  1710  0312  0828               	movf	control_transfer@x,w
  1711  0313  39F0               	andlw	240
  1712  0314  1D03               	btfss	3,2
  1713  0315  0008               	return
  1714  0316  0827               	movf	control_transfer@y,w
  1715  0317  39F0               	andlw	240
  1716  0318  1D03               	btfss	3,2
  1717  0319  0008               	return
  1718  031A  0827               	movf	control_transfer@y,w
  1719  031B  00F2               	movwf	??_control_transfer
  1720  031C  3003               	movlw	3
  1721  031D                     u2635:	
  1722  031D  35F2               	lslf	??_control_transfer,f
  1723  031E  3EFF               	addlw	-1
  1724  031F  1D03               	skipz
  1725  0320  2B1D               	goto	u2635
  1726  0321  3572               	lslf	??_control_transfer,w
  1727  0322  0428               	iorwf	control_transfer@x,w
  1728  0323  00F3               	movwf	??_control_transfer+1
  1729  0324  0873               	movf	??_control_transfer+1,w
  1730  0325  00A2               	movwf	control_transfer@power_level
  1731  0326  0822               	movf	control_transfer@power_level,w
  1732  0327  00F2               	movwf	??_control_transfer
  1733  0328  0872               	movf	??_control_transfer,w
  1734  0329  07A4               	addwf	control_transfer@checksum,f
  1735                           
  1736                           ;main.c: 86: i=0; while(!PIR1bits.RCIF) {_delay((unsigned long)((100)*(16000000/4000000.
      +                          0))); i++; if(i >= 1000) goto err;} x = (RCREG); i=0; while(!PIR1bits.RCIF) {_delay((uns
      +                          igned long)((100)*(16000000/4000000.0))); i++; if(i >= 1000) goto err;} y = (RCREG); if
  1737  032A  01A5               	clrf	control_transfer@i
  1738  032B  01A6               	clrf	control_transfer@i+1
  1739  032C                     l128:	
  1740  032C  1A91               	btfsc	17,5	;volatile
  1741  032D  2B3F               	goto	l2113
  1742  032E  3085               	movlw	133
  1743  032F  00F2               	movwf	??_control_transfer
  1744  0330                     u2987:	
  1745  0330  0BF2               	decfsz	??_control_transfer,f
  1746  0331  2B30               	goto	u2987
  1747  0332  3001               	movlw	1
  1748  0333  0020               	movlb	0	; select bank0
  1749  0334  07A5               	addwf	control_transfer@i,f
  1750  0335  3000               	movlw	0
  1751  0336  3DA6               	addwfc	control_transfer@i+1,f
  1752  0337  3003               	movlw	3
  1753  0338  0226               	subwf	control_transfer@i+1,w
  1754  0339  30E8               	movlw	232
  1755  033A  1903               	skipnz
  1756  033B  0225               	subwf	control_transfer@i,w
  1757  033C  1803               	btfsc	3,0
  1758  033D  0008               	return
  1759  033E  2B2C               	goto	l128
  1760  033F                     l2113:	
  1761  033F  0023               	movlb	3	; select bank3
  1762  0340  0819               	movf	25,w	;volatile
  1763  0341  00F2               	movwf	??_control_transfer
  1764  0342  0872               	movf	??_control_transfer,w
  1765  0343  0020               	movlb	0	; select bank0
  1766  0344  00A8               	movwf	control_transfer@x
  1767  0345  01A5               	clrf	control_transfer@i
  1768  0346  01A6               	clrf	control_transfer@i+1
  1769  0347                     l132:	
  1770  0347  1A91               	btfsc	17,5	;volatile
  1771  0348  2B5A               	goto	l2121
  1772  0349  3085               	movlw	133
  1773  034A  00F2               	movwf	??_control_transfer
  1774  034B                     u2997:	
  1775  034B  0BF2               	decfsz	??_control_transfer,f
  1776  034C  2B4B               	goto	u2997
  1777  034D  3001               	movlw	1
  1778  034E  0020               	movlb	0	; select bank0
  1779  034F  07A5               	addwf	control_transfer@i,f
  1780  0350  3000               	movlw	0
  1781  0351  3DA6               	addwfc	control_transfer@i+1,f
  1782  0352  3003               	movlw	3
  1783  0353  0226               	subwf	control_transfer@i+1,w
  1784  0354  30E8               	movlw	232
  1785  0355  1903               	skipnz
  1786  0356  0225               	subwf	control_transfer@i,w
  1787  0357  1803               	btfsc	3,0
  1788  0358  0008               	return
  1789  0359  2B47               	goto	l132
  1790  035A                     l2121:	
  1791  035A  0023               	movlb	3	; select bank3
  1792  035B  0819               	movf	25,w	;volatile
  1793  035C  00F2               	movwf	??_control_transfer
  1794  035D  0872               	movf	??_control_transfer,w
  1795  035E  0020               	movlb	0	; select bank0
  1796  035F  00A7               	movwf	control_transfer@y
  1797  0360  0828               	movf	control_transfer@x,w
  1798  0361  39F0               	andlw	240
  1799  0362  1D03               	btfss	3,2
  1800  0363  0008               	return
  1801  0364  0827               	movf	control_transfer@y,w
  1802  0365  39F0               	andlw	240
  1803  0366  1D03               	btfss	3,2
  1804  0367  0008               	return
  1805  0368  0827               	movf	control_transfer@y,w
  1806  0369  00F2               	movwf	??_control_transfer
  1807  036A  3003               	movlw	3
  1808  036B                     u2705:	
  1809  036B  35F2               	lslf	??_control_transfer,f
  1810  036C  3EFF               	addlw	-1
  1811  036D  1D03               	skipz
  1812  036E  2B6B               	goto	u2705
  1813  036F  3572               	lslf	??_control_transfer,w
  1814  0370  0428               	iorwf	control_transfer@x,w
  1815  0371  00F3               	movwf	??_control_transfer+1
  1816  0372  0873               	movf	??_control_transfer+1,w
  1817  0373  00A8               	movwf	control_transfer@x
  1818  0374  0828               	movf	control_transfer@x,w
  1819  0375  00F2               	movwf	??_control_transfer
  1820  0376  0872               	movf	??_control_transfer,w
  1821  0377  07A4               	addwf	control_transfer@checksum,f
  1822  0378  0824               	movf	control_transfer@checksum,w
  1823  0379  1D03               	skipz
  1824  037A  0008               	return
  1825  037B  01A5               	clrf	control_transfer@i
  1826  037C  01A6               	clrf	control_transfer@i+1
  1827  037D                     l140:	
  1828  037D  1A91               	btfsc	17,5	;volatile
  1829  037E  2B90               	goto	l2139
  1830  037F  3085               	movlw	133
  1831  0380  00F2               	movwf	??_control_transfer
  1832  0381                     u3007:	
  1833  0381  0BF2               	decfsz	??_control_transfer,f
  1834  0382  2B81               	goto	u3007
  1835  0383  3001               	movlw	1
  1836  0384  0020               	movlb	0	; select bank0
  1837  0385  07A5               	addwf	control_transfer@i,f
  1838  0386  3000               	movlw	0
  1839  0387  3DA6               	addwfc	control_transfer@i+1,f
  1840  0388  3003               	movlw	3
  1841  0389  0226               	subwf	control_transfer@i+1,w
  1842  038A  30E8               	movlw	232
  1843  038B  1903               	skipnz
  1844  038C  0225               	subwf	control_transfer@i,w
  1845  038D  1803               	btfsc	3,0
  1846  038E  0008               	return
  1847  038F  2B7D               	goto	l140
  1848  0390                     l2139:	
  1849  0390  0023               	movlb	3	; select bank3
  1850  0391  0819               	movf	25,w	;volatile
  1851  0392  00F2               	movwf	??_control_transfer
  1852  0393  0872               	movf	??_control_transfer,w
  1853  0394  0020               	movlb	0	; select bank0
  1854  0395  00A8               	movwf	control_transfer@x
  1855  0396  0828               	movf	control_transfer@x,w
  1856  0397  3A11               	xorlw	17
  1857  0398  1D03               	btfss	3,2
  1858  0399  0008               	return
  1859                           
  1860                           ;main.c: 87: my_power_level = power_level;
  1861  039A  0822               	movf	control_transfer@power_level,w
  1862  039B  00F2               	movwf	??_control_transfer
  1863  039C  0872               	movf	??_control_transfer,w
  1864  039D  00B7               	movwf	_my_power_level
  1865                           
  1866                           ;main.c: 88: Send_Byte(0x10); checksum = 0; x = my_id & 0x0F; y = my_id >> 4; Send_Byte(
      +                          x); Send_Byte(y); checksum -= my_id;
  1867  039E  3010               	movlw	16
  1868  039F  25CB               	fcall	_Send_Byte
  1869  03A0  0020               	movlb	0	; select bank0
  1870  03A1  01A4               	clrf	control_transfer@checksum
  1871  03A2  087C               	movf	_my_id,w
  1872  03A3  390F               	andlw	15
  1873  03A4  00F2               	movwf	??_control_transfer
  1874  03A5  0872               	movf	??_control_transfer,w
  1875  03A6  00A8               	movwf	control_transfer@x
  1876  03A7  087C               	movf	_my_id,w
  1877  03A8  00F2               	movwf	??_control_transfer
  1878  03A9  3004               	movlw	4
  1879  03AA                     u2755:	
  1880  03AA  36F2               	lsrf	??_control_transfer,f
  1881  03AB  0B89               	decfsz	9,f
  1882  03AC  2BAA               	goto	u2755
  1883  03AD  0872               	movf	??_control_transfer,w
  1884  03AE  00F3               	movwf	??_control_transfer+1
  1885  03AF  0873               	movf	??_control_transfer+1,w
  1886  03B0  00A7               	movwf	control_transfer@y
  1887  03B1  0828               	movf	control_transfer@x,w
  1888  03B2  25CB               	fcall	_Send_Byte
  1889  03B3  0020               	movlb	0	; select bank0
  1890  03B4  0827               	movf	control_transfer@y,w
  1891  03B5  25CB               	fcall	_Send_Byte
  1892  03B6  087C               	movf	_my_id,w
  1893  03B7  0020               	movlb	0	; select bank0
  1894  03B8  02A4               	subwf	control_transfer@checksum,f
  1895                           
  1896                           ;main.c: 89: x = 0x00 & 0x0F; y = 0x00 >> 4; Send_Byte(x); Send_Byte(y); checksum -= 0x0
      +                          0;
  1897  03B9  01A8               	clrf	control_transfer@x
  1898  03BA  01A7               	clrf	control_transfer@y
  1899  03BB  0828               	movf	control_transfer@x,w
  1900  03BC  25CB               	fcall	_Send_Byte
  1901  03BD  0020               	movlb	0	; select bank0
  1902  03BE  0827               	movf	control_transfer@y,w
  1903  03BF  25CB               	fcall	_Send_Byte
  1904                           
  1905                           ;main.c: 90: x = checksum & 0x0F; y = checksum >> 4; Send_Byte(x); Send_Byte(y); checksu
      +                          m -= checksum; Send_Byte(0x11);
  1906  03C0  0020               	movlb	0	; select bank0
  1907  03C1  0824               	movf	control_transfer@checksum,w
  1908  03C2  390F               	andlw	15
  1909  03C3  00F2               	movwf	??_control_transfer
  1910  03C4  0872               	movf	??_control_transfer,w
  1911  03C5  00A8               	movwf	control_transfer@x
  1912  03C6  0824               	movf	control_transfer@checksum,w
  1913  03C7  00F2               	movwf	??_control_transfer
  1914  03C8  3004               	movlw	4
  1915  03C9                     u2765:	
  1916  03C9  36F2               	lsrf	??_control_transfer,f
  1917  03CA  0B89               	decfsz	9,f
  1918  03CB  2BC9               	goto	u2765
  1919  03CC  0872               	movf	??_control_transfer,w
  1920  03CD  00F3               	movwf	??_control_transfer+1
  1921  03CE  0873               	movf	??_control_transfer+1,w
  1922  03CF  00A7               	movwf	control_transfer@y
  1923  03D0  0828               	movf	control_transfer@x,w
  1924  03D1  25CB               	fcall	_Send_Byte
  1925  03D2  0020               	movlb	0	; select bank0
  1926  03D3  0827               	movf	control_transfer@y,w
  1927  03D4  25CB               	fcall	_Send_Byte
  1928  03D5  0020               	movlb	0	; select bank0
  1929  03D6  0824               	movf	control_transfer@checksum,w
  1930  03D7  02A4               	subwf	control_transfer@checksum,f
  1931  03D8  3011               	movlw	17
  1932  03D9  25CB               	fcall	_Send_Byte
  1933                           
  1934                           ;main.c: 95: }
  1935                           
  1936                           ;main.c: 94: goto err;
  1937                           
  1938                           ;main.c: 93: default:
  1939                           
  1940                           ;main.c: 91: break;
  1941  03DA  0008               	return
  1942  03DB                     l2177:	
  1943  03DB  0020               	movlb	0	; select bank0
  1944  03DC  0821               	movf	control_transfer@cmd,w
  1945                           
  1946                           ; Switch size 1, requested type "space"
  1947                           ; Number of cases is 3, Range of values is 1 to 8
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte           10     6 (average)
  1951                           ; direct_byte           25     9 (fixed)
  1952                           ; jumptable            263     9 (fixed)
  1953                           ;	Chosen strategy is simple_byte
  1954  03DD  3A01               	xorlw	1	; case 1
  1955  03DE  1903               	skipnz
  1956  03DF  28C4               	goto	l1885
  1957  03E0  3A02               	xorlw	2	; case 3
  1958  03E1  1903               	skipnz
  1959  03E2  298D               	goto	l1967
  1960  03E3  3A0B               	xorlw	11	; case 8
  1961  03E4  1903               	skipnz
  1962  03E5  2ADB               	goto	l2085
  1963  03E6  2BE8               	goto	l146
  1964  03E7  0008               	return
  1965  03E8                     l146:	
  1966                           ;main.c: 97: return;
  1967                           
  1968                           ;main.c: 96: err:
  1969                           
  1970  03E8  0008               	return
  1971  03E9                     __end_of_control_transfer:	
  1972                           
  1973                           	psect	text2
  1974  05A2                     __ptext2:	
  1975 ;; *************** function _Setup *****************
  1976 ;; Defined at:
  1977 ;;		line 26 in file "user.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;		None               void
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1991 ;;      Params:         0       0       0       0
  1992 ;;      Locals:         0       0       0       0
  1993 ;;      Temps:          1       0       0       0
  1994 ;;      Totals:         1       0       0       0
  1995 ;;Total ram usage:        1 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _Setup
  2007  05A2                     _Setup:	
  2008                           
  2009                           ;user.c: 28: OSCCON = 0b01111010;
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in _Setup: [wreg+status,2+status,0]
  2013  05A2  307A               	movlw	122
  2014  05A3  0021               	movlb	1	; select bank1
  2015  05A4  0099               	movwf	25	;volatile
  2016                           
  2017                           ;user.c: 30: ANSELA = 0x00;
  2018  05A5  0023               	movlb	3	; select bank3
  2019  05A6  018C               	clrf	12	;volatile
  2020                           
  2021                           ;user.c: 31: TRISAbits.TRISA5 = 0;
  2022  05A7  0021               	movlb	1	; select bank1
  2023  05A8  128C               	bcf	12,5	;volatile
  2024                           
  2025                           ;user.c: 32: TRISAbits.TRISA2 = 0;
  2026  05A9  110C               	bcf	12,2	;volatile
  2027                           
  2028                           ;user.c: 33: TRISAbits.TRISA0 = 0;
  2029  05AA  100C               	bcf	12,0	;volatile
  2030                           
  2031                           ;user.c: 34: PORTAbits.RA5 = 1;
  2032  05AB  0020               	movlb	0	; select bank0
  2033  05AC  168C               	bsf	12,5	;volatile
  2034                           
  2035                           ;user.c: 38: ADCON1 |= 0b00110000;
  2036  05AD  3030               	movlw	48
  2037  05AE  00F1               	movwf	??_Setup
  2038  05AF  0871               	movf	??_Setup,w
  2039  05B0  0021               	movlb	1	; select bank1
  2040  05B1  049E               	iorwf	30,f	;volatile
  2041                           
  2042                           ;user.c: 41: SPBRGL = 103;
  2043  05B2  3067               	movlw	103
  2044  05B3  0023               	movlb	3	; select bank3
  2045  05B4  009B               	movwf	27	;volatile
  2046                           
  2047                           ;user.c: 42: TXSTAbits.SYNC = 0;
  2048  05B5  121E               	bcf	30,4	;volatile
  2049                           
  2050                           ;user.c: 43: RCSTAbits.SPEN = 1;
  2051  05B6  179D               	bsf	29,7	;volatile
  2052                           
  2053                           ;user.c: 44: BAUDCONbits.SCKP = 1;
  2054  05B7  161F               	bsf	31,4	;volatile
  2055                           
  2056                           ;user.c: 45: TXSTAbits.TXEN = 1;
  2057  05B8  169E               	bsf	30,5	;volatile
  2058                           
  2059                           ;user.c: 48: RCSTAbits.CREN = 1;
  2060  05B9  161D               	bsf	29,4	;volatile
  2061  05BA  0008               	return
  2062  05BB                     __end_of_Setup:	
  2063                           
  2064                           	psect	text3
  2065  0500                     __ptext3:	
  2066 ;; *************** function _Save *****************
  2067 ;; Defined at:
  2068 ;;		line 137 in file "user.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  address         2    1[COMMON] unsigned int 
  2071 ;;  ptr             1    3[COMMON] PTR unsigned int 
  2072 ;;		 -> config(8), 
  2073 ;;  data_length     1    4[COMMON] unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  i               1    6[COMMON] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2085 ;;      Params:         4       0       0       0
  2086 ;;      Locals:         1       0       0       0
  2087 ;;      Temps:          1       0       0       0
  2088 ;;      Totals:         6       0       0       0
  2089 ;;Total ram usage:        6 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    1
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _Save
  2101  0500                     _Save:	
  2102                           
  2103                           ;user.c: 139: INTCONbits.GIE = 0;
  2104                           
  2105                           ;incstack = 0
  2106                           ; Regs used in _Save: [wreg+fsr1l+fsr1h+status,2+status,0]
  2107  0500  138B               	bcf	11,7	;volatile
  2108                           
  2109                           ;user.c: 140: PMCON1bits.CFGS = 0;
  2110  0501  0023               	movlb	3	; select bank3
  2111  0502  1315               	bcf	21,6	;volatile
  2112                           
  2113                           ;user.c: 141: PMADR = address;
  2114  0503  0872               	movf	Save@address+1,w
  2115  0504  0192               	clrf	18	;volatile
  2116  0505  0792               	addwf	18,f	;volatile
  2117  0506  0871               	movf	Save@address,w
  2118  0507  0191               	clrf	17	;volatile
  2119  0508  0791               	addwf	17,f	;volatile
  2120                           
  2121                           ;user.c: 142: PMCON1bits.FREE = 1;
  2122  0509  1615               	bsf	21,4	;volatile
  2123                           
  2124                           ;user.c: 143: PMCON1bits.WREN = 1;
  2125  050A  1515               	bsf	21,2	;volatile
  2126                           
  2127                           ;user.c: 144: PMCON2 = 0x55;
  2128  050B  3055               	movlw	85
  2129  050C  0096               	movwf	22	;volatile
  2130                           
  2131                           ;user.c: 145: PMCON2 = 0xAA;
  2132  050D  30AA               	movlw	170
  2133  050E  0096               	movwf	22	;volatile
  2134                           
  2135                           ;user.c: 146: PMCON1bits.WR = 1;
  2136  050F  1495               	bsf	21,1	;volatile
  2137                           
  2138                           ;user.c: 147: __nop();
  2139  0510  0000               	nop
  2140                           
  2141                           ;user.c: 148: __nop();
  2142  0511  0000               	nop
  2143                           
  2144                           ;user.c: 149: PMCON1bits.WREN = 0;
  2145  0512  0023               	movlb	3	; select bank3
  2146  0513  1115               	bcf	21,2	;volatile
  2147                           
  2148                           ;user.c: 151: PMCON1bits.FREE = 0;
  2149  0514  1215               	bcf	21,4	;volatile
  2150                           
  2151                           ;user.c: 152: PMCON1bits.LWLO = 1;
  2152  0515  1695               	bsf	21,5	;volatile
  2153                           
  2154                           ;user.c: 153: PMCON1bits.WREN = 1;
  2155  0516  1515               	bsf	21,2	;volatile
  2156                           
  2157                           ;user.c: 155: for (uint8_t i=0; ; i++){
  2158  0517  01F6               	clrf	Save@i
  2159  0518                     l1751:	
  2160                           
  2161                           ;user.c: 156: PMDAT = *ptr++;
  2162  0518  0873               	movf	Save@ptr,w
  2163  0519  0086               	movwf	6
  2164  051A  0187               	clrf	7
  2165  051B  3F40               	moviw [0]fsr1
  2166  051C  0093               	movwf	19	;volatile
  2167  051D  3F41               	moviw [1]fsr1
  2168  051E  0094               	movwf	20	;volatile
  2169  051F  3002               	movlw	2
  2170  0520  00F5               	movwf	??_Save
  2171  0521  0875               	movf	??_Save,w
  2172  0522  07F3               	addwf	Save@ptr,f
  2173                           
  2174                           ;user.c: 157: if(i == data_length) break;
  2175  0523  0876               	movf	Save@i,w
  2176  0524  0674               	xorwf	Save@data_length,w
  2177  0525  1903               	btfsc	3,2
  2178  0526  2D38               	goto	l284
  2179                           
  2180                           ;user.c: 158: PMCON2 = 0x55;
  2181  0527  3055               	movlw	85
  2182  0528  0096               	movwf	22	;volatile
  2183                           
  2184                           ;user.c: 159: PMCON2 = 0xAA;
  2185  0529  30AA               	movlw	170
  2186  052A  0096               	movwf	22	;volatile
  2187                           
  2188                           ;user.c: 160: PMCON1bits.WR = 1;
  2189  052B  1495               	bsf	21,1	;volatile
  2190                           
  2191                           ;user.c: 161: __nop();
  2192  052C  0000               	nop
  2193                           
  2194                           ;user.c: 162: __nop();
  2195  052D  0000               	nop
  2196                           
  2197                           ;user.c: 163: PMADR ++;
  2198  052E  3001               	movlw	1
  2199  052F  0023               	movlb	3	; select bank3
  2200  0530  0791               	addwf	17,f	;volatile
  2201  0531  3000               	movlw	0
  2202  0532  3D92               	addwfc	18,f	;volatile
  2203  0533  3001               	movlw	1
  2204  0534  00F5               	movwf	??_Save
  2205  0535  0875               	movf	??_Save,w
  2206  0536  07F6               	addwf	Save@i,f
  2207  0537  2D18               	goto	l1751
  2208  0538                     l284:	
  2209                           
  2210                           ;user.c: 164: }
  2211                           ;user.c: 165: PMCON1bits.LWLO = 0;
  2212  0538  1295               	bcf	21,5	;volatile
  2213                           
  2214                           ;user.c: 166: PMCON2 = 0x55;
  2215  0539  3055               	movlw	85
  2216  053A  0096               	movwf	22	;volatile
  2217                           
  2218                           ;user.c: 167: PMCON2 = 0xAA;
  2219  053B  30AA               	movlw	170
  2220  053C  0096               	movwf	22	;volatile
  2221                           
  2222                           ;user.c: 168: PMCON1bits.WR = 1;
  2223  053D  1495               	bsf	21,1	;volatile
  2224                           
  2225                           ;user.c: 169: __nop();
  2226  053E  0000               	nop
  2227                           
  2228                           ;user.c: 170: __nop();
  2229  053F  0000               	nop
  2230                           
  2231                           ;user.c: 171: PMCON1bits.WREN = 0;
  2232  0540  0023               	movlb	3	; select bank3
  2233  0541  1115               	bcf	21,2	;volatile
  2234                           
  2235                           ;user.c: 172: INTCONbits.GIE = 1;
  2236  0542  178B               	bsf	11,7	;volatile
  2237  0543  0008               	return
  2238  0544                     __end_of_Save:	
  2239                           
  2240                           	psect	text4
  2241  057D                     __ptext4:	
  2242 ;; *************** function _Load *****************
  2243 ;; Defined at:
  2244 ;;		line 125 in file "user.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  address         2    1[COMMON] unsigned int 
  2247 ;;  ptr             1    3[COMMON] PTR unsigned int 
  2248 ;;		 -> config(8), 
  2249 ;;  data_length     1    4[COMMON] unsigned char 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  i               1    6[COMMON] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2261 ;;      Params:         4       0       0       0
  2262 ;;      Locals:         1       0       0       0
  2263 ;;      Temps:          1       0       0       0
  2264 ;;      Totals:         6       0       0       0
  2265 ;;Total ram usage:        6 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _Load
  2277  057D                     _Load:	
  2278                           
  2279                           ;user.c: 126: PMCON1bits.CFGS = 0;
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in _Load: [wreg+fsr1l+fsr1h+status,2+status,0]
  2283  057D  0023               	movlb	3	; select bank3
  2284  057E  1315               	bcf	21,6	;volatile
  2285                           
  2286                           ;user.c: 127: PMADR = address;
  2287  057F  0872               	movf	Load@address+1,w
  2288  0580  0192               	clrf	18	;volatile
  2289  0581  0792               	addwf	18,f	;volatile
  2290  0582  0871               	movf	Load@address,w
  2291  0583  0191               	clrf	17	;volatile
  2292  0584  0791               	addwf	17,f	;volatile
  2293                           
  2294                           ;user.c: 128: for (uint8_t i=0; i<data_length; i++){
  2295  0585  01F6               	clrf	Load@i
  2296  0586                     l1795:	
  2297  0586  0874               	movf	Load@data_length,w
  2298  0587  0276               	subwf	Load@i,w
  2299  0588  1803               	btfsc	3,0
  2300  0589  0008               	return
  2301                           
  2302                           ;user.c: 129: PMCON1bits.RD = 1;
  2303  058A  1415               	bsf	21,0	;volatile
  2304                           
  2305                           ;user.c: 130: __nop();
  2306  058B  0000               	nop
  2307                           
  2308                           ;user.c: 131: __nop();
  2309  058C  0000               	nop
  2310                           
  2311                           ;user.c: 132: *ptr++ = PMDAT;
  2312  058D  0873               	movf	Load@ptr,w
  2313  058E  0086               	movwf	6
  2314  058F  0187               	clrf	7
  2315  0590  0023               	movlb	3	; select bank3
  2316  0591  0813               	movf	19,w	;volatile
  2317  0592  3FC0               	movwi [0]fsr1
  2318  0593  0814               	movf	20,w	;volatile
  2319  0594  3FC1               	movwi [1]fsr1
  2320  0595  3002               	movlw	2
  2321  0596  00F5               	movwf	??_Load
  2322  0597  0875               	movf	??_Load,w
  2323  0598  07F3               	addwf	Load@ptr,f
  2324                           
  2325                           ;user.c: 133: PMADR ++;
  2326  0599  3001               	movlw	1
  2327  059A  0791               	addwf	17,f	;volatile
  2328  059B  3000               	movlw	0
  2329  059C  3D92               	addwfc	18,f	;volatile
  2330  059D  3001               	movlw	1
  2331  059E  00F5               	movwf	??_Load
  2332  059F  0875               	movf	??_Load,w
  2333  05A0  07F6               	addwf	Load@i,f
  2334  05A1  2D86               	goto	l1795
  2335  05A2                     __end_of_Load:	
  2336                           
  2337                           	psect	text5
  2338  0544                     __ptext5:	
  2339 ;; *************** function _Get_hit *****************
  2340 ;; Defined at:
  2341 ;;		line 175 in file "user.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  ID              1    wreg     unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  ID              1    0[COMMON] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, pclath, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2355 ;;      Params:         0       0       0       0
  2356 ;;      Locals:         0       0       0       0
  2357 ;;      Temps:          0       0       0       0
  2358 ;;      Totals:         0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    3
  2362 ;; This function calls:
  2363 ;;		_Buzz
  2364 ;;		_LED_off
  2365 ;;		_LED_on
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _Get_hit
  2373  0544                     _Get_hit:	
  2374                           
  2375                           ;user.c: 176: LED_on();
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _Get_hit: [wreg+status,2+status,0+pclath+cstack]
  2379  0544  25ED               	fcall	_LED_on
  2380                           
  2381                           ;user.c: 177: Buzz(4000,100);
  2382  0545  30A0               	movlw	160
  2383  0546  0020               	movlb	0	; select bank0
  2384  0547  00A6               	movwf	Buzz@freq
  2385  0548  300F               	movlw	15
  2386  0549  00A7               	movwf	Buzz@freq+1
  2387  054A  3064               	movlw	100
  2388  054B  00A8               	movwf	Buzz@dur_ms
  2389  054C  3000               	movlw	0
  2390  054D  00A9               	movwf	Buzz@dur_ms+1
  2391  054E  24B8               	fcall	_Buzz
  2392                           
  2393                           ;user.c: 178: LED_off();
  2394  054F  25F0               	fcall	_LED_off
  2395                           
  2396                           ;user.c: 179: Buzz(3500,100);
  2397  0550  30AC               	movlw	172
  2398  0551  0020               	movlb	0	; select bank0
  2399  0552  00A6               	movwf	Buzz@freq
  2400  0553  300D               	movlw	13
  2401  0554  00A7               	movwf	Buzz@freq+1
  2402  0555  3064               	movlw	100
  2403  0556  00A8               	movwf	Buzz@dur_ms
  2404  0557  3000               	movlw	0
  2405  0558  00A9               	movwf	Buzz@dur_ms+1
  2406  0559  24B8               	fcall	_Buzz
  2407                           
  2408                           ;user.c: 180: LED_on();
  2409  055A  25ED               	fcall	_LED_on
  2410                           
  2411                           ;user.c: 181: Buzz(4000,100);
  2412  055B  30A0               	movlw	160
  2413  055C  0020               	movlb	0	; select bank0
  2414  055D  00A6               	movwf	Buzz@freq
  2415  055E  300F               	movlw	15
  2416  055F  00A7               	movwf	Buzz@freq+1
  2417  0560  3064               	movlw	100
  2418  0561  00A8               	movwf	Buzz@dur_ms
  2419  0562  3000               	movlw	0
  2420  0563  00A9               	movwf	Buzz@dur_ms+1
  2421  0564  24B8               	fcall	_Buzz
  2422                           
  2423                           ;user.c: 182: LED_off();
  2424  0565  25F0               	fcall	_LED_off
  2425                           
  2426                           ;user.c: 183: Buzz(4500,100);
  2427  0566  3094               	movlw	148
  2428  0567  0020               	movlb	0	; select bank0
  2429  0568  00A6               	movwf	Buzz@freq
  2430  0569  3011               	movlw	17
  2431  056A  00A7               	movwf	Buzz@freq+1
  2432  056B  3064               	movlw	100
  2433  056C  00A8               	movwf	Buzz@dur_ms
  2434  056D  3000               	movlw	0
  2435  056E  00A9               	movwf	Buzz@dur_ms+1
  2436  056F  24B8               	fcall	_Buzz
  2437                           
  2438                           ;user.c: 184: LED_on();
  2439  0570  25ED               	fcall	_LED_on
  2440                           
  2441                           ;user.c: 185: Buzz(4000,100);
  2442  0571  30A0               	movlw	160
  2443  0572  0020               	movlb	0	; select bank0
  2444  0573  00A6               	movwf	Buzz@freq
  2445  0574  300F               	movlw	15
  2446  0575  00A7               	movwf	Buzz@freq+1
  2447  0576  3064               	movlw	100
  2448  0577  00A8               	movwf	Buzz@dur_ms
  2449  0578  3000               	movlw	0
  2450  0579  00A9               	movwf	Buzz@dur_ms+1
  2451  057A  24B8               	fcall	_Buzz
  2452                           
  2453                           ;user.c: 186: LED_off();
  2454  057B  25F0               	fcall	_LED_off
  2455  057C  0008               	return
  2456  057D                     __end_of_Get_hit:	
  2457                           
  2458                           	psect	text6
  2459  05ED                     __ptext6:	
  2460 ;; *************** function _LED_on *****************
  2461 ;; Defined at:
  2462 ;;		line 62 in file "user.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;		None               void
  2469 ;; Registers used:
  2470 ;;		None
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2476 ;;      Params:         0       0       0       0
  2477 ;;      Locals:         0       0       0       0
  2478 ;;      Temps:          0       0       0       0
  2479 ;;      Totals:         0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_Get_hit
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _LED_on
  2492  05ED                     _LED_on:	
  2493                           
  2494                           ;user.c: 64: PORTAbits.RA5 = 0;
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _LED_on: []
  2498  05ED  0020               	movlb	0	; select bank0
  2499  05EE  128C               	bcf	12,5	;volatile
  2500  05EF  0008               	return
  2501  05F0                     __end_of_LED_on:	
  2502                           
  2503                           	psect	text7
  2504  05F0                     __ptext7:	
  2505 ;; *************** function _LED_off *****************
  2506 ;; Defined at:
  2507 ;;		line 67 in file "user.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;		None               void
  2514 ;; Registers used:
  2515 ;;		None
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2521 ;;      Params:         0       0       0       0
  2522 ;;      Locals:         0       0       0       0
  2523 ;;      Temps:          0       0       0       0
  2524 ;;      Totals:         0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_Get_hit
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _LED_off
  2537  05F0                     _LED_off:	
  2538                           
  2539                           ;user.c: 69: PORTAbits.RA5 = 1;
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in _LED_off: []
  2543  05F0  0020               	movlb	0	; select bank0
  2544  05F1  168C               	bsf	12,5	;volatile
  2545  05F2  0008               	return
  2546  05F3                     __end_of_LED_off:	
  2547                           
  2548                           	psect	text8
  2549  05BB                     __ptext8:	
  2550 ;; *************** function _Fire *****************
  2551 ;; Defined at:
  2552 ;;		line 100 in file "main.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;		None               void
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2566 ;;      Params:         0       0       0       0
  2567 ;;      Locals:         0       0       0       0
  2568 ;;      Temps:          0       0       0       0
  2569 ;;      Totals:         0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    3
  2573 ;; This function calls:
  2574 ;;		_Buzz
  2575 ;;		_Send_Byte
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           
  2582                           ;psect for function _Fire
  2583  05BB                     _Fire:	
  2584                           
  2585                           ;main.c: 101: if (PORTAbits.RA4) {
  2586                           
  2587                           ;incstack = 0
  2588                           ; Regs used in _Fire: [wreg+status,2+status,0+pclath+cstack]
  2589  05BB  0020               	movlb	0	; select bank0
  2590  05BC  1E0C               	btfss	12,4	;volatile
  2591  05BD  0008               	return
  2592                           
  2593                           ;main.c: 102: Send_Byte(my_id);
  2594  05BE  087C               	movf	_my_id,w
  2595  05BF  25CB               	fcall	_Send_Byte
  2596                           
  2597                           ;main.c: 103: Buzz(3000,50);
  2598  05C0  30B8               	movlw	184
  2599  05C1  0020               	movlb	0	; select bank0
  2600  05C2  00A6               	movwf	Buzz@freq
  2601  05C3  300B               	movlw	11
  2602  05C4  00A7               	movwf	Buzz@freq+1
  2603  05C5  3032               	movlw	50
  2604  05C6  00A8               	movwf	Buzz@dur_ms
  2605  05C7  3000               	movlw	0
  2606  05C8  00A9               	movwf	Buzz@dur_ms+1
  2607  05C9  24B8               	fcall	_Buzz
  2608  05CA  0008               	return
  2609  05CB                     __end_of_Fire:	
  2610                           
  2611                           	psect	text9
  2612  05CB                     __ptext9:	
  2613 ;; *************** function _Send_Byte *****************
  2614 ;; Defined at:
  2615 ;;		line 87 in file "user.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  data            1    wreg     unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  data            1    1[COMMON] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;		None               void
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2629 ;;      Params:         0       0       0       0
  2630 ;;      Locals:         1       0       0       0
  2631 ;;      Temps:          0       0       0       0
  2632 ;;      Totals:         1       0       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    2
  2636 ;; This function calls:
  2637 ;;		_Disable_Modulation
  2638 ;;		_Modulate_Serial
  2639 ;; This function is called by:
  2640 ;;		_control_transfer
  2641 ;;		_Fire
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _Send_Byte
  2647  05CB                     _Send_Byte:	
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _Send_Byte: [wreg+status,2+status,0+pclath+cstack]
  2651                           ;Send_Byte@data stored from wreg
  2652  05CB  00F1               	movwf	Send_Byte@data
  2653                           
  2654                           ;user.c: 89: RCSTAbits.CREN = 0;
  2655  05CC  0023               	movlb	3	; select bank3
  2656  05CD  121D               	bcf	29,4	;volatile
  2657                           
  2658                           ;user.c: 90: Modulate_Serial();
  2659  05CE  25D9               	fcall	_Modulate_Serial
  2660                           
  2661                           ;user.c: 91: TXREG = data;
  2662  05CF  0871               	movf	Send_Byte@data,w
  2663  05D0  0023               	movlb	3	; select bank3
  2664  05D1  009A               	movwf	26	;volatile
  2665  05D2                     l261:	
  2666                           ;user.c: 92: while(!TXSTAbits.TRMT);
  2667                           
  2668  05D2  1C9E               	btfss	30,1	;volatile
  2669  05D3  2DD2               	goto	l261
  2670                           
  2671                           ;user.c: 93: Disable_Modulation();
  2672  05D4  25E7               	fcall	_Disable_Modulation
  2673                           
  2674                           ;user.c: 94: RCSTAbits.CREN = 1;
  2675  05D5  0023               	movlb	3	; select bank3
  2676  05D6  161D               	bsf	29,4	;volatile
  2677                           
  2678                           ;user.c: 95: RCREG;
  2679  05D7  0819               	movf	25,w	;volatile
  2680  05D8  0008               	return
  2681  05D9                     __end_of_Send_Byte:	
  2682                           
  2683                           	psect	text10
  2684  05D9                     __ptext10:	
  2685 ;; *************** function _Modulate_Serial *****************
  2686 ;; Defined at:
  2687 ;;		line 98 in file "user.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;		None               void
  2694 ;; Registers used:
  2695 ;;		None
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2701 ;;      Params:         0       0       0       0
  2702 ;;      Locals:         0       0       0       0
  2703 ;;      Temps:          0       0       0       0
  2704 ;;      Totals:         0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_Send_Byte
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _Modulate_Serial
  2717  05D9                     _Modulate_Serial:	
  2718                           
  2719                           ;user.c: 99: DACCON0bits.DACEN = 1;
  2720                           
  2721                           ;incstack = 0
  2722                           ; Regs used in _Modulate_Serial: []
  2723  05D9  0022               	movlb	2	; select bank2
  2724  05DA  1798               	bsf	24,7	;volatile
  2725                           
  2726                           ;user.c: 101: INTCONbits.GIE = 1;
  2727  05DB  178B               	bsf	11,7	;volatile
  2728                           
  2729                           ;user.c: 102: INTCONbits.PEIE = 1;
  2730  05DC  170B               	bsf	11,6	;volatile
  2731                           
  2732                           ;user.c: 103: PIE1bits.TMR1IE = 1;
  2733  05DD  0021               	movlb	1	; select bank1
  2734  05DE  1411               	bsf	17,0	;volatile
  2735                           
  2736                           ;user.c: 105: T1CONbits.nT1SYNC = 1;
  2737  05DF  0020               	movlb	0	; select bank0
  2738  05E0  1518               	bsf	24,2	;volatile
  2739                           
  2740                           ;user.c: 106: T1CONbits.TMR1ON = 1;
  2741  05E1  1418               	bsf	24,0	;volatile
  2742                           
  2743                           ;user.c: 107: TMR1 = 65486;
  2744  05E2  30FF               	movlw	255
  2745  05E3  0097               	movwf	23	;volatile
  2746  05E4  30CE               	movlw	206
  2747  05E5  0096               	movwf	22	;volatile
  2748  05E6  0008               	return
  2749  05E7                     __end_of_Modulate_Serial:	
  2750                           
  2751                           	psect	text11
  2752  05E7                     __ptext11:	
  2753 ;; *************** function _Disable_Modulation *****************
  2754 ;; Defined at:
  2755 ;;		line 110 in file "user.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		None
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2769 ;;      Params:         0       0       0       0
  2770 ;;      Locals:         0       0       0       0
  2771 ;;      Temps:          0       0       0       0
  2772 ;;      Totals:         0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_Send_Byte
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _Disable_Modulation
  2785  05E7                     _Disable_Modulation:	
  2786                           
  2787                           ;user.c: 111: INTCONbits.GIE = 0;
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _Disable_Modulation: []
  2791  05E7  138B               	bcf	11,7	;volatile
  2792                           
  2793                           ;user.c: 112: T1CONbits.TMR1ON = 0;
  2794  05E8  0020               	movlb	0	; select bank0
  2795  05E9  1018               	bcf	24,0	;volatile
  2796                           
  2797                           ;user.c: 113: DACCON0bits.DACEN = 0;
  2798  05EA  0022               	movlb	2	; select bank2
  2799  05EB  1398               	bcf	24,7	;volatile
  2800  05EC  0008               	return
  2801  05ED                     __end_of_Disable_Modulation:	
  2802                           
  2803                           	psect	text12
  2804  04B8                     __ptext12:	
  2805 ;; *************** function _Buzz *****************
  2806 ;; Defined at:
  2807 ;;		line 72 in file "user.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  freq            2    6[BANK0 ] unsigned int 
  2810 ;;  dur_ms          2    8[BANK0 ] unsigned int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  i               2   10[BANK0 ] unsigned int 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;		None               void
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2822 ;;      Params:         0       4       0       0
  2823 ;;      Locals:         0       2       0       0
  2824 ;;      Temps:          2       0       0       0
  2825 ;;      Totals:         2       6       0       0
  2826 ;;Total ram usage:        8 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    2
  2829 ;; This function calls:
  2830 ;;		___aldiv
  2831 ;; This function is called by:
  2832 ;;		_Fire
  2833 ;;		_Get_hit
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _Buzz
  2839  04B8                     _Buzz:	
  2840                           
  2841                           ;user.c: 74: PWM3CONbits.PWM3EN = 1;
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _Buzz: [wreg+status,2+status,0+pclath+cstack]
  2845  04B8  003B               	movlb	27	; select bank27
  2846  04B9  17BB               	bsf	59,7	;volatile
  2847                           
  2848                           ;user.c: 75: PWM3CONbits.PWM3OE = 1;
  2849  04BA  173B               	bsf	59,6	;volatile
  2850                           
  2851                           ;user.c: 76: PWM3PR = (16000000 / freq) - 1;
  2852  04BB  0020               	movlb	0	; select bank0
  2853  04BC  0826               	movf	Buzz@freq,w
  2854  04BD  00F1               	movwf	___aldiv@divisor
  2855  04BE  0827               	movf	Buzz@freq+1,w
  2856  04BF  00F2               	movwf	___aldiv@divisor+1
  2857  04C0  01F3               	clrf	___aldiv@divisor+2
  2858  04C1  01F4               	clrf	___aldiv@divisor+3
  2859  04C2  3000               	movlw	0
  2860  04C3  00F8               	movwf	___aldiv@dividend+3
  2861  04C4  30F4               	movlw	244
  2862  04C5  00F7               	movwf	___aldiv@dividend+2
  2863  04C6  3024               	movlw	36
  2864  04C7  00F6               	movwf	___aldiv@dividend+1
  2865  04C8  3000               	movlw	0
  2866  04C9  00F5               	movwf	___aldiv@dividend
  2867  04CA  23E9               	fcall	___aldiv
  2868  04CB  0871               	movf	?___aldiv,w
  2869  04CC  3EFF               	addlw	255
  2870  04CD  00FA               	movwf	??_Buzz
  2871  04CE  30FF               	movlw	255
  2872  04CF  3D72               	addwfc	?___aldiv+1,w
  2873  04D0  00FB               	movwf	??_Buzz+1
  2874  04D1  087A               	movf	??_Buzz,w
  2875  04D2  003B               	movlb	27	; select bank27
  2876  04D3  00B5               	movwf	53	;volatile
  2877  04D4  087B               	movf	??_Buzz+1,w
  2878  04D5  00B6               	movwf	54	;volatile
  2879                           
  2880                           ;user.c: 77: PWM3DC = PWM3PR >> 1;
  2881  04D6  0836               	movf	54,w	;volatile
  2882  04D7  00FB               	movwf	??_Buzz+1
  2883  04D8  0835               	movf	53,w	;volatile
  2884  04D9  00FA               	movwf	??_Buzz
  2885  04DA  36FB               	lsrf	??_Buzz+1,f
  2886  04DB  0CFA               	rrf	??_Buzz,f
  2887  04DC  087A               	movf	??_Buzz,w
  2888  04DD  00B3               	movwf	51	;volatile
  2889  04DE  087B               	movf	??_Buzz+1,w
  2890  04DF  00B4               	movwf	52	;volatile
  2891                           
  2892                           ;user.c: 78: PWM3PH = 0x0000;
  2893  04E0  01B1               	clrf	49	;volatile
  2894  04E1  01B2               	clrf	50	;volatile
  2895                           
  2896                           ;user.c: 79: PWM3LDCONbits.LDA = 1;
  2897  04E2  17BF               	bsf	63,7	;volatile
  2898                           
  2899                           ;user.c: 81: for(uint16_t i = 0; i <= dur_ms; i++){
  2900  04E3  0020               	movlb	0	; select bank0
  2901  04E4  01AA               	clrf	Buzz@i
  2902  04E5  01AB               	clrf	Buzz@i+1
  2903  04E6                     l255:	
  2904  04E6  082B               	movf	Buzz@i+1,w
  2905  04E7  0229               	subwf	Buzz@dur_ms+1,w
  2906  04E8  1D03               	skipz
  2907  04E9  2CEC               	goto	u1145
  2908  04EA  082A               	movf	Buzz@i,w
  2909  04EB  0228               	subwf	Buzz@dur_ms,w
  2910  04EC                     u1145:	
  2911  04EC  1C03               	btfss	3,0
  2912  04ED  2CFD               	goto	l257
  2913                           
  2914                           ;user.c: 82: _delay((unsigned long)((1)*(16000000/4000.0)));
  2915  04EE  3006               	movlw	6
  2916  04EF  00FB               	movwf	??_Buzz+1
  2917  04F0  3030               	movlw	48
  2918  04F1  00FA               	movwf	??_Buzz
  2919  04F2                     u3017:	
  2920  04F2  0BFA               	decfsz	??_Buzz,f
  2921  04F3  2CF2               	goto	u3017
  2922  04F4  0BFB               	decfsz	??_Buzz+1,f
  2923  04F5  2CF2               	goto	u3017
  2924  04F6  0000               	nop
  2925  04F7  3001               	movlw	1
  2926  04F8  0020               	movlb	0	; select bank0
  2927  04F9  07AA               	addwf	Buzz@i,f
  2928  04FA  3000               	movlw	0
  2929  04FB  3DAB               	addwfc	Buzz@i+1,f
  2930  04FC  2CE6               	goto	l255
  2931  04FD                     l257:	
  2932                           
  2933                           ;user.c: 83: }
  2934                           ;user.c: 84: PWM3CONbits.PWM3OE = 0;
  2935  04FD  003B               	movlb	27	; select bank27
  2936  04FE  133B               	bcf	59,6	;volatile
  2937  04FF  0008               	return
  2938  0500                     __end_of_Buzz:	
  2939                           
  2940                           	psect	text13
  2941  03E9                     __ptext13:	
  2942 ;; *************** function ___aldiv *****************
  2943 ;; Defined at:
  2944 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  divisor         4    1[COMMON] long 
  2947 ;;  dividend        4    5[COMMON] long 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  quotient        4    2[BANK0 ] long 
  2950 ;;  sign            1    1[BANK0 ] unsigned char 
  2951 ;;  counter         1    0[BANK0 ] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  4    1[COMMON] long 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2961 ;;      Params:         8       0       0       0
  2962 ;;      Locals:         0       6       0       0
  2963 ;;      Temps:          1       0       0       0
  2964 ;;      Totals:         9       6       0       0
  2965 ;;Total ram usage:       15 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    1
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_Buzz
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function ___aldiv
  2977  03E9                     ___aldiv:	
  2978                           
  2979                           ;incstack = 0
  2980                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2981  03E9  0020               	movlb	0	; select bank0
  2982  03EA  01A1               	clrf	___aldiv@sign
  2983  03EB  1FF4               	btfss	___aldiv@divisor+3,7
  2984  03EC  2BFA               	goto	l351
  2985  03ED  09F1               	comf	___aldiv@divisor,f
  2986  03EE  09F2               	comf	___aldiv@divisor+1,f
  2987  03EF  09F3               	comf	___aldiv@divisor+2,f
  2988  03F0  09F4               	comf	___aldiv@divisor+3,f
  2989  03F1  0AF1               	incf	___aldiv@divisor,f
  2990  03F2  1903               	skipnz
  2991  03F3  0AF2               	incf	___aldiv@divisor+1,f
  2992  03F4  1903               	skipnz
  2993  03F5  0AF3               	incf	___aldiv@divisor+2,f
  2994  03F6  1903               	skipnz
  2995  03F7  0AF4               	incf	___aldiv@divisor+3,f
  2996  03F8  01A1               	clrf	___aldiv@sign
  2997  03F9  0AA1               	incf	___aldiv@sign,f
  2998  03FA                     l351:	
  2999  03FA  1FF8               	btfss	___aldiv@dividend+3,7
  3000  03FB  2C0B               	goto	l1275
  3001  03FC  09F5               	comf	___aldiv@dividend,f
  3002  03FD  09F6               	comf	___aldiv@dividend+1,f
  3003  03FE  09F7               	comf	___aldiv@dividend+2,f
  3004  03FF  09F8               	comf	___aldiv@dividend+3,f
  3005  0400  0AF5               	incf	___aldiv@dividend,f
  3006  0401  1903               	skipnz
  3007  0402  0AF6               	incf	___aldiv@dividend+1,f
  3008  0403  1903               	skipnz
  3009  0404  0AF7               	incf	___aldiv@dividend+2,f
  3010  0405  1903               	skipnz
  3011  0406  0AF8               	incf	___aldiv@dividend+3,f
  3012  0407  3001               	movlw	1
  3013  0408  00F9               	movwf	??___aldiv
  3014  0409  0879               	movf	??___aldiv,w
  3015  040A  06A1               	xorwf	___aldiv@sign,f
  3016  040B                     l1275:	
  3017  040B  3000               	movlw	0
  3018  040C  00A5               	movwf	___aldiv@quotient+3
  3019  040D  3000               	movlw	0
  3020  040E  00A4               	movwf	___aldiv@quotient+2
  3021  040F  3000               	movlw	0
  3022  0410  00A3               	movwf	___aldiv@quotient+1
  3023  0411  3000               	movlw	0
  3024  0412  00A2               	movwf	___aldiv@quotient
  3025  0413  0874               	movf	___aldiv@divisor+3,w
  3026  0414  0473               	iorwf	___aldiv@divisor+2,w
  3027  0415  0472               	iorwf	___aldiv@divisor+1,w
  3028  0416  0471               	iorwf	___aldiv@divisor,w
  3029  0417  1903               	skipnz
  3030  0418  2C54               	goto	l1297
  3031  0419  01A0               	clrf	___aldiv@counter
  3032  041A  0AA0               	incf	___aldiv@counter,f
  3033  041B                     l1283:	
  3034  041B  1BF4               	btfsc	___aldiv@divisor+3,7
  3035  041C  2C29               	goto	l1285
  3036  041D  3001               	movlw	1
  3037  041E                     u1065:	
  3038  041E  35F1               	lslf	___aldiv@divisor,f
  3039  041F  0DF2               	rlf	___aldiv@divisor+1,f
  3040  0420  0DF3               	rlf	___aldiv@divisor+2,f
  3041  0421  0DF4               	rlf	___aldiv@divisor+3,f
  3042  0422  0B89               	decfsz	9,f
  3043  0423  2C1E               	goto	u1065
  3044  0424  3001               	movlw	1
  3045  0425  00F9               	movwf	??___aldiv
  3046  0426  0879               	movf	??___aldiv,w
  3047  0427  07A0               	addwf	___aldiv@counter,f
  3048  0428  2C1B               	goto	l1283
  3049  0429                     l1285:	
  3050  0429  3001               	movlw	1
  3051  042A                     u1085:	
  3052  042A  35A2               	lslf	___aldiv@quotient,f
  3053  042B  0DA3               	rlf	___aldiv@quotient+1,f
  3054  042C  0DA4               	rlf	___aldiv@quotient+2,f
  3055  042D  0DA5               	rlf	___aldiv@quotient+3,f
  3056  042E  0B89               	decfsz	9,f
  3057  042F  2C2A               	goto	u1085
  3058  0430  0874               	movf	___aldiv@divisor+3,w
  3059  0431  0278               	subwf	___aldiv@dividend+3,w
  3060  0432  1D03               	skipz
  3061  0433  2C3E               	goto	u1095
  3062  0434  0873               	movf	___aldiv@divisor+2,w
  3063  0435  0277               	subwf	___aldiv@dividend+2,w
  3064  0436  1D03               	skipz
  3065  0437  2C3E               	goto	u1095
  3066  0438  0872               	movf	___aldiv@divisor+1,w
  3067  0439  0276               	subwf	___aldiv@dividend+1,w
  3068  043A  1D03               	skipz
  3069  043B  2C3E               	goto	u1095
  3070  043C  0871               	movf	___aldiv@divisor,w
  3071  043D  0275               	subwf	___aldiv@dividend,w
  3072  043E                     u1095:	
  3073  043E  1C03               	skipc
  3074  043F  2C49               	goto	l1293
  3075  0440  0871               	movf	___aldiv@divisor,w
  3076  0441  02F5               	subwf	___aldiv@dividend,f
  3077  0442  0872               	movf	___aldiv@divisor+1,w
  3078  0443  3BF6               	subwfb	___aldiv@dividend+1,f
  3079  0444  0873               	movf	___aldiv@divisor+2,w
  3080  0445  3BF7               	subwfb	___aldiv@dividend+2,f
  3081  0446  0874               	movf	___aldiv@divisor+3,w
  3082  0447  3BF8               	subwfb	___aldiv@dividend+3,f
  3083  0448  1422               	bsf	___aldiv@quotient,0
  3084  0449                     l1293:	
  3085  0449  3001               	movlw	1
  3086  044A                     u1105:	
  3087  044A  36F4               	lsrf	___aldiv@divisor+3,f
  3088  044B  0CF3               	rrf	___aldiv@divisor+2,f
  3089  044C  0CF2               	rrf	___aldiv@divisor+1,f
  3090  044D  0CF1               	rrf	___aldiv@divisor,f
  3091  044E  0B89               	decfsz	9,f
  3092  044F  2C4A               	goto	u1105
  3093  0450  3001               	movlw	1
  3094  0451  02A0               	subwf	___aldiv@counter,f
  3095  0452  1D03               	btfss	3,2
  3096  0453  2C29               	goto	l1285
  3097  0454                     l1297:	
  3098  0454  0821               	movf	___aldiv@sign,w
  3099  0455  1903               	btfsc	3,2
  3100  0456  2C62               	goto	l1301
  3101  0457  09A2               	comf	___aldiv@quotient,f
  3102  0458  09A3               	comf	___aldiv@quotient+1,f
  3103  0459  09A4               	comf	___aldiv@quotient+2,f
  3104  045A  09A5               	comf	___aldiv@quotient+3,f
  3105  045B  0AA2               	incf	___aldiv@quotient,f
  3106  045C  1903               	skipnz
  3107  045D  0AA3               	incf	___aldiv@quotient+1,f
  3108  045E  1903               	skipnz
  3109  045F  0AA4               	incf	___aldiv@quotient+2,f
  3110  0460  1903               	skipnz
  3111  0461  0AA5               	incf	___aldiv@quotient+3,f
  3112  0462                     l1301:	
  3113  0462  0825               	movf	___aldiv@quotient+3,w
  3114  0463  00F4               	movwf	?___aldiv+3
  3115  0464  0824               	movf	___aldiv@quotient+2,w
  3116  0465  00F3               	movwf	?___aldiv+2
  3117  0466  0823               	movf	___aldiv@quotient+1,w
  3118  0467  00F2               	movwf	?___aldiv+1
  3119  0468  0822               	movf	___aldiv@quotient,w
  3120  0469  00F1               	movwf	?___aldiv
  3121  046A  0008               	return
  3122  046B                     __end_of___aldiv:	
  3123                           
  3124                           	psect	intentry
  3125  0004                     __pintentry:	
  3126 ;; *************** function _High_Priority_Interrupt *****************
  3127 ;; Defined at:
  3128 ;;		line 191 in file "user.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3142 ;;      Params:         0       0       0       0
  3143 ;;      Locals:         0       0       0       0
  3144 ;;      Temps:          1       0       0       0
  3145 ;;      Totals:         1       0       0       0
  3146 ;;Total ram usage:        1 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		Interrupt level 1
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155  0004                     _High_Priority_Interrupt:	
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _High_Priority_Interrupt: [wreg]
  3159  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3160  0005  3180               	pagesel	$
  3161  0006  0020               	movlb	0	; select bank0
  3162  0007  087F               	movf	127,w
  3163  0008  00F0               	movwf	??_High_Priority_Interrupt
  3164                           
  3165                           ;user.c: 192: if(PIR1bits.TMR1IF == 1)
  3166  0009  1C11               	btfss	17,0	;volatile
  3167  000A  2815               	goto	i1l292
  3168  000B  0022               	banksel	280	;# 
  3169  000C  0818               	movf	280,w	;# 
  3170  000D  3A20               	xorlw	32	;# 
  3171  000E  0098               	movwf	280	;# 
  3172                           
  3173                           ;user.c: 199: TMR1 += 65486;
  3174  000F  30CE               	movlw	206
  3175  0010  0020               	movlb	0	; select bank0
  3176  0011  0796               	addwf	22,f	;volatile
  3177  0012  30FF               	movlw	255
  3178  0013  3D97               	addwfc	23,f	;volatile
  3179                           
  3180                           ;user.c: 200: PIR1bits.TMR1IF = 0;
  3181  0014  1011               	bcf	17,0	;volatile
  3182  0015                     i1l292:	
  3183  0015  0870               	movf	??_High_Priority_Interrupt,w
  3184  0016  00FF               	movwf	127
  3185  0017  107E               	bcf	126,0	;clear compiler interrupt flag
  3186  0018  0009               	retfie
  3187  0019                     __end_of_High_Priority_Interrupt:	
  3188  007E                     btemp	set	126	;btemp
  3189  007E                     pic14e$flags	set	126
  3190  007E                     wtemp	set	126
  3191  007E                     wtemp0	set	126
  3192  0080                     wtemp1	set	128
  3193  0082                     wtemp2	set	130
  3194  0084                     wtemp3	set	132
  3195  0086                     wtemp4	set	134
  3196  0088                     wtemp5	set	136
  3197  007F                     wtemp6	set	127
  3198  007E                     ttemp	set	126
  3199  007E                     ttemp0	set	126
  3200  0081                     ttemp1	set	129
  3201  0084                     ttemp2	set	132
  3202  0087                     ttemp3	set	135
  3203  007F                     ttemp4	set	127
  3204  007E                     ltemp	set	126
  3205  007E                     ltemp0	set	126
  3206  0082                     ltemp1	set	130
  3207  0086                     ltemp2	set	134
  3208  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     15      25
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    Save@ptr	PTR unsigned int  size(1) Largest target is 8
		 -> config(BANK0[8]), 

    Load@ptr	PTR unsigned int  size(1) Largest target is 8
		 -> config(BANK0[8]), 


Critical Paths under _main in COMMON

    _control_transfer->_Send_Byte
    _Get_hit->_Buzz
    _Fire->_Buzz
    _Buzz->___aldiv

Critical Paths under _High_Priority_Interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _Get_hit->_Buzz
    _Fire->_Buzz
    _Buzz->___aldiv

Critical Paths under _High_Priority_Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_Priority_Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_Priority_Interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6262
                                             12 BANK0      3     3      0
                               _Fire
                            _Get_hit
                               _Load
                               _Save
                              _Setup
                   _control_transfer
 ---------------------------------------------------------------------------------
 (1) _control_transfer                                    11    11      0    3384
                                              2 COMMON     2     2      0
                                              0 BANK0      9     9      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Save                                                 6     2      4     250
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Load                                                 6     2      4     250
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Get_hit                                              1     1      0    1110
                               _Buzz
                            _LED_off
                             _LED_on
 ---------------------------------------------------------------------------------
 (2) _LED_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Fire                                                 0     0      0    1141
                               _Buzz
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Send_Byte                                            1     1      0      31
                                              1 COMMON     1     1      0
                 _Disable_Modulation
                    _Modulate_Serial
 ---------------------------------------------------------------------------------
 (3) _Modulate_Serial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Disable_Modulation                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Buzz                                                 8     4      4    1110
                                             10 COMMON     2     2      0
                                              6 BANK0      6     2      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     406
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _High_Priority_Interrupt                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Fire
     _Buzz
       ___aldiv
     _Send_Byte
       _Disable_Modulation
       _Modulate_Serial
   _Get_hit
     _Buzz
       ___aldiv
     _LED_off
     _LED_on
   _Load
   _Save
   _Setup
   _control_transfer
     _Send_Byte
       _Disable_Modulation
       _Modulate_Serial

 _High_Priority_Interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      26       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      19       6       31.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      26      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Aug 17 17:26:55 2014

                     __CFG_CP$OFF 0000                                l31 0025                                l44 0077  
                              l36 0040                                l61 00E1                                l80 01AB  
                              l48 0092                                l57 00C6                                l91 01F9  
                              l76 0190                                l69 0117                                l87 01DE  
                              _GO 04E9                                l98 022C                               l110 027D  
                             l102 0247                               l121 02F9                               l140 037D  
                             l132 0347                               l117 02DE                               l128 032C  
                             l146 03E8                               l261 05D2                               l351 03FA  
                             l255 04E6                               l257 04FD                               l284 0538  
                    __CFG_BORV$LO 0000                               wreg 0009                      __CFG_LVP$OFF 0000  
                            l2003 020C                              l1301 0462                              l2121 035A  
                            l2113 033F                              l2025 025A                              l2017 023F  
                            l2201 0497                              l2043 0290                       Load@address 0071  
                 __end_of_LED_off 05F3                              l1283 041B                              l1275 040B  
                            l2139 0390                              l2091 02F1                              l1293 0449  
                            l1285 0429                              l2085 02DB                              l1297 0454  
                            l2177 03DB                              l2099 030C                              l2195 048C  
                            l2187 047D                              l1751 0518                              l1851 0053  
                            l1843 0038                              l1917 012A                              l1795 0586  
                            l1891 00D9                              l1981 01BE                              l1973 01A3  
                            l1885 00C4                              l1877 00A5                              l1869 008A  
                            l1967 018D                              l1995 01F1                              l1899 00F4  
                            _ADON 04E8                              _CHS0 04EA                              _CHS1 04EB  
                            u1105 044A                              u1065 041E                              u1145 04EC  
                            u1085 042A                              u1095 043E                              u3007 0381  
                            u2215 0105                              u3017 04F2                              u2145 00B6  
                            u2065 0064                              u2425 021D                              u2265 0140  
                            u2355 01CF                              u2275 0164                              u2285 017B  
                            u2705 036B                              u2635 031D                              u2555 02AA  
                            u2565 02C9                              u2495 026B                              u2755 03AA  
                            u2907 01AF                              u2827 0029                              u2765 03C9  
                            u2917 01E2                              u2837 0044                              u2927 01FD  
                            u2847 007B                              u2937 0230                              u2857 0096  
                            u2947 024B                              u2867 00CA                              u2957 0281  
                            u2877 00E5                              u2967 02E2                              u2887 011B  
                            u2977 02FD                              u2897 0194                              u2987 0330  
                            u2997 034B                              _TMR1 0016                              _Fire 05BB  
                            _Load 057D                              _Buzz 04B8                      __CFG_WRT$OFF 0000  
                            _Save 0500                              _main 046B                     Send_Byte@data 0071  
                            fsr1h 0007                              fsr1l 0006                              btemp 007E  
                   __CFG_BOREN$ON 0000                              ltemp 007E                              start 0019  
                            ttemp 007E                              wtemp 007E                        Buzz@dur_ms 0028  
                   __CFG_MCLRE$ON 0000                   __end_of_Get_hit 057D                             ?_Fire 0070  
                           ?_Load 0071                             ?_Buzz 0026                             ?_Save 0071  
                 __end_of___aldiv 046B                             ?_main 0070                     __CFG_WDTE$OFF 0000  
__size_of_High_Priority_Interrupt 0015                             i1l292 0015                             _PMADR 0191  
                           _PMDAT 0193                             _RCREG 0199                             Load@i 0076  
                           _TXREG 019A                             Buzz@i 002A                             Save@i 0076  
                           _Setup 05A2                             _my_id 007C                             main@b 002E  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                             wtemp0 007E                             wtemp1 0080  
                           wtemp2 0082                             wtemp3 0084                             wtemp4 0086  
                           wtemp5 0088                             wtemp6 007F          __end_of_control_transfer 03E9  
                    __end_of_Fire 05CB                   __initialization 001A                      __end_of_Load 05A2  
                    __end_of_Buzz 0500                      __end_of_Save 0544                      __end_of_main 04B8  
                          DACCON0 0118                            ??_Fire 007C                            ??_Load 0075  
                          ??_Buzz 007A                            ??_Save 0075                            ??_main 002C  
                  __CFG_PLLEN$OFF 0000                         ??_LED_off 0071                            ?_Setup 0070  
                          _ADCON0 009D                            _ADCON1 009E                            _ADRESH 009C  
                          _ADRESL 009B                            _ANSELA 018C                            _LED_on 05ED  
                          _PMCON2 0196                            _OSCCON 0099                            _PWM3DC 0DB3  
                          _PWM3PH 0DB1                            _SPBRGL 019B                            _PWM3PR 0DB5  
                       ??_Get_hit 007C                    __CFG_PWRTE$OFF 0000                         ??___aldiv 0079  
              __size_of_Send_Byte 000E                    __CFG_STVREN$ON 0000                            _config 002F  
      __end_of_Disable_Modulation 05ED                       Save@address 0071                      __pdataCOMMON 007C  
                _my_random_number 0038          __size_of_Modulate_Serial 000E           __end_of__initialization 001E  
                  __pcstackCOMMON 0070                     __end_of_Setup 05BB           _High_Priority_Interrupt 0004  
                         ??_Setup 0071                 __end_of_Send_Byte 05D9                        __pbssBANK0 0037  
                         ?_LED_on 0070                        __pmaintext 046B                        __pintentry 0004  
                         _LED_off 05F0                           Load@ptr 0073                   __size_of_LED_on 0003  
                         _Get_hit 0544                 ??_Modulate_Serial 0071                           Save@ptr 0073  
               ?_control_transfer 0070                ??_control_transfer 0072         ??_High_Priority_Interrupt 0070  
                         ___aldiv 03E9                           __ptext1 0021                           __ptext2 05A2  
                         __ptext3 0500                           __ptext4 057D                           __ptext5 0544  
                         __ptext6 05ED                           __ptext7 05F0                           __ptext8 05BB  
                         __ptext9 05CB                         _T1CONbits 0018                  ___aldiv@dividend 0075  
            end_of_initialization 001E                         _RCSTAbits 019D                  ___aldiv@quotient 0022  
                       Get_hit@ID 0070                         _PORTAbits 000C                  __CFG_FOSC$INTOSC 0000  
                       _TRISAbits 008C                       _DACCON0bits 0118                _Disable_Modulation 05E7  
                  __end_of_LED_on 05F0                         _TXSTAbits 019E               control_transfer@cmd 0021  
             ?_Disable_Modulation 0070                       _BAUDCONbits 019F                     __pidataCOMMON 05F3  
             start_initialization 001A              ??_Disable_Modulation 0071                          ??_LED_on 0071  
                       _Send_Byte 05CB                     _PWM3LDCONbits 0DBF                  __CFG_LPBOREN$OFF 0000  
                        ?_LED_off 0070                         ___latbits 0000                   _Modulate_Serial 05D9  
                   __pcstackBANK0 0020                   Save@data_length 0074                          ?_Get_hit 0070  
                      ?_Send_Byte 0070                         __pnvBANK0 002F                          ?___aldiv 0071  
                  _my_power_level 0037         __size_of_control_transfer 03C8                    __size_of_Setup 0019  
                 ___aldiv@divisor 0071                   ___aldiv@counter 0020                          _PIE1bits 0091  
                 Load@data_length 0074                          _PIR1bits 0011          control_transfer@checksum 0024  
         __end_of_Modulate_Serial 05E7                        _ADCON0bits 009D                control_transfer@id 0020  
                        Buzz@freq 0026                  __size_of_LED_off 0003       control_transfer@power_level 0022  
                     ??_Send_Byte 0071                  __size_of_Get_hit 0039          ?_High_Priority_Interrupt 0070  
                __size_of___aldiv 0082     control_transfer@random_number 0023                          __ptext10 05D9  
                        __ptext11 05E7                          __ptext12 04B8                          __ptext13 03E9  
                   __size_of_Fire 0010                     __size_of_Load 0025                     __size_of_Buzz 0048  
                   __size_of_Save 0044                     __size_of_main 004D                 control_transfer@i 0025  
               control_transfer@x 0028                 control_transfer@y 0027                  ?_Modulate_Serial 0070  
                _control_transfer 0021                        _INTCONbits 000B       __size_of_Disable_Modulation 0006  
                     _PWM3CONbits 0DBB                       pic14e$flags 007E                          intlevel1 0000  
 __end_of_High_Priority_Interrupt 0019                        _PMCON1bits 0195                 __CFG_CLKOUTEN$OFF 0000  
                    ___aldiv@sign 0021  
